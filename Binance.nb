(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     39008,        957]
NotebookOptionsPosition[     37857,        928]
NotebookOutlinePosition[     38257,        944]
CellTagsIndexPosition[     38214,        941]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{"<<", "ExchangeLink`"}], "\n", 
 RowBox[{"BinanceTicker24hr", "[", "\"\<BTCUSDT\>\"", "]"}]}], "Code",
 CellChangeTimes->{{3.8570965105662394`*^9, 3.857096533063378*^9}, {
  3.857096574120466*^9, 3.8570965778563385`*^9}, {3.861849744207793*^9, 
  3.8618497443975368`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"6a16b74d-a653-4588-a539-ca8c0e3a51ad"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"priceChange\"\>", "\[Rule]", 
    RowBox[{"-", "857.79`"}]}], ",", 
   RowBox[{"\<\"priceChangePercent\"\>", "\[Rule]", 
    RowBox[{"-", "2.802`"}]}], ",", 
   RowBox[{"\<\"weightedAvgPrice\"\>", "\[Rule]", "30171.47675753`"}], ",", 
   RowBox[{"\<\"prevClosePrice\"\>", "\[Rule]", "30613.68`"}], ",", 
   RowBox[{"\<\"lastPrice\"\>", "\[Rule]", "29755.89`"}], ",", 
   RowBox[{"\<\"lastQty\"\>", "\[Rule]", "0.08442`"}], ",", 
   RowBox[{"\<\"bidPrice\"\>", "\[Rule]", "29755.88`"}], ",", 
   RowBox[{"\<\"bidQty\"\>", "\[Rule]", "2.77274`"}], ",", 
   RowBox[{"\<\"askPrice\"\>", "\[Rule]", "29755.89`"}], ",", 
   RowBox[{"\<\"askQty\"\>", "\[Rule]", "0.20842`"}], ",", 
   RowBox[{"\<\"openPrice\"\>", "\[Rule]", "30613.68`"}], ",", 
   RowBox[{"\<\"highPrice\"\>", "\[Rule]", "30788.37`"}], ",", 
   RowBox[{"\<\"lowPrice\"\>", "\[Rule]", "29450.38`"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "59271.06155`"}], ",", 
   RowBox[{"\<\"quoteVolume\"\>", "\[Rule]", 
    "1.7882954559498757`17.25243927301036*^9"}], ",", 
   RowBox[{"\<\"openTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Tue 17 May 2022 12:37:09\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
           StyleBox["4", NumberMarks -> False, StripOnInput -> False]}], 
         FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2022", ",", "5", ",", "17", ",", "12", ",", "37", ",", 
              "9.847000122070312`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "4.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"closeTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Wed 18 May 2022 12:37:09\"", 
        StyleBox[
         RowBox[{"\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
           StyleBox["4", NumberMarks -> False, StripOnInput -> False]}], 
         FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2022", ",", "5", ",", "18", ",", "12", ",", "37", ",", 
              "9.847000122070312`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "4.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"firstId\"\>", "\[Rule]", "1370630461"}], ",", 
   RowBox[{"\<\"lastId\"\>", "\[Rule]", "1371905501"}], ",", 
   RowBox[{"\<\"count\"\>", "\[Rule]", "1275041"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.861849744909951*^9, 3.8618497652932153`*^9}, 
   3.861850809743881*^9, 3.861850946052383*^9, {3.8618510422441454`*^9, 
   3.8618510716584454`*^9}, 3.8618513265400653`*^9, {3.8618513864862137`*^9, 
   3.86185146395725*^9}, {3.8618515083869276`*^9, 3.8618515237611103`*^9}, 
   3.861851597958179*^9, 3.861851789327655*^9, 3.8618518291164627`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"85773959-f311-4a9b-9943-3288bc60b443"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExchangeLink`Binance`*"}]], "Code",
 CellChangeTimes->{{3.8618516073317847`*^9, 3.8618516254031363`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"d0747c3c-37e2-461c-89e2-e7b09ffb4823"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ExchangeLink`Binance`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], " ", 
              
              StyleBox["ExchangeLink`Binance`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["BinanceKlines", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbe61795-2677-4fbb-aa3e-e21b3cb5ff18", {
                   "BinanceKlines", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceMiniTickerStream", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbe61795-2677-4fbb-aa3e-e21b3cb5ff18", {
                   "BinanceMiniTickerStream", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTicker24hr", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbe61795-2677-4fbb-aa3e-e21b3cb5ff18", {
                   "BinanceTicker24hr", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTickerStream", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbe61795-2677-4fbb-aa3e-e21b3cb5ff18", {
                   "BinanceTickerStream", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceKlinesStream", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbe61795-2677-4fbb-aa3e-e21b3cb5ff18", {
                   "BinanceKlinesStream", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinancePing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbe61795-2677-4fbb-aa3e-e21b3cb5ff18", {
                   "BinancePing", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTickerPrice", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbe61795-2677-4fbb-aa3e-e21b3cb5ff18", {
                   "BinanceTickerPrice", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTime", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-fbe61795-2677-4fbb-aa3e-e21b3cb5ff18", {
                   "BinanceTime", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellChangeTimes->{3.861851625747526*^9, 3.8618517907132044`*^9, 
  3.861851829906792*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"3b49dd66-cbb6-4c7f-8b72-15ec20f31ed9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "BinanceKlines"}]], "Code",
 CellChangeTimes->{{3.86185162828275*^9, 3.861851645256024*^9}, {
  3.861851812203725*^9, 3.861851814001486*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"79fa702c-c03d-4f8b-97f3-e75799c0a061"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BinanceKlines[\\\"SYMBOL\\\", \
\\\"interval\\\"]\\nBinanceKlines[\\\"SYMBOL\\\", \\\"interval\\\", \
opts]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[
           TagBox[GridBox[{
              {
               StyleBox[
                TagBox[
                 TooltipBox[
                  StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                   StripOnInput->False],
                  "\"Definitions\"",
                  TooltipStyle->"TextStyling"],
                 Annotation[#, "Definitions", "Tooltip"]& ], "DialogStyle",
                StripOnInput->False]},
              {
               TemplateBox[{"\"\[ThinSpace]\"", 
                 GridBox[{{
                    RowBox[{
                    RowBox[{"BinanceKlines", "[", 
                    RowBox[{
                    "ExchangeLink`Binance`Private`symbol_", ",", 
                    "ExchangeLink`Binance`Private`interval_", ",", 
                    RowBox[{"ExchangeLink`Binance`Private`opts", ":", 
                    RowBox[{"OptionsPattern", "[", 
                    RowBox[{"{", "}"}], "]"}]}]}], "]"}], ":=", 
                    RowBox[{"ExchangeLink`Binance`Private`binancePublic", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{"BinanceKlines", ",", "\"v3\"", ",", "\"klines\"",
                     ",", 
                    
                    RowBox[{"\"symbol\"", "\[Rule]", 
                    "ExchangeLink`Binance`Private`symbol"}], ",", 
                    
                    RowBox[{"\"interval\"", "\[Rule]", 
                    "ExchangeLink`Binance`Private`interval"}]}], "}"}], ",", 
                    "ExchangeLink`Binance`Private`opts"}], "]"}]}]}, {" "}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  DefaultBaseStyle -> "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                "RowDefault"]}
             },
             DefaultBaseStyle->"Column",
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Column"],
           FrameMargins->{{6, 0}, {3, 6}}], "\<\"\"\>"},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    
                    StyleBox["\<\" Default Definitions\"\>", 
                    "InformationRowLabel",
                    StripOnInput->False],
                    "\"DefaultValues\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "DefaultValues", "Tooltip"]& ], 
                   InterpretationBox[GridBox[{
                    {
                    RowBox[{
                    RowBox[{"SyntaxInformation", "[", "BinanceKlines", "]"}], 
                    "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"ArgumentsPattern\"\>", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"_", ",", "_", ",", 
                    RowBox[{"OptionsPattern", "[", "BinanceKlines", "]"}]}], 
                    "}"}]}], ",", 
                    RowBox[{"\<\"OptionNames\"\>", "\[Rule]", 
                    RowBox[{"{", "}"}]}]}], "}"}]}]},
                    {" "}
                    },
                    BaselinePosition->{Baseline, {1, 1}},
                    
                    GridBoxAlignment->{
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
                    
                    ColumnForm[{
                    SyntaxInformation[ExchangeLink`Binance`BinanceKlines] = {
                    "ArgumentsPattern" -> {
                    Blank[], 
                    Blank[], 
                    OptionsPattern[ExchangeLink`Binance`BinanceKlines]}, 
                    "OptionNames" -> {}}, 
                    SpaceForm[1]}],
                    Editable->False]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"startTime\"\>", "\[Rule]", "Automatic"}], 
                    ",", 
                    RowBox[{"\<\"endTime\"\>", "\[Rule]", "Automatic"}], ",", 
                    RowBox[{"\<\"limit\"\>", "\[Rule]", "Automatic"}]}], 
                    "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], \
"\<\"ExchangeLink`Binance`BinanceKlines\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->{{6, 6}, {6, 3}}], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"BinanceKlines[\\\"SYMBOL\\\", \
\\\"interval\\\"]\\nBinanceKlines[\\\"SYMBOL\\\", \\\"interval\\\", \
opts]\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {3., 7.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {3., 7.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[<|
   "ObjectType" -> "Symbol", "Usage" -> 
    "BinanceKlines[\"SYMBOL\", \"interval\"]\nBinanceKlines[\"SYMBOL\", \
\"interval\", opts]", "Documentation" -> None, "OwnValues" -> None, 
    "UpValues" -> None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ExchangeLink`Binance`BinanceKlines, {
      ExchangeLink`Binance`BinanceKlines[
         Pattern[ExchangeLink`Binance`Private`symbol, 
          Blank[]], 
         Pattern[ExchangeLink`Binance`Private`interval, 
          Blank[]], 
         Pattern[ExchangeLink`Binance`Private`opts, 
          OptionsPattern[{}]]] :> 
       ExchangeLink`Binance`Private`binancePublic[{
         ExchangeLink`Binance`BinanceKlines, "v3", "klines", "symbol" -> 
          ExchangeLink`Binance`Private`symbol, "interval" -> 
          ExchangeLink`Binance`Private`interval}, 
         ExchangeLink`Binance`Private`opts]}], "SubValues" -> None, 
    "DefaultValues" -> 
    Information`InformationValueForm[
     DefaultValues, ExchangeLink`Binance`BinanceKlines, {
      SyntaxInformation[ExchangeLink`Binance`BinanceKlines] -> {
        "ArgumentsPattern" -> {
           Blank[], 
           Blank[], 
           OptionsPattern[ExchangeLink`Binance`BinanceKlines]}, 
         "OptionNames" -> {}}}], "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {
     "startTime" -> Automatic, "endTime" -> Automatic, "limit" -> Automatic}, 
    "Attributes" -> {}, "FullName" -> "ExchangeLink`Binance`BinanceKlines"|>, 
   False]]], "Output",
 CellChangeTimes->{{3.861851639429676*^9, 3.8618516456494775`*^9}, {
  3.8618517913752036`*^9, 3.861851830659995*^9}},
 CellLabel->"Out[14]=",ExpressionUUID->"d4400eba-4278-425f-a1ff-12681e69839b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceKlines", "[", 
  RowBox[{"\"\<BTCUSDT\>\"", ",", " ", "\"\<5m\>\""}], "]"}]], "Code",
 CellChangeTimes->{{3.8618518346162777`*^9, 3.861851848205026*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"45a41e43-2b63-4ca9-b4ab-201eeac0619b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Mon 16 May 2022 19:00:00\"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
                    StyleBox[
                    "4", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2022", ",", "5", ",", "16", ",", "19", ",", "0", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "4.`"}], "]"}]},
              "DateObject",
              Editable->False], ",", "29489.46`", ",", "29566.74`", ",", 
             "29460.93`", ",", "29532.27`", ",", "259.91762`", ",", 
             TemplateBox[{
               RowBox[{"\"Mon 16 May 2022 19:04:59\"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
                    StyleBox[
                    "4", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2022", ",", "5", ",", "16", ",", "19", ",", "4", ",", 
                    "59.99900007247925`"}], "}"}], ",", "\"Instant\"", ",", 
                   "\"Gregorian\"", ",", "4.`"}], "]"}]},
              "DateObject",
              Editable->False], ",", "7.6722291469124`*^6", ",", "6883", ",", 
             "135.58574`", ",", "4.0020522953784`*^6", ",", "0"}], "}"}], ",", 
           TemplateBox[{"498"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            RowBox[{
             TemplateBox[{
               RowBox[{"\"Wed 18 May 2022 12:35:00\"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
                    StyleBox[
                    "4", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2022", ",", "5", ",", "18", ",", "12", ",", "35", ",", 
                    "0.`"}], "}"}], ",", "\"Instant\"", ",", "\"Gregorian\"", 
                   ",", "4.`"}], "]"}]},
              "DateObject",
              Editable->False], ",", "29754.83`", ",", "29783.21`", ",", 
             "29743.37`", ",", "29765.43`", ",", "101.49612`", ",", 
             TemplateBox[{
               RowBox[{"\"Wed 18 May 2022 12:39:59\"", 
                 StyleBox[
                  
                  RowBox[{
                   "\"GMT\"", "\[InvisibleSpace]", "+", "\[InvisibleSpace]", 
                    StyleBox[
                    "4", NumberMarks -> False, StripOnInput -> False]}], 
                  FontColor -> GrayLevel[0.5]]}], 
               RowBox[{"DateObject", "[", 
                 RowBox[{
                   RowBox[{"{", 
                    
                    RowBox[{
                    "2022", ",", "5", ",", "18", ",", "12", ",", "39", ",", 
                    "59.99900007247925`"}], "}"}], ",", "\"Instant\"", ",", 
                   "\"Gregorian\"", ",", "4.`"}], "]"}]},
              "DateObject",
              Editable->False], ",", "3.0206644419587`*^6", ",", "2644", ",", 
             "52.25702`", ",", "1.5551541849654`*^6", ",", "0"}], "}"}]}], 
          "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 26599065181959554423, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{61., {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{61., {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 26599065181959554423, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{45., {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{45., {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 26599065181959554423, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{79., {0., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[26599065181959554423 === $SessionID, 
   Out[15], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.861851849681551*^9},
 CellLabel->"Out[15]=",ExpressionUUID->"61518a43-6e05-4cd6-b536-3e1fff0f5437"]
}, Open  ]]
},
WindowSize->{958, 980},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1ef2f79e-abd2-48cf-bccd-7f6940adc5a1"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 375, 6, 70, "Code",ExpressionUUID->"6a16b74d-a653-4588-a539-ca8c0e3a51ad"],
Cell[958, 30, 3141, 63, 146, "Output",ExpressionUUID->"85773959-f311-4a9b-9943-3288bc60b443"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4136, 98, 213, 3, 52, "Code",ExpressionUUID->"d0747c3c-37e2-461c-89e2-e7b09ffb4823"],
Cell[4352, 103, 6098, 142, 113, "Output",ExpressionUUID->"3b49dd66-cbb6-4c7f-8b72-15ec20f31ed9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10487, 250, 248, 4, 51, "Code",ExpressionUUID->"79fa702c-c03d-4f8b-97f3-e75799c0a061"],
Cell[10738, 256, 14164, 343, 122, "Output",ExpressionUUID->"d4400eba-4278-425f-a1ff-12681e69839b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24939, 604, 263, 4, 51, "Code",ExpressionUUID->"45a41e43-2b63-4ca9-b4ab-201eeac0619b"],
Cell[25205, 610, 12636, 315, 197, "Output",ExpressionUUID->"61518a43-6e05-4cd6-b536-3e1fff0f5437"]
}, Open  ]]
}
]
*)

