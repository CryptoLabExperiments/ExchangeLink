(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    169590,       3849]
NotebookOptionsPosition[    162058,       3715]
NotebookOutlinePosition[    162428,       3731]
CellTagsIndexPosition[    162385,       3728]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "ExchangeLink ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Title",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "9988faf8-60a0-4ded-abac-c17784380a91"]
}], "Title",ExpressionUUID->"9eca8ff7-13d5-40c4-a3cc-a9f5dc8b827e"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "04f78537-9a99-4214-867c-a39fb933a3e4"]
}], "Section",ExpressionUUID->"85dbaebe-6107-4b20-9130-c46c7e50e26e"],

Cell["Initialization cell", "Text",ExpressionUUID->"dbacc3fb-88a9-4e2b-baad-98418b92a2e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$HistoryLength", " ", "=", " ", "0"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<ExchangeLink`\>\"", "]"}], ";"}]}], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"cfcbf03f-ee8c-42bc-a3dd-feb3e7685177"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Information ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "d8b0c0c5-edc5-4ba7-8a58-349b915826e7"]
}], "Section",ExpressionUUID->"73d0ce59-6d19-4bb1-9d8e-a6bb73743769"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExchangeLink`Binance`*"}]], "Code",
 CellLabel->"In[27]:=",ExpressionUUID->"ff3e357e-6a4a-49e2-94a3-7d0123522ea2"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ExchangeLink`Binance`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              
              StyleBox["ExchangeLink`Binance`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["BinanceAccountInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceAccountInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceKlines", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceKlines", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderCancel", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOrderCancel", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinancePrice", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinancePrice", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceAggTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceAggTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceMyTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceMyTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderCreate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOrderCreate", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTicker", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceTicker", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceAveragePrice", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceAveragePrice", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderCancel", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOCOrderCancel", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderGet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOrderGet", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTime", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceTime", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceBookTicker", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceBookTicker", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderCreate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOCOrderCreate", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrdersAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOrdersAll", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceDepth", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceDepth", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderGet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOCOrderGet", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrdersNow", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOrdersNow", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$BinanceExchangeInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "$BinanceExchangeInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceExchangeInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceExchangeInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrdersAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOCOrdersAll", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderTest", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOrderTest", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], ""},
               {
                ButtonBox[
                 StyleBox["BinanceHistoricalTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceHistoricalTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrdersNow", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinanceOCOrdersNow", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinancePing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-afbdd0f4-ea0e-44fa-9a9c-e0803747106b", {
                   "BinancePing", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], ""}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellLabel->"Out[27]=",ExpressionUUID->"49684998-aff0-44a1-a7d9-1d73b13b9a1c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "General data ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "3fdb2353-c552-4e18-90d9-936d54c08339"]
}], "Section",ExpressionUUID->"19d08895-99cf-44a8-be98-356a0246821d"],

Cell["General information from Binance server", "Text",ExpressionUUID->"da47335a-6c7f-411a-8322-15afd7b2f9e6"],

Cell["\<\
Check that server is available and get server time. This need if you want use \
trade API. Server time used in the creating of e-sign.\
\>", "Text",ExpressionUUID->"aed67ffc-dfa0-4820-a0b2-6b31a983f72f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BinancePing", "[", "]"}], "\n", 
 RowBox[{"BinanceTime", "[", "]"}]}], "Code",
 CellLabel->"In[28]:=",ExpressionUUID->"e18d0e66-fca2-4120-8dfd-c53971823316"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"3bf7c65c-d5e9-4cd5-bda9-d7bf85f93a62"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"serverTime\"\>", "\[Rule]", 
   TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:39:07\"", 
       StyleBox[
        RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
          StyleBox["4.`", NumberMarks -> False, StripOnInput -> False]}], 
        FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2020", ",", "3", ",", "15", ",", "18", ",", "39", ",", 
             "7.595000267028809`"}], "}"}], ",", "\"Instant\"", ",", 
         "\"Gregorian\"", ",", "4.`"}], "]"}]},
    "DateObject",
    Editable->False]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"e93ca12e-98e7-4d87-b9fa-dbffb774c01f"]
}, Open  ]],

Cell["\<\
Information about order limits, precision. List of all pairs available on \
Binance and current statuses\
\>", "Text",ExpressionUUID->"257132ec-378a-4fcf-ba61-7ff6f5c66466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceExchangeInfo", "[", "]"}]], "Code",
 CellLabel->"In[30]:=",ExpressionUUID->"d5560724-e0ea-4935-86c3-5baaf73145fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"timezone\"\>", "\[Rule]", "\<\"UTC\"\>"}], ",", 
           TemplateBox[{"3"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"symbols\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[LeftAssociation]", 
               RowBox[{
                RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"ETHBTC\"\>"}], ",", 
                RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"TRADING\"\>"}], ",", 
                RowBox[{"\<\"baseAsset\"\>", "\[Rule]", "\<\"ETH\"\>"}], ",", 
                TemplateBox[{"9"},
                 "OutputSizeLimit`Skeleton"], ",", 
                RowBox[{
                 RowBox[{"\<\"i\"\>", "\[Ellipsis]", "\<\"ed\"\>"}], 
                 "\[Rule]", "True"}], ",", 
                RowBox[{"\<\"isMarginTradingAllowed\"\>", "\[Rule]", "True"}],
                 ",", 
                RowBox[{"\<\"filters\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"PRICE_FILTER\"\>"}], ",", 
                    RowBox[{"\<\"minPrice\"\>", "\[Rule]", "1.`*^-6"}], ",", 
                    RowBox[{"\<\"maxPrice\"\>", "\[Rule]", "100000.`"}], ",", 
                    RowBox[{"\<\"tickSize\"\>", "\[Rule]", "1.`*^-6"}]}], 
                    "\[RightAssociation]"}], ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"PERCENT_PRICE\"\>"}], ",", 
                    RowBox[{"\<\"multiplierUp\"\>", "\[Rule]", "5"}], ",", 
                    RowBox[{"\<\"multiplierDown\"\>", "\[Rule]", "0.2`"}], 
                    ",", 
                    RowBox[{"\<\"avgPriceMins\"\>", "\[Rule]", "5"}]}], 
                    "\[RightAssociation]"}], ",", 
                   TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"MAX_NUM_ALGO_ORDERS\"\>"}], ",", 
                    RowBox[{"\<\"maxNumAlgoOrders\"\>", "\[Rule]", "5"}]}], 
                    "\[RightAssociation]"}]}], "}"}]}]}], 
               "\[RightAssociation]"}], ",", 
              TemplateBox[{"766"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\[LeftAssociation]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 23955581560047757687, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 23955581560047757687, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 30, 23955581560047757687, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23955581560047757687 === $SessionID, 
   Out[30], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[30]=",ExpressionUUID->"758c94cd-fa28-4328-83d5-0d045ada58d9"]
}, Open  ]],

Cell["ExchangeInfo cache ", "Text",ExpressionUUID->"1062b093-279e-45f7-ae63-a53ffcdd8aae"],

Cell[CellGroupData[{

Cell[BoxData["$BinanceExchangeInfo"], "Code",
 CellLabel->"In[31]:=",ExpressionUUID->"8d54f4e8-7193-4f5c-a896-c3c41726d23b"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"timezone\"\>", "\[Rule]", "\<\"UTC\"\>"}], ",", 
           TemplateBox[{"3"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"symbols\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[LeftAssociation]", 
               RowBox[{
                RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"ETHBTC\"\>"}], ",", 
                RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"TRADING\"\>"}], ",", 
                RowBox[{"\<\"baseAsset\"\>", "\[Rule]", "\<\"ETH\"\>"}], ",", 
                TemplateBox[{"9"},
                 "OutputSizeLimit`Skeleton"], ",", 
                RowBox[{
                 RowBox[{"\<\"i\"\>", "\[Ellipsis]", "\<\"ed\"\>"}], 
                 "\[Rule]", "True"}], ",", 
                RowBox[{"\<\"isMarginTradingAllowed\"\>", "\[Rule]", "True"}],
                 ",", 
                RowBox[{"\<\"filters\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"PRICE_FILTER\"\>"}], ",", 
                    RowBox[{"\<\"minPrice\"\>", "\[Rule]", "1.`*^-6"}], ",", 
                    RowBox[{"\<\"maxPrice\"\>", "\[Rule]", "100000.`"}], ",", 
                    RowBox[{"\<\"tickSize\"\>", "\[Rule]", "1.`*^-6"}]}], 
                    "\[RightAssociation]"}], ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"PERCENT_PRICE\"\>"}], ",", 
                    RowBox[{"\<\"multiplierUp\"\>", "\[Rule]", "5"}], ",", 
                    RowBox[{"\<\"multiplierDown\"\>", "\[Rule]", "0.2`"}], 
                    ",", 
                    RowBox[{"\<\"avgPriceMins\"\>", "\[Rule]", "5"}]}], 
                    "\[RightAssociation]"}], ",", 
                   TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"MAX_NUM_ALGO_ORDERS\"\>"}], ",", 
                    RowBox[{"\<\"maxNumAlgoOrders\"\>", "\[Rule]", "5"}]}], 
                    "\[RightAssociation]"}]}], "}"}]}]}], 
               "\[RightAssociation]"}], ",", 
              TemplateBox[{"766"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\[LeftAssociation]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 31, 23955581560047757687, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 31, 23955581560047757687, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 31, 23955581560047757687, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23955581560047757687 === $SessionID, 
   Out[31], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[31]=",ExpressionUUID->"db5c78f6-7fac-4003-a299-0ee691e18336"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Market data ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "dd584cf2-6bad-4b1e-9446-da3ddbe62f11"]
}], "Section",ExpressionUUID->"7de50ca5-b424-4d16-9c24-084e2a93fb72"],

Cell["Current order book", "Text",ExpressionUUID->"a311d586-9708-4079-a6c4-0776847830b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceDepth", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[8]:=",ExpressionUUID->"b029f3b9-072c-4deb-933c-b3817f5a2130"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"lastUpdateId\"\>", "\[Rule]", "2652601178"}], ",", 
   RowBox[{"\<\"bids\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5272.63`", ",", "0.003792`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5272.62`", ",", "0.206247`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5272.59`", ",", "0.381495`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5272.48`", ",", "2.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5271.68`", ",", "0.07125`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5271.67`", ",", "0.037135`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5271.66`", ",", "0.035638`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5271.35`", ",", "0.2985`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5271.3`", ",", "0.25181`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5271.15`", ",", "0.153478`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5271.14`", ",", "0.076739`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5270.63`", ",", "0.003737`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5270.06`", ",", "0.187508`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5270.05`", ",", "0.093754`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5269.25`", ",", "0.114126`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5269.19`", ",", "0.385874`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5268.98`", ",", "0.036352`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5268.97`", ",", "0.018176`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5268.38`", ",", "0.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5268.37`", ",", "0.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5268.17`", ",", "0.1764`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5268.16`", ",", "0.0882`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5267.64`", ",", "0.18`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5267.63`", ",", "0.09`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5267.59`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5267.11`", ",", "0.1764`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5267.1`", ",", "0.0882`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5266.79`", ",", "0.266`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5266.75`", ",", "0.133`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5266.58`", ",", "0.139752`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5266.57`", ",", "0.069876`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5266.`", ",", "0.008501`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.95`", ",", "0.1746`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.94`", ",", "0.0873`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.51`", ",", "0.499232`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.5`", ",", "0.249616`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.45`", ",", "0.001934`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.33`", ",", "0.002133`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.23`", ",", "0.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.22`", ",", "1.147228`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.12`", ",", "1.17`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.02`", ",", "0.379865`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.01`", ",", "0.069876`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5265.`", ",", "5.957213`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5264.86`", ",", "0.0891`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5263.93`", ",", "0.157858`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5263.46`", ",", "0.379978`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5263.45`", ",", "0.069876`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5262.55`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5262.54`", ",", "0.077438`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5262.1`", ",", "0.012`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5262.`", ",", "0.776068`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5261.93`", ",", "0.057013`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5261.92`", ",", "0.004926`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5261.89`", ",", "0.069876`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5261.84`", ",", "0.669719`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5261.83`", ",", "3.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5261.54`", ",", "0.22807`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5261.53`", ",", "0.032322`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5260.82`", ",", "0.021084`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5260.`", ",", "0.891692`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5259.76`", ",", "1.38`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5259.42`", ",", "0.005`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5258.95`", ",", "1.595807`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5258.18`", ",", "0.009509`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5258.11`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5257.99`", ",", "0.475437`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5257.25`", ",", "1.985951`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5257.24`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5257.1`", ",", "0.12`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5256.04`", ",", "0.25059`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5255.89`", ",", "0.475417`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5255.74`", ",", "0.309`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5255.26`", ",", "0.00248`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5255.01`", ",", "0.467322`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5255.`", ",", "5.080494`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5254.47`", ",", "0.813791`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5254.13`", ",", "1.139`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5254.09`", ",", "0.3236`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5253.79`", ",", "0.4758`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5253.21`", ",", "0.197372`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5252.14`", ",", "0.010748`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5252.`", ",", "0.002843`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5251.76`", ",", "0.002806`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5251.72`", ",", "0.0178`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5251.67`", ",", "0.004438`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5251.58`", ",", "0.009483`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5251.27`", ",", "0.019043`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5251.`", ",", "0.575949`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5250.76`", ",", "0.019213`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5250.51`", ",", "0.038156`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5250.05`", ",", "0.004691`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5250.`", ",", "7.57719`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5249.9`", ",", "0.019048`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5249.63`", ",", "0.040327`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5249.`", ",", "0.005`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5248.82`", ",", "0.6274`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5247.92`", ",", "2.030078`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5247.77`", ",", "0.100913`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5247.02`", ",", "0.183172`"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"\<\"asks\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"5273.76`", ",", "0.011376`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5274.`", ",", "0.157564`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5274.04`", ",", "0.09`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5274.35`", ",", "5.586029`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5274.49`", ",", "0.041442`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5274.5`", ",", "0.001991`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5274.6`", ",", "0.003884`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5274.94`", ",", "1.768368`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5274.95`", ",", "0.002847`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5275.`", ",", "1.271352`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5275.01`", ",", "0.00191`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5275.18`", ",", "1.5`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5275.51`", ",", "0.092641`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5275.62`", ",", "0.003231`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5275.86`", ",", "0.003436`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5275.93`", ",", "0.069876`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5276.31`", ",", "0.00248`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5276.33`", ",", "0.486896`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5276.48`", ",", "0.017623`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5276.91`", ",", "0.2`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5276.92`", ",", "0.075`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5276.94`", ",", "0.004001`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5277.46`", ",", "0.0873`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5277.48`", ",", "0.644217`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5277.49`", ",", "0.069876`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5277.68`", ",", "0.004547`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5277.77`", ",", "0.093754`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5277.83`", ",", "0.005103`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5277.98`", ",", "0.378932`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5277.99`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.`", ",", "0.492388`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.07`", ",", "0.002443`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.12`", ",", "0.01796`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.43`", ",", "0.017659`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.5`", ",", "0.0024`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.58`", ",", "0.3`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.59`", ",", "0.06667`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.62`", ",", "0.200008`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.66`", ",", "0.336203`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.68`", ",", "0.378883`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.69`", ",", "0.069603`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5278.94`", ",", "0.005`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.05`", ",", "0.069876`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.06`", ",", "0.002492`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.24`", ",", "0.344721`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.38`", ",", "0.008824`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.6`", ",", "0.056822`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.62`", ",", "0.486922`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.66`", ",", "0.09`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.86`", ",", "0.002`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5279.99`", ",", "0.23636`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.`", ",", "0.029833`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.04`", ",", "0.004122`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.19`", ",", "0.00209`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.25`", ",", "0.033991`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.57`", ",", "0.004438`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.62`", ",", "0.464027`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.64`", ",", "0.004729`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.73`", ",", "0.00604`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5280.89`", ",", "0.006799`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5282.08`", ",", "0.8791`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5282.14`", ",", "0.318073`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5282.21`", ",", "0.032336`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5282.65`", ",", "1.516049`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5282.71`", ",", "0.197437`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5282.72`", ",", "0.002244`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5282.88`", ",", "0.064661`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.07`", ",", "0.227442`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.13`", ",", "0.911684`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.17`", ",", "0.898208`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.52`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.62`", ",", "0.016669`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.64`", ",", "0.022611`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.65`", ",", "10.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.67`", ",", "0.003088`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5283.7`", ",", "0.25`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5284.`", ",", "0.005457`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5284.04`", ",", "0.004244`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5284.2`", ",", "0.028538`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5284.24`", ",", "0.040179`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5284.39`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5284.61`", ",", "0.002352`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5284.74`", ",", "1.251`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5284.9`", ",", "0.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5285.`", ",", "0.065681`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5285.05`", ",", "0.005724`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5285.29`", ",", "0.473106`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5285.71`", ",", "0.015908`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5286.12`", ",", "0.00374`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5286.31`", ",", "0.636703`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5286.36`", ",", "0.0025`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5286.51`", ",", "0.002328`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5286.76`", ",", "0.25`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5286.83`", ",", "0.018196`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5286.84`", ",", "0.00248`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5286.9`", ",", "0.1`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5287.03`", ",", "0.004929`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5287.39`", ",", "0.473116`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5287.42`", ",", "0.006755`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"5288.`", ",", "0.02`"}], "}"}]}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[8]=",ExpressionUUID->"346aaabc-bda3-491e-b62e-5dce6a1e40d6"]
}, Open  ]],

Cell["Last trades for the pair - order size, time and other", "Text",ExpressionUUID->"47244977-20ba-41e8-8ff1-cbc6c84c91ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTrades", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[9]:=",ExpressionUUID->"e6ed90fb-8bfc-4b64-819e-90251de0cb1d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"id\"\>", "\[Rule]", "267611827"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "5266.94`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.002043`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "10.76035842`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:25:51\"", 
                  StyleBox[
                   RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "4.`", NumberMarks -> False, StripOnInput -> False]}], 
                   FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "3", ",", "15", ",", "18", ",", "25", ",", 
                    "51.50600004196167`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "4.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyerMaker\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"498"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"id\"\>", "\[Rule]", "267612326"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "5278.66`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.002845`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "15.0177877`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:26:30\"", 
                  StyleBox[
                   RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "4.`", NumberMarks -> False, StripOnInput -> False]}], 
                   FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "3", ",", "15", ",", "18", ",", "26", ",", 
                    "30.984000205993652`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "4.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyerMaker\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, LinebreakAdjustments -> 
              {1., 100, 0, 0, 0}, LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 23955581560047757687, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 23955581560047757687, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 9, 23955581560047757687, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23955581560047757687 === $SessionID, 
   Out[9], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[9]=",ExpressionUUID->"949531cd-4670-4288-b350-8fd891ebaf56"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Market prices ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "528c79b6-2f27-474b-bf64-26937ed69a6e"]
}], "Section",ExpressionUUID->"5dddb3da-776a-4018-a8c3-0e3342aec9df"],

Cell["Get current price of Bitcoin", "Text",ExpressionUUID->"851ea476-ea07-4edb-878c-c57626c8c10d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinancePrice", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[10]:=",ExpressionUUID->"24b606ad-2a3c-42fc-8a9f-9f70f04ad9c4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "5286.88`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[10]=",ExpressionUUID->"6bdb30a1-82a5-43fb-b422-2e0f9125b949"]
}, Open  ]],

Cell["\<\
More information about cryptocurrency pair. Result has information about 24h \
change, volume and last prices\
\>", "Text",ExpressionUUID->"22a1a003-2215-4c63-8c32-ef270786eba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTicker", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[11]:=",ExpressionUUID->"b1ff0c1f-2faa-431c-81c8-38196664eb53"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"priceChange\"\>", "\[Rule]", 
    RowBox[{"-", "53.17`"}]}], ",", 
   RowBox[{"\<\"priceChangePercent\"\>", "\[Rule]", 
    RowBox[{"-", "0.996`"}]}], ",", 
   RowBox[{"\<\"weightedAvgPrice\"\>", "\[Rule]", "5310.01975039`"}], ",", 
   RowBox[{"\<\"prevClosePrice\"\>", "\[Rule]", "5336.18`"}], ",", 
   RowBox[{"\<\"lastPrice\"\>", "\[Rule]", "5283.`"}], ",", 
   RowBox[{"\<\"lastQty\"\>", "\[Rule]", "0.010354`"}], ",", 
   RowBox[{"\<\"bidPrice\"\>", "\[Rule]", "5282.99`"}], ",", 
   RowBox[{"\<\"bidQty\"\>", "\[Rule]", "0.047572`"}], ",", 
   RowBox[{"\<\"askPrice\"\>", "\[Rule]", "5283.`"}], ",", 
   RowBox[{"\<\"askQty\"\>", "\[Rule]", "0.15868`"}], ",", 
   RowBox[{"\<\"openPrice\"\>", "\[Rule]", "5336.17`"}], ",", 
   RowBox[{"\<\"highPrice\"\>", "\[Rule]", "5594.`"}], ",", 
   RowBox[{"\<\"lowPrice\"\>", "\[Rule]", "5055.13`"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "110948.962444`"}], ",", 
   RowBox[{"\<\"quoteVolume\"\>", "\[Rule]", "5.891411818629831`*^8"}], ",", 
   RowBox[{"\<\"openTime\"\>", "\[Rule]", 
    TemplateBox[{RowBox[{"\"Sat 14 Mar 2020 18:27:08\"", 
        StyleBox[
         RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
           StyleBox["4.`", NumberMarks -> False, StripOnInput -> False]}], 
         FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "3", ",", "14", ",", "18", ",", "27", ",", 
              "8.532999992370605`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "4.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"closeTime\"\>", "\[Rule]", 
    TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:27:08\"", 
        StyleBox[
         RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
           StyleBox["4.`", NumberMarks -> False, StripOnInput -> False]}], 
         FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "3", ",", "15", ",", "18", ",", "27", ",", 
              "8.532999992370605`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "4.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"firstId\"\>", "\[Rule]", "266735908"}], ",", 
   RowBox[{"\<\"lastId\"\>", "\[Rule]", "267613006"}], ",", 
   RowBox[{"\<\"count\"\>", "\[Rule]", "877099"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[11]=",ExpressionUUID->"bcc78ba7-79ea-4403-a9d0-bf08d2ea3975"]
}, Open  ]],

Cell["And for all currency pairs", "Text",ExpressionUUID->"90011771-aa6d-4a51-a03b-2dabfb2af9c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTicker", "[", "]"}]], "Code",
 CellLabel->"In[12]:=",ExpressionUUID->"2310e413-cc81-4a60-9de3-b41431513742"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"ETHBTC\"\>"}], ",", 
             RowBox[{"\<\"priceChange\"\>", "\[Rule]", 
              RowBox[{"-", "0.000385`"}]}], ",", 
             RowBox[{"\<\"priceChangePercent\"\>", "\[Rule]", 
              RowBox[{"-", "1.62`"}]}], ",", 
             RowBox[{"\<\"weightedAvgPrice\"\>", "\[Rule]", "0.02351506`"}], 
             ",", 
             RowBox[{"\<\"prevClosePrice\"\>", "\[Rule]", "0.023759`"}], ",", 
             RowBox[{"\<\"lastPrice\"\>", "\[Rule]", "0.023374`"}], ",", 
             RowBox[{"\<\"lastQty\"\>", "\[Rule]", "0.342`"}], ",", 
             RowBox[{"\<\"bidPrice\"\>", "\[Rule]", "0.023373`"}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"volume\"\>", "\[Rule]", "301163.648`"}], ",", 
             RowBox[{"\<\"quoteVolume\"\>", "\[Rule]", "7081.88248389`"}], 
             ",", 
             RowBox[{"\<\"openTime\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Sat 14 Mar 2020 18:27:12\"", 
                  StyleBox[
                   RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "4.`", NumberMarks -> False, StripOnInput -> False]}], 
                   FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "3", ",", "14", ",", "18", ",", "27", ",", 
                    "12.235000133514404`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "4.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"closeTime\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:27:12\"", 
                  StyleBox[
                   RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "4.`", NumberMarks -> False, StripOnInput -> False]}], 
                   FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "3", ",", "15", ",", "18", ",", "27", ",", 
                    "12.235000133514404`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "4.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"firstId\"\>", "\[Rule]", "168412006"}], ",", 
             RowBox[{"\<\"lastId\"\>", "\[Rule]", "168564652"}], ",", 
             RowBox[{"\<\"count\"\>", "\[Rule]", "152647"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"766"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 12, 23955581560047757687, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 12, 23955581560047757687, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 12, 23955581560047757687, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23955581560047757687 === $SessionID, 
   Out[12], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[12]=",ExpressionUUID->"0d5ad068-2457-40cf-8d4c-d0cfa34e9746"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Chart ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "dddcc390-27d1-41ff-93dc-a56070373690"]
}], "Section",ExpressionUUID->"0aaa0e67-21c7-435f-9947-a7a64ab7ec67"],

Cell["Get historical data from Binance", "Text",ExpressionUUID->"e38b7723-1790-4a6a-bc87-ec50edcb7c7b"],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]BTCUSDT\[CloseCurlyDoubleQuote] - cryptocurrency \
pair", "Item",ExpressionUUID->"992f0dca-f1d2-4496-b20f-7e697dd4752e"],

Cell["\<\
\[OpenCurlyDoubleQuote]15m\[CloseCurlyDoubleQuote] - time interval of the one \
\[OpenCurlyDoubleQuote]candle\[CloseCurlyDoubleQuote]. Available intervals: \
1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 12h, 1d\
\>", "Item",ExpressionUUID->"842bfae4-d1a9-4d3a-a2de-ce36db47c142"],

Cell["\<\
\[OpenCurlyDoubleQuote]limit\[CloseCurlyDoubleQuote] \[Rule] 96 - number of \
candles. Max value is 1000, default - 500\
\>", "Item",ExpressionUUID->"8b749f3d-a648-4dbf-88be-0c14410af40f"]
}, Open  ]],

Cell["Interactive chart with different indicators", "Text",ExpressionUUID->"087a20fa-a7fe-4e97-a4ae-636a966fd567"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InteractiveTradingChart", "[", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ", "6"}], 
         "}"}]}], "}"}]}], "]"}], " ", "@", " ", 
    RowBox[{"BinanceKlines", "[", 
     RowBox[{"\"\<BTCUSDT\>\"", ",", " ", "\"\<4h\>\"", ",", " ", 
      RowBox[{"\"\<limit\>\"", " ", "->", " ", "256"}]}], "]"}]}], ",", " ", 
   "\n", "\t", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotTheme", " ", "->", " ", "\"\<Marketing\>\""}]}], "\n", 
  "]"}]], "Code",
 CellLabel->"In[13]:=",ExpressionUUID->"d6670f0f-137b-4a1f-90ce-c53d978b3165"],

Cell[BoxData[
 DynamicBox[Charting`iInteractiveTradingChart[InteractiveTradingChart, {{
     DateObject[{2020, 2, 2, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9367.76,
      9409.99, 9350., 9384.61, 3397.370382}}, {
     DateObject[{2020, 2, 2, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9384.41,
      9387.03, 9245.75, 9266.83, 6703.284365}}, {
     DateObject[{2020, 2, 2, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9266.79,
      9385., 9120., 9370.53, 11191.364659}}, {
     DateObject[{2020, 2, 2, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9370.53, 9450., 9346., 9435.54, 7705.771743}}, {
     DateObject[{2020, 2, 2, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9435.79, 9477.03, 9363.89, 9446.77, 8442.815283}}, {
     DateObject[{2020, 2, 2, 20, 0, 0.}, "Instant", "Gregorian", 4.], {9446.8,
      9460., 9395.46, 9438.08, 5404.74364}}, {
     DateObject[{2020, 2, 3, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9437.9, 
     9454.87, 9322., 9331.51, 6242.93285}}, {
     DateObject[{2020, 2, 3, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9331.59,
      9618.79, 9288., 9385.59, 16529.972617}}, {
     DateObject[{2020, 2, 3, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9386.24,
      9426.6, 9346.09, 9368.16, 4456.422902}}, {
     DateObject[{2020, 2, 3, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9368.16, 9399.42, 9303.2, 9351.48, 7654.583102}}, {
     DateObject[{2020, 2, 3, 16, 0, 0.}, "Instant", "Gregorian", 4.], {9352., 
     9373.97, 9265., 9270., 10467.098595}}, {
     DateObject[{2020, 2, 3, 20, 0, 0.}, "Instant", "Gregorian", 4.], {9270., 
     9331.5, 9234., 9316.7, 7847.377982}}, {
     DateObject[{2020, 2, 4, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9316.04,
      9344.02, 9251.01, 9292.24, 3936.678253}}, {
     DateObject[{2020, 2, 4, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9291.35,
      9350., 9262.14, 9282.95, 4657.428347}}, {
     DateObject[{2020, 2, 4, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9282.96,
      9318.89, 9227.58, 9278.63, 8513.731842}}, {
     DateObject[{2020, 2, 4, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9278.63, 9327., 9108., 9182.81, 14557.392199}}, {
     DateObject[{2020, 2, 4, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9182.81, 9236.72, 9093.01, 9206.47, 13655.345175}}, {
     DateObject[{2020, 2, 4, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9207.02, 9240., 9173.9, 9186.37, 7057.829797}}, {
     DateObject[{2020, 2, 5, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9186.72,
      9220.19, 9151., 9197.02, 4866.447906}}, {
     DateObject[{2020, 2, 5, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9197.02,
      9245.87, 9177.22, 9239.19, 6074.630149}}, {
     DateObject[{2020, 2, 5, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9239.19,
      9300., 9216.75, 9274.53, 7265.185535}}, {
     DateObject[{2020, 2, 5, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9274.39, 9421.75, 9232.75, 9418.48, 13140.827741}}, {
     DateObject[{2020, 2, 5, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9419.17, 9494.2, 9410., 9485.08, 11113.475211}}, {
     DateObject[{2020, 2, 5, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9484.22, 9744.45, 9472.3, 9655.99, 18076.854213}}, {
     DateObject[{2020, 2, 6, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9655.93,
      9725., 9565.14, 9612.04, 9199.442766}}, {
     DateObject[{2020, 2, 6, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9612.03,
      9650., 9526.35, 9635.7, 6566.140148}}, {
     DateObject[{2020, 2, 6, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9635.2, 
     9697.78, 9607.52, 9628.8, 8638.378171}}, {
     DateObject[{2020, 2, 6, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9629.85, 9707.21, 9605.55, 9698.89, 8920.61025}}, {
     DateObject[{2020, 2, 6, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9698.66, 9862.57, 9638., 9786.88, 23642.157597}}, {
     DateObject[{2020, 2, 6, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9786.87, 9839.63, 9717.85, 9747.29, 8199.813979}}, {
     DateObject[{2020, 2, 7, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9747.29,
      9801.98, 9660., 9772., 8982.606443}}, {
     DateObject[{2020, 2, 7, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9772., 
     9855., 9752.65, 9779.78, 7332.892453}}, {
     DateObject[{2020, 2, 7, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9779.73,
      9819.99, 9741.17, 9801.83, 6149.948161}}, {
     DateObject[{2020, 2, 7, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9801.83, 9885., 9766.31, 9809.33, 10564.885853}}, {
     DateObject[{2020, 2, 7, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9810.01, 9845., 9730.54, 9802.02, 8600.000574}}, {
     DateObject[{2020, 2, 7, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9802.01, 9836.27, 9764., 9775.59, 5520.521848}}, {
     DateObject[{2020, 2, 8, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9775.08,
      9831., 9730., 9813.73, 5797.865743}}, {
     DateObject[{2020, 2, 8, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9813.87,
      9830.06, 9667.11, 9714.11, 8199.497444}}, {
     DateObject[{2020, 2, 8, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9714.14,
      9796.88, 9700.02, 9771.39, 5897.219473}}, {
     DateObject[{2020, 2, 8, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9771.39, 9845., 9769.51, 9810.02, 6599.651545}}, {
     DateObject[{2020, 2, 8, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9810.02, 9866., 9750., 9829.47, 9850.867772}}, {
     DateObject[{2020, 2, 8, 20, 0, 0.}, "Instant", "Gregorian", 4.], {9829.5,
      9888., 9810.1, 9862.69, 7042.981727}}, {
     DateObject[{2020, 2, 9, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9862.15,
      9940., 9840., 9895.05, 6010.625705}}, {
     DateObject[{2020, 2, 9, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9895.04,
      10052.67, 9880.75, 10052.63, 7282.507043}}, {
     DateObject[{2020, 2, 9, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     10052.66, 10166., 10040., 10127.87, 10016.754369}}, {
     DateObject[{2020, 2, 9, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     10127.87, 10151.04, 10050., 10109.52, 8249.639612}}, {
     DateObject[{2020, 2, 9, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     10108.61, 10145.64, 10000.1, 10097.1, 7797.234406}}, {
     DateObject[{2020, 2, 9, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     10097.1, 10125.79, 10053.69, 10074.85, 5266.198817}}, {
     DateObject[{2020, 2, 10, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     10074.85, 10160., 10053., 10151.75, 4796.141369}}, {
     DateObject[{2020, 2, 10, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     10151.72, 10188., 10060., 10090.47, 6907.466037}}, {
     DateObject[{2020, 2, 10, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     10090.44, 10105.54, 9756., 9968.99, 15406.776669}}, {
     DateObject[{2020, 2, 10, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9967.94, 9971.48, 9765., 9821.43, 15569.793326}}, {
     DateObject[{2020, 2, 10, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9821.41, 9925.63, 9777.6, 9865.05, 10705.767611}}, {
     DateObject[{2020, 2, 10, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9865.06, 9893.17, 9800.02, 9829.56, 6414.458578}}, {
     DateObject[{2020, 2, 11, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9831.67, 9894.56, 9813., 9851.83, 4568.822398}}, {
     DateObject[{2020, 2, 11, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     9851.74, 9862.18, 9700., 9733.39, 8045.576742}}, {
     DateObject[{2020, 2, 11, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     9733.43, 9787.07, 9715., 9739.94, 4799.311961}}, {
     DateObject[{2020, 2, 11, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9739.87, 9815., 9730.89, 9801.04, 6342.933473}}, {
     DateObject[{2020, 2, 11, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9801.02, 10194., 9787.88, 10164.99, 18616.387116}}, {
     DateObject[{2020, 2, 11, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     10165., 10323.59, 10160.15, 10247.73, 19392.135502}}, {
     DateObject[{2020, 2, 12, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     10246.59, 10260., 10168.75, 10223.08, 5226.05043}}, {
     DateObject[{2020, 2, 12, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     10223.08, 10320., 10223.08, 10263., 7875.841459}}, {
     DateObject[{2020, 2, 12, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     10263.08, 10450., 10256.65, 10366., 11867.38684}}, {
     DateObject[{2020, 2, 12, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     10366.62, 10371.72, 10226.44, 10343.4, 13071.965455}}, {
     DateObject[{2020, 2, 12, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     10343.4, 10415., 10250., 10314.56, 11933.970042}}, {
     DateObject[{2020, 2, 12, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     10314.56, 10374.94, 10294., 10313.47, 7886.338088}}, {
     DateObject[{2020, 2, 13, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     10313.49, 10410., 10303., 10326.46, 8372.562046}}, {
     DateObject[{2020, 2, 13, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     10325.33, 10440.67, 10310.51, 10379.74, 8239.4243}}, {
     DateObject[{2020, 2, 13, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     10379.61, 10491., 10326.49, 10338.96, 10526.985185}}, {
     DateObject[{2020, 2, 13, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     10338.94, 10366.53, 10080., 10151.11, 21430.274876}}, {
     DateObject[{2020, 2, 13, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     10151.66, 10500., 10100.2, 10254.93, 25222.485708}}, {
     DateObject[{2020, 2, 13, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     10254.23, 10292.99, 10145.5, 10250.31, 9110.148553}}, {
     DateObject[{2020, 2, 14, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     10251.15, 10265., 10181.88, 10229.63, 4815.040137}}, {
     DateObject[{2020, 2, 14, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     10227.78, 10290., 10178.27, 10258.7, 6684.355884}}, {
     DateObject[{2020, 2, 14, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     10258.66, 10280., 10111.37, 10124.98, 7259.547406}}, {
     DateObject[{2020, 2, 14, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     10124.98, 10298., 10111.57, 10269.24, 10656.732106}}, {
     DateObject[{2020, 2, 14, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     10269.52, 10360.2, 10224., 10249.94, 9149.544783}}, {
     DateObject[{2020, 2, 14, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     10249.94, 10375.45, 10243.72, 10341.64, 8060.309228}}, {
     DateObject[{2020, 2, 15, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     10340.15, 10381.56, 10280.11, 10344.36, 5227.990766}}, {
     DateObject[{2020, 2, 15, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     10344.36, 10375., 10203.52, 10272.39, 7238.184517}}, {
     DateObject[{2020, 2, 15, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     10273.09, 10279., 10190.9, 10221.76, 5604.364131}}, {
     DateObject[{2020, 2, 15, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     10221.03, 10274.18, 10211.82, 10229.36, 5455.519617}}, {
     DateObject[{2020, 2, 15, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     10229.36, 10259.97, 9801., 9983.18, 13170.300915}}, {
     DateObject[{2020, 2, 15, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9983.24, 10095., 9811.84, 9893.99, 21223.522971}}, {
     DateObject[{2020, 2, 16, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9893.52, 9949., 9870.33, 9904.72, 4965.310796}}, {
     DateObject[{2020, 2, 16, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     9904.46, 10050., 9853.02, 10000.58, 8246.523282}}, {
     DateObject[{2020, 2, 16, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     10000.62, 10033.33, 9937., 9959.51, 4540.269673}}, {
     DateObject[{2020, 2, 16, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9959.58, 10017., 9901.28, 9922.63, 6279.535788}}, {
     DateObject[{2020, 2, 16, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9922.63, 9974.98, 9825.16, 9858.54, 11671.045671}}, {
     DateObject[{2020, 2, 16, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9858.54, 9909., 9638.12, 9745.57, 19207.80931}}, {
     DateObject[{2020, 2, 17, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9745.91, 9996.58, 9729.96, 9917.27, 10078.815813}}, {
     DateObject[{2020, 2, 17, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9910.7,
      9964.16, 9758.59, 9808.4, 7746.851544}}, {
     DateObject[{2020, 2, 17, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     9807.74, 9842.34, 9710., 9753.26, 9407.085988}}, {
     DateObject[{2020, 2, 17, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9753.01, 9832.92, 9568., 9609.94, 16254.879435}}, {
     DateObject[{2020, 2, 17, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9609.94, 9669.99, 9452.67, 9633.45, 21544.481821}}, {
     DateObject[{2020, 2, 17, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9635.27, 9725.79, 9576.03, 9666.15, 9447.988181}}, {
     DateObject[{2020, 2, 18, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9667.34, 9727.41, 9607.05, 9706., 5859.724932}}, {
     DateObject[{2020, 2, 18, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9706., 
     9759., 9624.7, 9724.82, 6732.253294}}, {
     DateObject[{2020, 2, 18, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     9724.86, 9815., 9720., 9790.58, 7629.86798}}, {
     DateObject[{2020, 2, 18, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9790.9, 9794.99, 9631., 9702.27, 10365.961891}}, {
     DateObject[{2020, 2, 18, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9703.85, 9875.51, 9576.01, 9830.68, 13637.434053}}, {
     DateObject[{2020, 2, 18, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9830.69, 10048., 9815.9, 10043.49, 16800.091626}}, {
     DateObject[{2020, 2, 19, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     10043.08, 10250., 10036.72, 10164.71, 15438.515175}}, {
     DateObject[{2020, 2, 19, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     10164.78, 10186.35, 10079.25, 10149.63, 6142.178538}}, {
     DateObject[{2020, 2, 19, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     10150.48, 10164.93, 10027., 10059.3, 7099.227392}}, {
     DateObject[{2020, 2, 19, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     10059.08, 10161.99, 10011.06, 10148.93, 7160.087236}}, {
     DateObject[{2020, 2, 19, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     10149.99, 10250., 10131.25, 10139.22, 7962.236715}}, {
     DateObject[{2020, 2, 20, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     10138.59, 10156.48, 9350., 9593.79, 26798.857014}}, {
     DateObject[{2020, 2, 20, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     9594.65, 9668., 9500., 9571.5, 11853.135738}}, {
     DateObject[{2020, 2, 20, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9571.5,
      9630.33, 9538., 9607.23, 6612.463055}}, {
     DateObject[{2020, 2, 20, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9606.78, 9650., 9540.17, 9565.39, 9380.462432}}, {
     DateObject[{2020, 2, 20, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9565.49, 9619.83, 9518.08, 9574.26, 10705.160087}}, {
     DateObject[{2020, 2, 20, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9574.43, 9699., 9400., 9551.96, 16524.57286}}, {
     DateObject[{2020, 2, 21, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9553.69, 9663.14, 9537., 9596.42, 5076.548742}}, {
     DateObject[{2020, 2, 21, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     9597.21, 9714.06, 9569.42, 9708.17, 6894.086367}}, {
     DateObject[{2020, 2, 21, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     9707.39, 9733., 9650., 9673.43, 6291.024884}}, {
     DateObject[{2020, 2, 21, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9673.43, 9719., 9613., 9694.56, 7488.743784}}, {
     DateObject[{2020, 2, 21, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9694.56, 9755.51, 9660., 9722.56, 8968.238602}}, {
     DateObject[{2020, 2, 21, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9722.62, 9742.33, 9660., 9681.84, 5443.853114}}, {
     DateObject[{2020, 2, 22, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9681.84, 9720., 9550.21, 9677.05, 7095.607773}}, {
     DateObject[{2020, 2, 22, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     9677.05, 9709.17, 9637., 9665.9, 3546.999352}}, {
     DateObject[{2020, 2, 22, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     9665.44, 9668.81, 9560.02, 9590.9, 4697.110565}}, {
     DateObject[{2020, 2, 22, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9590.26, 9658.09, 9578.9, 9634.61, 3958.059108}}, {
     DateObject[{2020, 2, 22, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9633.1, 9670., 9607.42, 9630.19, 5257.867798}}, {
     DateObject[{2020, 2, 22, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9631.05, 9680., 9600.01, 9666.93, 4521.58248}}, {
     DateObject[{2020, 2, 23, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9667.91, 9697., 9644.47, 9650.86, 2655.13832}}, {
     DateObject[{2020, 2, 23, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     9650.85, 9797.97, 9645., 9787.08, 4025.659855}}, {
     DateObject[{2020, 2, 23, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9786.5,
      9920., 9786.46, 9880.7, 10780.07765}}, {
     DateObject[{2020, 2, 23, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9880.71, 9990., 9810.07, 9825.57, 8389.850451}}, {
     DateObject[{2020, 2, 23, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9825.39, 9907.65, 9800., 9861.9, 5895.239376}}, {
     DateObject[{2020, 2, 23, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9861.9, 9896., 9846.1, 9871.76, 3320.287224}}, {
     DateObject[{2020, 2, 24, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9871.75, 9971.17, 9835.51, 9936.4, 5290.975287}}, {
     DateObject[{2020, 2, 24, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9936.4,
      9990., 9600., 9753.71, 13205.694054}}, {
     DateObject[{2020, 2, 24, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     9753.64, 9762.91, 9667.71, 9752.83, 6087.277664}}, {
     DateObject[{2020, 2, 24, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9752.81, 9820., 9694.74, 9811.38, 6242.514813}}, {
     DateObject[{2020, 2, 24, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9811.98, 9843.5, 9668., 9703.28, 9668.905788}}, {
     DateObject[{2020, 2, 24, 20, 0, 0.}, "Instant", "Gregorian", 4.], {9703.,
      9731.6, 9473.56, 9601.09, 14309.627639}}, {
     DateObject[{2020, 2, 25, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9601.14, 9671.98, 9563.32, 9656.13, 6282.576162}}, {
     DateObject[{2020, 2, 25, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     9655.52, 9671.12, 9567.22, 9579.44, 4992.295731}}, {
     DateObject[{2020, 2, 25, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     9579.94, 9604.99, 9486.18, 9520.16, 7470.742682}}, {
     DateObject[{2020, 2, 25, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9520.06, 9645., 9488., 9627.22, 8261.299977}}, {
     DateObject[{2020, 2, 25, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9626.43, 9675., 9360., 9397.47, 13610.710851}}, {
     DateObject[{2020, 2, 25, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9395.19, 9460.56, 9281., 9359.95, 12297.631351}}, {
     DateObject[{2020, 2, 26, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     9359.95, 9426.02, 9250., 9315.84, 7746.66396}}, {
     DateObject[{2020, 2, 26, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     9316.48, 9377.44, 9111., 9170.13, 15211.78851}}, {
     DateObject[{2020, 2, 26, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     9170.13, 9220., 9120., 9148.08, 8808.674449}}, {
     DateObject[{2020, 2, 26, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9148.08, 9225., 9102., 9158.37, 10057.742631}}, {
     DateObject[{2020, 2, 26, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9158.36, 9303.36, 8979.03, 8995.29, 22580.466193}}, {
     DateObject[{2020, 2, 26, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     8995.75, 9030., 8633.63, 8831.14, 27886.932404}}, {
     DateObject[{2020, 2, 27, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     8831.14, 8864., 8713.03, 8785.25, 7584.741295}}, {
     DateObject[{2020, 2, 27, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8786., 
     8792.52, 8531., 8739.68, 16551.284715}}, {
     DateObject[{2020, 2, 27, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     8739.68, 8838.28, 8667.58, 8814.05, 9961.738256}}, {
     DateObject[{2020, 2, 27, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8814.21, 8859.42, 8730., 8804.36, 9960.097984}}, {
     DateObject[{2020, 2, 27, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     8804.27, 8941.91, 8747.03, 8847.16, 14411.713142}}, {
     DateObject[{2020, 2, 27, 20, 0, 0.}, "Instant", "Gregorian", 4.], {8847.,
      8971.77, 8846.71, 8915.34, 10768.270745}}, {
     DateObject[{2020, 2, 28, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     8915.34, 8917.66, 8650., 8823.21, 10830.47392}}, {
     DateObject[{2020, 2, 28, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     8823.25, 8900., 8784.01, 8837.51, 5701.193812}}, {
     DateObject[{2020, 2, 28, 8, 0, 0.}, "Instant", "Gregorian", 4.], {8837., 
     8860., 8695.1, 8728.74, 7061.154764}}, {
     DateObject[{2020, 2, 28, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8728.39, 8779.55, 8541.1, 8585.96, 15188.772251}}, {
     DateObject[{2020, 2, 28, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     8586.43, 8724.64, 8445., 8715.94, 19466.397577}}, {
     DateObject[{2020, 2, 28, 20, 0, 0.}, "Instant", "Gregorian", 4.], {8715.,
      8738., 8485., 8577.21, 14660.758383}}, {
     DateObject[{2020, 2, 29, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     8577.21, 8799., 8567.97, 8692.91, 9076.93219}}, {
     DateObject[{2020, 2, 29, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8690.8,
      8773.17, 8656., 8714.73, 4954.843997}}, {
     DateObject[{2020, 2, 29, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     8714.53, 8790., 8696.42, 8745.81, 6355.794503}}, {
     DateObject[{2020, 2, 29, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8745.82, 8763.71, 8600., 8696.98, 6704.771949}}, {
     DateObject[{2020, 2, 29, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     8696.95, 8698.87, 8572.22, 8650., 8278.041523}}, {
     DateObject[{2020, 2, 29, 20, 0, 0.}, "Instant", "Gregorian", 4.], {8650.,
      8676., 8591.47, 8671.41, 5601.168229}}, {
     DateObject[{2020, 3, 1, 0, 0, 0.}, "Instant", "Gregorian", 4.], {8670.64,
      8671.61, 8523.55, 8523.61, 4853.562834}}, {
     DateObject[{2020, 3, 1, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8523.61,
      8675., 8511.11, 8620.36, 6058.887982}}, {
     DateObject[{2020, 3, 1, 8, 0, 0.}, "Instant", "Gregorian", 4.], {8620.17,
      8634.73, 8520.58, 8541.16, 5437.032897}}, {
     DateObject[{2020, 3, 1, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8541.15, 8650., 8518., 8648.37, 5567.314081}}, {
     DateObject[{2020, 3, 1, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     8647.42, 8750., 8535.24, 8557.8, 9813.477149}}, {
     DateObject[{2020, 3, 1, 20, 0, 0.}, "Instant", "Gregorian", 4.], {8557.8,
      8582.73, 8411., 8542.2, 11521.279904}}, {
     DateObject[{2020, 3, 2, 0, 0, 0.}, "Instant", "Gregorian", 4.], {8541.22,
      8591.82, 8470., 8531.88, 5494.209766}}, {
     DateObject[{2020, 3, 2, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8530.3, 
     8651.9, 8498., 8601.99, 7393.790736}}, {
     DateObject[{2020, 3, 2, 8, 0, 0.}, "Instant", "Gregorian", 4.], {8601.99,
      8699.5, 8596.36, 8625.39, 9398.441547}}, {
     DateObject[{2020, 3, 2, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8625.39, 8776.98, 8619.63, 8758.35, 12157.311032}}, {
     DateObject[{2020, 3, 2, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     8758.39, 8885., 8718.95, 8829.21, 13814.839939}}, {
     DateObject[{2020, 3, 2, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     8829.21, 8917.99, 8818.66, 8883.12, 10246.922763}}, {
     DateObject[{2020, 3, 3, 0, 0, 0.}, "Instant", "Gregorian", 4.], {8882.88,
      8965.75, 8850., 8915.24, 7390.011713}}, {
     DateObject[{2020, 3, 3, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8911.18,
      8919.65, 8804.16, 8866.6, 6699.374227}}, {
     DateObject[{2020, 3, 3, 8, 0, 0.}, "Instant", "Gregorian", 4.], {8865.9, 
     8867.89, 8746.42, 8756.08, 6973.338243}}, {
     DateObject[{2020, 3, 3, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8755.64, 8866.96, 8735.37, 8858.22, 8854.431305}}, {
     DateObject[{2020, 3, 3, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     8858.45, 8898.74, 8675.45, 8753.01, 17254.878369}}, {
     DateObject[{2020, 3, 3, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     8753.01, 8781.25, 8651., 8713.97, 9965.958002}}, {
     DateObject[{2020, 3, 4, 0, 0, 0.}, "Instant", "Gregorian", 4.], {8714.11,
      8790., 8683.24, 8760.07, 5407.017136}}, {
     DateObject[{2020, 3, 4, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8760.07,
      8835.01, 8728., 8790.18, 6918.610173}}, {
     DateObject[{2020, 3, 4, 8, 0, 0.}, "Instant", "Gregorian", 4.], {8788.99,
      8848.29, 8774.58, 8816.27, 6790.051035}}, {
     DateObject[{2020, 3, 4, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8816.32, 8829.4, 8694.07, 8717.12, 3599.424504}}, {
     DateObject[{2020, 3, 4, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     8717.21, 8782.31, 8660., 8700., 10902.634059}}, {
     DateObject[{2020, 3, 4, 20, 0, 0.}, "Instant", "Gregorian", 4.], {8700., 
     8746., 8665., 8739.58, 6321.81886}}, {
     DateObject[{2020, 3, 5, 0, 0, 0.}, "Instant", "Gregorian", 4.], {8738.94,
      8761.52, 8688.03, 8750.87, 4163.943947}}, {
     DateObject[{2020, 3, 5, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8750.99,
      8941.53, 8746.54, 8869.82, 12564.976867}}, {
     DateObject[{2020, 3, 5, 8, 0, 0.}, "Instant", "Gregorian", 4.], {8869.68,
      8942., 8862., 8895.05, 6703.418025}}, {
     DateObject[{2020, 3, 5, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8895.24, 9122.62, 8891.36, 9100.89, 13448.482766}}, {
     DateObject[{2020, 3, 5, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9100.59, 9136.63, 9011.98, 9085.48, 10081.97691}}, {
     DateObject[{2020, 3, 5, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9085.52, 9150.9, 9062.76, 9150.9, 7642.388903}}, {
     DateObject[{2020, 3, 6, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9150.8, 
     9159.42, 9015., 9054.68, 7760.622884}}, {
     DateObject[{2020, 3, 6, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9054.64,
      9081.94, 8985.5, 9033.59, 7149.842125}}, {
     DateObject[{2020, 3, 6, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9032.87,
      9138.31, 9013.05, 9100.91, 7072.032565}}, {
     DateObject[{2020, 3, 6, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9101.62, 9170., 9070., 9127.92, 8923.020728}}, {
     DateObject[{2020, 3, 6, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     9129.12, 9130.29, 9000., 9001.4, 9602.008458}}, {
     DateObject[{2020, 3, 6, 20, 0, 0.}, "Instant", "Gregorian", 4.], {9001.7,
      9101.35, 9000., 9085.12, 6268.547625}}, {
     DateObject[{2020, 3, 7, 0, 0, 0.}, "Instant", "Gregorian", 4.], {9084.62,
      9137.5, 9058.3, 9131.88, 4767.496543}}, {
     DateObject[{2020, 3, 7, 4, 0, 0.}, "Instant", "Gregorian", 4.], {9130.89,
      9143.55, 9073.03, 9089.95, 4012.304431}}, {
     DateObject[{2020, 3, 7, 8, 0, 0.}, "Instant", "Gregorian", 4.], {9089.57,
      9107.25, 9050., 9085.23, 5475.819706}}, {
     DateObject[{2020, 3, 7, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     9085.23, 9116.97, 9072.65, 9089., 6621.912098}}, {
     DateObject[{2020, 3, 7, 16, 0, 0.}, "Instant", "Gregorian", 4.], {9089., 
     9135.94, 9069.3, 9113.61, 6636.609212}}, {
     DateObject[{2020, 3, 7, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     9113.46, 9188., 8835., 8884.79, 18405.762532}}, {
     DateObject[{2020, 3, 8, 0, 0, 0.}, "Instant", "Gregorian", 4.], {8884.91,
      8919., 8853.93, 8886.66, 4269.796546}}, {
     DateObject[{2020, 3, 8, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8885.25,
      8886.76, 8695.73, 8747.58, 9592.690178}}, {
     DateObject[{2020, 3, 8, 8, 0, 0.}, "Instant", "Gregorian", 4.], {8746.92,
      8754.99, 8701., 8740.29, 6005.149776}}, {
     DateObject[{2020, 3, 8, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     8740.59, 8752.36, 8670., 8741.53, 7865.626827}}, {
     DateObject[{2020, 3, 8, 16, 0, 0.}, "Instant", "Gregorian", 4.], {8741.3,
      8747.43, 8321., 8400.83, 20292.37099}}, {
     DateObject[{2020, 3, 8, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     8400.85, 8403., 8149.27, 8280.11, 20627.555475}}, {
     DateObject[{2020, 3, 9, 0, 0, 0.}, "Instant", "Gregorian", 4.], {8281.51,
      8300., 8000., 8033.31, 13153.92192}}, {
     DateObject[{2020, 3, 9, 4, 0, 0.}, "Instant", "Gregorian", 4.], {8034.76,
      8179.31, 7970., 8063.52, 14552.012021}}, {
     DateObject[{2020, 3, 9, 8, 0, 0.}, "Instant", "Gregorian", 4.], {8063.52,
      8066.39, 7675.28, 7899.71, 28909.946908}}, {
     DateObject[{2020, 3, 9, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     7899.72, 7991.08, 7760., 7804.92, 18281.110253}}, {
     DateObject[{2020, 3, 9, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     7803.64, 7946., 7632.01, 7765.32, 30622.385691}}, {
     DateObject[{2020, 3, 9, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     7765.32, 7903.52, 7689., 7842.03, 16554.147771}}, {
     DateObject[{2020, 3, 10, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     7842.04, 7947.57, 7791.4, 7929.87, 8049.260624}}, {
     DateObject[{2020, 3, 10, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     7929.87, 7969.87, 7850., 7907.16, 8204.380648}}, {
     DateObject[{2020, 3, 10, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     7908.29, 7952.65, 7866.04, 7900.14, 11137.319874}}, {
     DateObject[{2020, 3, 10, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     7900.89, 8114.1, 7875., 8065.02, 17119.535277}}, {
     DateObject[{2020, 3, 10, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     8064.83, 8149., 7739.97, 7767.28, 22915.520456}}, {
     DateObject[{2020, 3, 10, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     7766.29, 7985., 7728.01, 7978.8, 16312.36408}}, {
     DateObject[{2020, 3, 11, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     7978.94, 8038.11, 7869.79, 7894.56, 11094.32354}}, {
     DateObject[{2020, 3, 11, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     7894.57, 7965.49, 7865.01, 7924.78, 7007.155628}}, {
     DateObject[{2020, 3, 11, 8, 0, 0.}, "Instant", "Gregorian", 4.], {7923.8,
      7943.42, 7813., 7860.93, 8788.880276}}, {
     DateObject[{2020, 3, 11, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     7861.62, 7921.12, 7750., 7821.86, 16034.117503}}, {
     DateObject[{2020, 3, 11, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     7821.68, 7895.87, 7736., 7778.76, 12886.054588}}, {
     DateObject[{2020, 3, 11, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     7778.76, 7843., 7590., 7828.23, 25310.584104}}, {
     DateObject[{2020, 3, 12, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     7828.23, 7980., 7798.13, 7934.52, 9915.619073}}, {
     DateObject[{2020, 3, 12, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     7934.58, 7966.17, 7558., 7662.73, 18039.354478}}, {
     DateObject[{2020, 3, 12, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     7662.11, 7662.8, 7342.43, 7392.13, 23553.309775}}, {
     DateObject[{2020, 3, 12, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     7392.12, 7466., 5550., 6067.01, 65426.252839}}, {
     DateObject[{2020, 3, 12, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     6064.27, 6307.59, 5734.69, 6132.13, 54565.202965}}, {
     DateObject[{2020, 3, 12, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     6132.13, 6229.97, 5947.72, 6037.45, 27055.620544}}, {
     DateObject[{2020, 3, 13, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     6036.28, 6059.99, 4410., 4800., 72865.868052}}, {
     DateObject[{2020, 3, 13, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     4800.01, 5523.23, 3782.13, 5167.26, 118131.08094}}, {
     DateObject[{2020, 3, 13, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     5159.09, 5444., 4674., 5385.87, 51985.85189}}, {
     DateObject[{2020, 3, 13, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     5386.11, 5700., 5126., 5403.56, 55656.389838}}, {
     DateObject[{2020, 3, 13, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     5403.56, 5955., 4920., 5212.37, 76357.692697}}, {
     DateObject[{2020, 3, 13, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     5207.63, 5525., 4807., 5391.08, 63664.636441}}, {
     DateObject[{2020, 3, 14, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     5397.16, 5699., 5187.39, 5578.6, 36406.021958}}, {
     DateObject[{2020, 3, 14, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     5576.05, 5640.52, 5322.02, 5573.97, 26373.601018}}, {
     DateObject[{2020, 3, 14, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     5573.67, 5573.71, 5371.76, 5500.4, 21111.157977}}, {
     DateObject[{2020, 3, 14, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     5500.61, 5530., 5173., 5448.38, 28784.428203}}, {
     DateObject[{2020, 3, 14, 16, 0, 0.}, "Instant", "Gregorian", 4.], {
     5448.23, 5450., 5268.82, 5311.38, 19401.444186}}, {
     DateObject[{2020, 3, 14, 20, 0, 0.}, "Instant", "Gregorian", 4.], {
     5310.96, 5498., 5256., 5386.85, 17966.758708}}, {
     DateObject[{2020, 3, 15, 0, 0, 0.}, "Instant", "Gregorian", 4.], {
     5386.84, 5423.5, 5055.13, 5172.06, 23272.745882}}, {
     DateObject[{2020, 3, 15, 4, 0, 0.}, "Instant", "Gregorian", 4.], {
     5172.48, 5273.37, 5093.1, 5178.64, 15586.905349}}, {
     DateObject[{2020, 3, 15, 8, 0, 0.}, "Instant", "Gregorian", 4.], {
     5178.64, 5332.04, 5178.64, 5272.23, 10155.771411}}, {
     DateObject[{2020, 3, 15, 12, 0, 0.}, "Instant", "Gregorian", 4.], {
     5272.35, 5487., 5213.16, 5429.99, 19423.434062}}, {
     DateObject[{2020, 3, 15, 16, 0, 0.}, "Instant", "Gregorian", 4.], {5430.,
      5594., 5221., 5280.93, 17951.315135}}}, Automatic, Automatic, ImageSize -> 
   Large, PlotTheme -> "Marketing"],
  ImageSizeCache->{533., {262., 268.}},
  SingleEvaluation->True]], "Output",
 CellLabel->"Out[13]=",ExpressionUUID->"ea2ede64-a127-4744-90d5-74196089a31f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Account ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "ea1fd234-f43f-4acf-a7f7-2ec7e30e3f82"]
}], "Section",ExpressionUUID->"e09f9995-4a0f-42fa-a8ea-15026d084805"],

Cell["Not null balances", "Text",ExpressionUUID->"d9b58248-031f-4ccb-b6ed-f6b735071ff5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{"#free", "&"}], "]"}], " ", "@", " ", "\n", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#free", " ", ">", " ", "0"}], "&"}], "]"}], " ", "@", " ", "\n", 
   RowBox[{
    RowBox[{"BinanceAccountInfo", "[", "]"}], "[", "\"\<balances\>\"", 
    "]"}]}]}]], "Code",
 CellLabel->"In[15]:=",ExpressionUUID->"f775a8e1-33f6-4580-b32e-43ca0382ad8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BCHABC\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "4.9`*^-6"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BCHSV\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "4.9`*^-6"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BNB\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.00030092`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"ADD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0004`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"MEETONE\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0004`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"ATD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"EOP\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BTC\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.00080269`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"IQ\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.00408`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"SUB\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.864`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"EON\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "1.5008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"MOD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "14.65`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellLabel->"Out[15]=",ExpressionUUID->"fbe417c1-ecac-4ced-ac19-2e9227a04e42"]
}, Open  ]],

Cell["Old trades", "Text",ExpressionUUID->"f8d07e71-daf7-433f-9362-7e20b700fcf6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceMyTrades", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[16]:=",ExpressionUUID->"01613f79-19a5-4c3c-beba-095d6aedc9c6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"id\"\>", "\[Rule]", "17056810"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "44470524"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "8750.`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.013617`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "119.14875`"}], ",", 
             RowBox[{"\<\"commission\"\>", "\[Rule]", "0.03574462`"}], ",", 
             RowBox[{"\<\"commissionAsset\"\>", "\[Rule]", "\<\"USDT\"\>"}], 
             ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Wed 14 Feb 2018 08:07:40\"", 
                  StyleBox[
                   RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "4.`", NumberMarks -> False, StripOnInput -> False]}], 
                   FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2018", ",", "2", ",", "14", ",", "8", ",", "7", ",", 
                    "40.19799995422363`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "4.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyer\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isMaker\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}], ",", 
           TemplateBox[{"378"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"id\"\>", "\[Rule]", "73573796"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "173127381"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"isBuyer\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"isMaker\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 16, 23955581560047757687, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 16, 23955581560047757687, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 16, 23955581560047757687, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23955581560047757687 === $SessionID, 
   Out[16], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[16]=",ExpressionUUID->"06533638-d258-4629-8a3f-28b3ec8ac1e1"]
}, Open  ]],

Cell["Current opened orders", "Text",ExpressionUUID->"65ba1a24-fbcd-42e9-a9cd-bf9b83d0c080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrdersNow", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[20]:=",ExpressionUUID->"c3552983-922d-4fba-bef9-622c6490d388"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
    RowBox[{"\<\"orderId\"\>", "\[Rule]", "1488572205"}], ",", 
    RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"\<\"clientOrderId\"\>", 
     "\[Rule]", "\<\"web_99d4df6f33614cc8bc5c685f89c0d9ed\"\>"}], ",", 
    RowBox[{"\<\"price\"\>", "\[Rule]", "15318.1`"}], ",", 
    RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.000802`"}], ",", 
    RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
    RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
    RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
    RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
    RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"time\"\>", "\[Rule]", 
     TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:29:33\"", 
         StyleBox[
          RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
            StyleBox["4.`", NumberMarks -> False, StripOnInput -> False]}], 
          FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "15", ",", "18", ",", "29", ",", 
               "33.84000015258789`"}], "}"}], ",", "\"Instant\"", ",", 
           "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], ",", 
    RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
     TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:29:33\"", 
         StyleBox[
          RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
            StyleBox["4.`", NumberMarks -> False, StripOnInput -> False]}], 
          FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "3", ",", "15", ",", "18", ",", "29", ",", 
               "33.84000015258789`"}], "}"}], ",", "\"Instant\"", ",", 
           "\"Gregorian\"", ",", "4.`"}], "]"}]},
      "DateObject",
      Editable->False]}], ",", 
    RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
   "\[RightAssociation]"}], "}"}]], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"510c7247-8a74-4788-b893-1b14f3e1b420"]
}, Open  ]],

Cell["All orders", "Text",ExpressionUUID->"13a71be2-af50-432a-b8ca-4e720e0de512"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrdersAll", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[21]:=",ExpressionUUID->"1889e211-656d-481f-8c90-103c98cb07cb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "44470524"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             
             RowBox[{"\<\"clientOrderId\"\>", 
              "\[Rule]", "\<\"ItBhjKwekNUlg8wRiLrzFT\"\>"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "8750.`"}], ",", 
             RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.013617`"}], ",", 
             RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.013617`"}], ",", 
             RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "119.14875`"}],
              ",", 
             RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"FILLED\"\>"}], ",", 
             TemplateBox[{"1"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
             RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
             RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Wed 14 Feb 2018 08:06:50\"", 
                  StyleBox[
                   RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "4.`", NumberMarks -> False, StripOnInput -> False]}], 
                   FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2018", ",", "2", ",", "14", ",", "8", ",", "6", ",", 
                    "50.65499973297119`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "4.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
              TemplateBox[{RowBox[{"\"Wed 14 Feb 2018 08:07:40\"", 
                  StyleBox[
                   RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
                    StyleBox[
                    "4.`", NumberMarks -> False, StripOnInput -> False]}], 
                   FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2018", ",", "2", ",", "14", ",", "8", ",", "7", ",", 
                    "40.19799995422363`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "4.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"367"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 23955581560047757687, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 23955581560047757687, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 23955581560047757687, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23955581560047757687 === $SessionID, 
   Out[21], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"05109540-b9a6-407f-ba27-e2d90cf4800c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Trade ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "a86e6acc-071c-49d2-a5c7-2f92f6c731c4"]
}], "Section",ExpressionUUID->"482fb9d1-e3c2-49bd-ba45-234ae199bf0a"],

Cell["Create order", "Text",ExpressionUUID->"1fc533a0-d971-47a9-a6d8-61c68e627123"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"order", " ", "=", " ", 
  RowBox[{"BinanceOrderCreate", "[", 
   RowBox[{
   "\"\<BTCUSDT\>\"", ",", " ", "\"\<SELL\>\"", ",", " ", "\"\<LIMIT\>\"", 
    ",", " ", "0.0008", ",", " ", "15000"}], "]"}]}]], "Code",
 CellLabel->"In[24]:=",ExpressionUUID->"3095bba1-89df-4cd7-bce1-36b331431b4a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "1488663374"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"J2R1fNi6syQjWtpMsDwwjx\"\>"}], ",", 
   RowBox[{"\<\"transactTime\"\>", "\[Rule]", 
    TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:35:55\"", 
        StyleBox[
         RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
           StyleBox["4.`", NumberMarks -> False, StripOnInput -> False]}], 
         FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "3", ",", "15", ",", "18", ",", "35", ",", 
              "55.77400016784668`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "4.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "15000.`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.0008`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
   RowBox[{"\<\"fills\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"40b33f3d-689c-42a8-a679-e756daae1e9a"]
}, Open  ]],

Cell["Get order info", "Text",ExpressionUUID->"cdd8f6ff-a394-4170-b86d-e8d3ee865c3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrderGet", "[", 
  RowBox[{"\"\<BTCUSDT\>\"", ",", " ", 
   RowBox[{"order", "[", "\"\<orderId\>\"", "]"}]}], "]"}]], "Code",
 CellLabel->"In[25]:=",ExpressionUUID->"195e0e47-8174-4f90-9359-620cbb3ebd20"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "1488663374"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"J2R1fNi6syQjWtpMsDwwjx\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "15000.`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.0008`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
   RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"time\"\>", "\[Rule]", 
    TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:35:55\"", 
        StyleBox[
         RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
           StyleBox["4.`", NumberMarks -> False, StripOnInput -> False]}], 
         FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "3", ",", "15", ",", "18", ",", "35", ",", 
              "55.77400016784668`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "4.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
    TemplateBox[{RowBox[{"\"Sun 15 Mar 2020 18:35:55\"", 
        StyleBox[
         RowBox[{"\"GMT+\"", "\[InvisibleSpace]", 
           StyleBox["4.`", NumberMarks -> False, StripOnInput -> False]}], 
         FontColor -> GrayLevel[0.5]]}],RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "3", ",", "15", ",", "18", ",", "35", ",", 
              "55.77400016784668`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "4.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"34795c04-ac02-4922-a4dd-be0e0b8bbddc"]
}, Open  ]],

Cell["Cancel order", "Text",ExpressionUUID->"e677df2c-f8f3-4f09-933a-251a752270b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrderCancel", "[", 
  RowBox[{"\"\<BTCUSDT\>\"", ",", " ", 
   RowBox[{"order", "[", "\"\<orderId\>\"", "]"}]}], "]"}]], "Code",
 CellLabel->"In[26]:=",ExpressionUUID->"a9d746fb-07c1-4a14-8a0e-8564481e7624"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"origClientOrderId\"\>", 
    "\[Rule]", "\<\"J2R1fNi6syQjWtpMsDwwjx\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "1488663374"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"NJtg6Zu2F2UfWrNxFh9opL\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "15000.`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.0008`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"CANCELED\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[26]=",ExpressionUUID->"fc2a3c08-2e59-4139-b451-8ad1f558e00c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
TrackCellChangeTimes->False,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 589, 15, 100, "Title",ExpressionUUID->"9eca8ff7-13d5-40c4-a3cc-a9f5dc8b827e"],
Cell[CellGroupData[{
Cell[1194, 41, 595, 15, 71, "Section",ExpressionUUID->"85dbaebe-6107-4b20-9130-c46c7e50e26e"],
Cell[1792, 58, 90, 0, 34, "Text",ExpressionUUID->"dbacc3fb-88a9-4e2b-baad-98418b92a2e4"],
Cell[1885, 60, 393, 10, 87, "Code",ExpressionUUID->"cfcbf03f-ee8c-42bc-a3dd-feb3e7685177"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2315, 75, 592, 15, 71, "Section",ExpressionUUID->"73d0ce59-6d19-4bb1-9d8e-a6bb73743769"],
Cell[CellGroupData[{
Cell[2932, 94, 143, 2, 50, "Code",ExpressionUUID->"ff3e357e-6a4a-49e2-94a3-7d0123522ea2"],
Cell[3078, 98, 14516, 325, 213, "Output",ExpressionUUID->"49684998-aff0-44a1-a7d9-1d73b13b9a1c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17643, 429, 593, 15, 71, "Section",ExpressionUUID->"19d08895-99cf-44a8-be98-356a0246821d"],
Cell[18239, 446, 110, 0, 34, "Text",ExpressionUUID->"da47335a-6c7f-411a-8322-15afd7b2f9e6"],
Cell[18352, 448, 213, 3, 34, "Text",ExpressionUUID->"aed67ffc-dfa0-4820-a0b2-6b31a983f72f"],
Cell[CellGroupData[{
Cell[18590, 455, 182, 3, 69, "Code",ExpressionUUID->"e18d0e66-fca2-4120-8dfd-c53971823316"],
Cell[18775, 460, 159, 2, 32, "Output",ExpressionUUID->"3bf7c65c-d5e9-4cd5-bda9-d7bf85f93a62"],
Cell[18937, 464, 757, 16, 43, "Output",ExpressionUUID->"e93ca12e-98e7-4d87-b9fa-dbffb774c01f"]
}, Open  ]],
Cell[19709, 483, 183, 3, 34, "Text",ExpressionUUID->"257132ec-378a-4fcf-ba61-7ff6f5c66466"],
Cell[CellGroupData[{
Cell[19917, 490, 145, 2, 50, "Code",ExpressionUUID->"d5560724-e0ea-4935-86c3-5baaf73145fe"],
Cell[20065, 494, 11475, 282, 180, "Output",ExpressionUUID->"758c94cd-fa28-4328-83d5-0d045ada58d9"]
}, Open  ]],
Cell[31555, 779, 90, 0, 34, "Text",ExpressionUUID->"1062b093-279e-45f7-ae63-a53ffcdd8aae"],
Cell[CellGroupData[{
Cell[31670, 783, 124, 1, 50, "Code",ExpressionUUID->"8d54f4e8-7193-4f5c-a896-c3c41726d23b"],
Cell[31797, 786, 11427, 281, 180, "Output",ExpressionUUID->"db5c78f6-7fac-4003-a299-0ee691e18336"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43273, 1073, 592, 15, 71, "Section",ExpressionUUID->"7de50ca5-b424-4d16-9c24-084e2a93fb72"],
Cell[43868, 1090, 89, 0, 34, "Text",ExpressionUUID->"a311d586-9708-4079-a6c4-0776847830b9"],
Cell[CellGroupData[{
Cell[43982, 1094, 156, 2, 50, "Code",ExpressionUUID->"b029f3b9-072c-4deb-933c-b3817f5a2130"],
Cell[44141, 1098, 16139, 411, 717, "Output",ExpressionUUID->"346aaabc-bda3-491e-b62e-5dce6a1e40d6"]
}, Open  ]],
Cell[60295, 1512, 124, 0, 34, "Text",ExpressionUUID->"47244977-20ba-41e8-8ff1-cbc6c84c91ae"],
Cell[CellGroupData[{
Cell[60444, 1516, 157, 2, 50, "Code",ExpressionUUID->"e6ed90fb-8bfc-4b64-819e-90251de0cb1d"],
Cell[60604, 1520, 11398, 278, 190, "Output",ExpressionUUID->"949531cd-4670-4288-b350-8fd891ebaf56"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72051, 1804, 594, 15, 71, "Section",ExpressionUUID->"5dddb3da-776a-4018-a8c3-0e3342aec9df"],
Cell[72648, 1821, 99, 0, 34, "Text",ExpressionUUID->"851ea476-ea07-4edb-878c-c57626c8c10d"],
Cell[CellGroupData[{
Cell[72772, 1825, 157, 2, 50, "Code",ExpressionUUID->"24b606ad-2a3c-42fc-8a9f-9f70f04ad9c4"],
Cell[72932, 1829, 296, 6, 32, "Output",ExpressionUUID->"6bdb30a1-82a5-43fb-b422-2e0f9125b949"]
}, Open  ]],
Cell[73243, 1838, 188, 3, 34, "Text",ExpressionUUID->"22a1a003-2215-4c63-8c32-ef270786eba6"],
Cell[CellGroupData[{
Cell[73456, 1845, 158, 2, 50, "Code",ExpressionUUID->"b1ff0c1f-2faa-431c-81c8-38196664eb53"],
Cell[73617, 1849, 2661, 53, 138, "Output",ExpressionUUID->"bcc78ba7-79ea-4403-a9d0-bf08d2ea3975"]
}, Open  ]],
Cell[76293, 1905, 97, 0, 34, "Text",ExpressionUUID->"90011771-aa6d-4a51-a03b-2dabfb2af9c0"],
Cell[CellGroupData[{
Cell[76415, 1909, 139, 2, 50, "Code",ExpressionUUID->"2310e413-cc81-4a60-9de3-b41431513742"],
Cell[76557, 1913, 11670, 284, 180, "Output",ExpressionUUID->"0d5ad068-2457-40cf-8d4c-d0cfa34e9746"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88276, 2203, 586, 15, 71, "Section",ExpressionUUID->"0aaa0e67-21c7-435f-9947-a7a64ab7ec67"],
Cell[88865, 2220, 103, 0, 34, "Text",ExpressionUUID->"e38b7723-1790-4a6a-bc87-ec50edcb7c7b"],
Cell[CellGroupData[{
Cell[88993, 2224, 149, 1, 31, "Item",ExpressionUUID->"992f0dca-f1d2-4496-b20f-7e697dd4752e"],
Cell[89145, 2227, 282, 4, 31, "Item",ExpressionUUID->"842bfae4-d1a9-4d3a-a2de-ce36db47c142"],
Cell[89430, 2233, 198, 3, 31, "Item",ExpressionUUID->"8b749f3d-a648-4dbf-88be-0c14410af40f"]
}, Open  ]],
Cell[89643, 2239, 114, 0, 34, "Text",ExpressionUUID->"087a20fa-a7fe-4e97-a4ae-636a966fd567"],
Cell[CellGroupData[{
Cell[89782, 2243, 793, 19, 105, "Code",ExpressionUUID->"d6670f0f-137b-4a1f-90ce-c53d978b3165"],
Cell[90578, 2264, 33324, 517, 549, "Output",ExpressionUUID->"ea2ede64-a127-4744-90d5-74196089a31f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[123951, 2787, 588, 15, 71, "Section",ExpressionUUID->"e09f9995-4a0f-42fa-a8ea-15026d084805"],
Cell[124542, 2804, 88, 0, 34, "Text",ExpressionUUID->"d9b58248-031f-4ccb-b6ed-f6b735071ff5"],
Cell[CellGroupData[{
Cell[124655, 2808, 423, 11, 87, "Code",ExpressionUUID->"f775a8e1-33f6-4580-b32e-43ca0382ad8e"],
Cell[125081, 2821, 3246, 75, 136, "Output",ExpressionUUID->"fbe417c1-ecac-4ced-ac19-2e9227a04e42"]
}, Open  ]],
Cell[128342, 2899, 81, 0, 34, "Text",ExpressionUUID->"f8d07e71-daf7-433f-9362-7e20b700fcf6"],
Cell[CellGroupData[{
Cell[128448, 2903, 160, 2, 50, "Code",ExpressionUUID->"01613f79-19a5-4c3c-beba-095d6aedc9c6"],
Cell[128611, 2907, 11481, 279, 202, "Output",ExpressionUUID->"06533638-d258-4629-8a3f-28b3ec8ac1e1"]
}, Open  ]],
Cell[140107, 3189, 92, 0, 34, "Text",ExpressionUUID->"65ba1a24-fbcd-42e9-a9cd-bf9b83d0c080"],
Cell[CellGroupData[{
Cell[140224, 3193, 161, 2, 50, "Code",ExpressionUUID->"c3552983-922d-4fba-bef9-622c6490d388"],
Cell[140388, 3197, 2532, 51, 123, "Output",ExpressionUUID->"510c7247-8a74-4788-b893-1b14f3e1b420"]
}, Open  ]],
Cell[142935, 3251, 81, 0, 34, "Text",ExpressionUUID->"13a71be2-af50-432a-b8ca-4e720e0de512"],
Cell[CellGroupData[{
Cell[143041, 3255, 161, 2, 50, "Code",ExpressionUUID->"1889e211-656d-481f-8c90-103c98cb07cb"],
Cell[143205, 3259, 11839, 287, 182, "Output",ExpressionUUID->"05109540-b9a6-407f-ba27-e2d90cf4800c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[155093, 3552, 586, 15, 71, "Section",ExpressionUUID->"482fb9d1-e3c2-49bd-ba45-234ae199bf0a"],
Cell[155682, 3569, 83, 0, 34, "Text",ExpressionUUID->"1fc533a0-d971-47a9-a6d8-61c68e627123"],
Cell[CellGroupData[{
Cell[155790, 3573, 315, 6, 50, "Code",ExpressionUUID->"3095bba1-89df-4cd7-bce1-36b331431b4a"],
Cell[156108, 3581, 1662, 33, 97, "Output",ExpressionUUID->"40b33f3d-689c-42a8-a679-e756daae1e9a"]
}, Open  ]],
Cell[157785, 3617, 85, 0, 34, "Text",ExpressionUUID->"cdd8f6ff-a394-4170-b86d-e8d3ee865c3e"],
Cell[CellGroupData[{
Cell[157895, 3621, 235, 4, 50, "Code",ExpressionUUID->"195e0e47-8174-4f90-9359-620cbb3ebd20"],
Cell[158133, 3627, 2444, 50, 119, "Output",ExpressionUUID->"34795c04-ac02-4922-a4dd-be0e0b8bbddc"]
}, Open  ]],
Cell[160592, 3680, 83, 0, 34, "Text",ExpressionUUID->"e677df2c-f8f3-4f09-933a-251a752270b0"],
Cell[CellGroupData[{
Cell[160700, 3684, 238, 4, 50, "Code",ExpressionUUID->"a9d746fb-07c1-4a14-8a0e-8564481e7624"],
Cell[160941, 3690, 1077, 20, 71, "Output",ExpressionUUID->"fc2a3c08-2e59-4139-b451-8ad1f558e00c"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

