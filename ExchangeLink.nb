(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    501548,      10561]
NotebookOptionsPosition[    487755,      10341]
NotebookOutlinePosition[    488181,      10358]
CellTagsIndexPosition[    488138,      10355]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Introduction ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "3b6ea99b-f850-49db-8c33-f02b340bd2bc"]
}], "Chapter",ExpressionUUID->"ceb6c9fc-82b6-42fe-b4ea-0cb06a112220"],

Cell["Hi Wolfram Community!", "Text",ExpressionUUID->"94325706-a665-4439-950d-c03da10cba45"],

Cell["\<\
We are going to try to see if we can do a community project. ExchangeLink is \
an attempt to cover the top 10 crypto exchanges with Wolfram Language \
connectivity.\
\>", "Text",ExpressionUUID->"62ddfd43-a8cf-42c8-8ece-ba29c1f6593d"],

Cell["\<\
Binance is the first exchange library and will serve as an example.\
\>", "Text",ExpressionUUID->"47e38a98-4764-4277-aab4-6dd32a046ff9"],

Cell["There are several ways to contribute:", "Text",ExpressionUUID->"07e41d6c-76f2-4e8a-8e05-bd14e8b1ee5a"],

Cell[CellGroupData[{

Cell["Code Editting", "Item",ExpressionUUID->"36c6c467-4486-4705-b3db-d50d5e84aba1"],

Cell[CellGroupData[{

Cell["Suggestions on better function names and coding style.", "Subitem",ExpressionUUID->"0c9fcfdf-3730-4fe1-8ce6-6832421c7409"],

Cell["Documentation", "Subitem",ExpressionUUID->"3f06b1c5-02dd-4825-8168-dd2a29d5641c"],

Cell["Tests", "Subitem",ExpressionUUID->"cf2eaabe-197e-4b45-a934-826e54363268"],

Cell["Examples", "Subitem",ExpressionUUID->"d63990fb-5b5d-40b0-97e6-c3468a1bebf1"]
}, Open  ]],

Cell["Create New Libraries", "Item",ExpressionUUID->"ed0f13ba-8aaf-437d-9e76-a39b1e40b871"],

Cell["Follow the Binance Library Example.", "Subitem",ExpressionUUID->"6efa8d49-9f49-4a55-9021-87ef80d2bc4f"],

Cell["Suggestions", "Item",ExpressionUUID->"d6d3e025-d558-455c-af86-9483a91203b3"],

Cell[CellGroupData[{

Cell["New Exchange Libraries (see list)", "Subitem",ExpressionUUID->"83d6010a-bdea-430f-94b0-049839efd9c8"],

Cell["Examples using the exchange libraries", "Subitem",ExpressionUUID->"40859e22-4afe-4906-bf70-d55794848933"]
}, Open  ]]
}, Open  ]],

Cell["We look forward to seeing how this project goes!", "Text",ExpressionUUID->"dc63ed3d-defc-47f5-96eb-59f7d0edd7e0"],

Cell["Current Suggestions of exchanges:", "Text",ExpressionUUID->"79a685f2-9c44-4a11-a704-84a71197b4f1"],

Cell["Exchanges:", "Text",ExpressionUUID->"da0da92b-9dc7-495d-8b13-2451796f495e"],

Cell[CellGroupData[{

Cell["Binance (.com, .us)", "Item",ExpressionUUID->"11f249a5-f935-43ba-aa96-70a4994d1efb"],

Cell["Bitfinex", "Item",ExpressionUUID->"92838304-4ba9-4bcc-9e24-abaa5d10c025"],

Cell["Coinbase", "Item",ExpressionUUID->"8037e85a-f53e-455f-98f9-64c311d4b8cc"],

Cell["Kraken", "Item",ExpressionUUID->"a0cf709d-63ef-4538-a954-809b3e73b7a3"]
}, Open  ]],

Cell["Futures:", "Text",ExpressionUUID->"2f7f2463-d807-4c75-8426-5929a7572c9b"],

Cell[CellGroupData[{

Cell["Bitmex", "Item",ExpressionUUID->"2a36e40d-24cf-4e7d-a3f5-8c2ba74d91f1"],

Cell["Derbit", "Item",ExpressionUUID->"51726709-685f-45a2-94a2-537be6b1a106"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "d5a17711-e2f2-4f04-a453-5095aeb3029b"]
}], "Chapter",ExpressionUUID->"98423955-86ce-4594-94d4-2f049b426089"],

Cell[CellGroupData[{

Cell["Open any notebook", "Item",ExpressionUUID->"da8b29ed-bb2c-43ca-9ed2-ae2aaeb8d724"],

Cell["Evaluate code:", "Item",ExpressionUUID->"f24dd662-497e-4c7c-8a96-e27e7e0f9917"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PacletInstall", "[", 
  "\"\<https://github.com/ExchangeLink/ExchangeLink/releases/download/v0.0.1/\
ExchangeLink-0.0.1.paclet\>\"", "]"}]], "Code",ExpressionUUID->"d50352aa-480e-\
4810-8145-6155a3815ab4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["PacletObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExchangeLink\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"0.0.1\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              Evaluator -> Automatic, Method -> "Preemptive"], 
             Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{
              Thickness[0.0416667], {
               FaceForm[{
                 RGBColor[0.961, 0.961, 0.961], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.5454, 
                22.5972}, {7.5464, 20.5002}, {2.5454, 18.4022}, {2.5454, 
                12.5982}, {2.5454, 12.5972}, {2.5454, 6.7952}, {7.5454, 
                4.6962}, {7.546, 4.6972}, {12.5454, 2.5992}, {17.5454, 
                4.6972}, {17.5454, 4.6962}, {22.5454, 6.7952}, {22.5454, 
                12.5972}, {22.5454, 12.5982}, {22.5454, 18.4022}}}]}, {
               FaceForm[{
                 RGBColor[0.898, 0.898, 0.898], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 8.3359}, {17.125, 
                14.0569}, {16.875, 14.0569}, {16.875, 8.3359}, {17., 
                8.1169}, {21.952, 6.0399}, {22.049, 6.2709}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 8.3359}, {7.125, 14.0569}, {
                6.875, 14.0569}, {6.875, 8.3359}, {1.952, 6.2709}, {2.048, 
                6.0399}, {7., 8.1169}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8745, 6.2383}, {6.9515, 4.1733}, {7.0475, 
                3.9423}, {11.9995, 6.0193}, {16.9515, 3.9423}, {17.0475, 
                4.1733}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{17.125, 14.1392}, {17.125, 
                19.8602}, {16.875, 19.8602}, {16.875, 14.1392}, {17., 
                13.9202}, {21.952, 11.8432}, {22.049, 12.0742}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}}}, {{{7.125, 14.1392}, {7.125, 19.8602}, {
                6.875, 19.8602}, {6.875, 14.1392}, {1.952, 12.0742}, {2.048, 
                11.8432}, {7., 13.9202}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.8746, 21.3633}, {11.8746, 18.3563}, {
                11.9996, 18.3033}, {12.1246, 18.3563}, {12.1246, 21.3633}, {
                11.9996, 21.4153}}}]}, {
               FaceForm[{
                 RGBColor[0.749, 0.749, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 
                 3}}}, {{{8.292, 19.8594}, {12., 21.4154}, {15.707, 
                 19.8594}, {12., 18.3034}}, {{17.5, 19.5274}, {17.5, 
                 20.1924}, {12., 22.5004}, {6.5, 20.1924}, {6.5, 19.5284}, {
                 12., 17.2194}, {12., 17.2194}, {15.7, 18.7724}, {17.5, 
                 19.5274}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{11.5, 8.5156}, {11.5, 6.4876}, {11.5, 
                5.4026}, {12.5, 5.8226}, {12.5, 8.5156}, {12., 8.3056}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{21.5, 6.4873}, {17.5, 4.8083}, {17.5, 
                 9.5283}, {21.5, 11.2073}}, {{21.5, 12.7113}, {21.5, 
                 12.2913}, {17., 10.4033}, {16.5, 10.6133}, {16.5, 10.1943}, {
                 15.707, 9.8613}, {16.5, 9.5283}, {16.5, 4.8083}, {16.5, 
                 4.8093}, {16.5, 4.3903}, {15.707, 4.0573}, {17., 3.5143}, {
                 22.5, 5.8223}, {22.5, 12.2913}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}}}, {{{6.5, 4.8086}, {2.5, 6.4876}, {2.5, 
                 11.2066}, {6.5, 9.5286}}, {{7.5, 9.1096}, {7.5, 9.1096}, {
                 7.5, 9.5286}, {8.292, 9.8616}, {7.5, 10.1936}, {7.5, 
                 10.6136}, {7., 10.4036}, {2.5, 12.2906}, {2.5, 12.7106}, {
                 1.5, 12.2916}, {1.5, 5.8226}, {7., 3.5146}, {8.293, 
                 4.0576}, {7.5, 4.3906}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{3.2925, 17.7622}, {7.0005, 
                 19.3182}, {10.7075, 17.7622}, {7.0005, 16.2062}}, {{6.5005, 
                 10.6122}, {2.5005, 12.2912}, {2.5005, 17.0102}, {6.5005, 
                 15.3322}}, {{7.5005, 10.1932}, {7.5005, 10.6122}, {7.5005, 
                 15.3322}, {12.0005, 17.2202}, {12.5005, 17.0102}, {12.5005, 
                 18.0952}, {7.0005, 20.4032}, {1.5005, 18.0952}, {1.5005, 
                 11.6262}, {7.0005, 9.3182}, {8.2935, 9.8612}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{21.5, 12.291}, {17.5, 10.612}, {
                 17.5, 15.332}, {21.5, 17.01}}, {{13.293, 17.762}, {17., 
                 19.318}, {20.708, 17.762}, {17., 16.207}}, {{17., 20.403}, {
                 11.5, 18.095}, {11.5, 17.01}, {12., 17.22}, {16.5, 15.332}, {
                 16.5, 10.612}, {16.5, 10.194}, {15.706, 9.861}, {17., 
                 9.318}, {22.5, 11.626}, {22.5, 18.095}}}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}}}, {{{16.4995, 4.3906}, {12.4995, 
                 2.7116}, {12.4995, 7.4316}, {16.4995, 9.1096}}, {{11.4995, 
                 2.7116}, {7.4995, 4.3906}, {7.4995, 9.1096}, {11.4995, 
                 7.4316}}, {{16.4995, 10.6136}, {16.4995, 10.1946}, {11.9995, 
                 8.3056}, {8.2915, 9.8616}, {7.4995, 10.1936}, {7.4995, 
                 10.6146}, {6.4995, 10.1946}, {6.4995, 3.7256}, {11.9995, 
                 1.4176}, {17.4995, 3.7256}, {17.4995, 10.1946}}}]}, {
               FaceForm[{
                 RGBColor[0.965, 0.765, 0.749], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}}}, {{{12., 17.6616}, {16.945, 15.5856}, {16.945, 
                9.9376}, {12., 7.8636}, {7.055, 9.9376}, {7.055, 
                15.5856}}}]}, {
               FaceForm[{
                 RGBColor[0.91, 0.655, 0.635], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{12.125, 
                17.7627}, {11.875, 17.7627}, {11.875, 12.0407}, {6.952, 
                9.9757}, {7.048, 9.7447}, {12., 11.8227}, {16.952, 9.7447}, {
                17.048, 9.9757}, {12.125, 12.0407}}}]}, {
               FaceForm[{
                 RGBColor[0.867, 0.067, 0.], 
                 Opacity[1.]}], 
               
               FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {{{12.5, 8.5146}, {12.5, 13.2336}, {16.5, 14.9116}, {
                 16.5, 10.1926}}, {{7.5, 14.9116}, {11.5, 13.2336}, {11.5, 
                 8.5146}, {7.5, 10.1926}}, {{15.708, 15.6636}, {12., 
                 14.1086}, {8.292, 15.6636}, {12., 17.2206}}, {{12., 
                 18.3046}, {6.5, 15.9956}, {6.5, 9.5286}, {12., 7.2206}, {
                 17.5, 9.5286}, {17.5, 15.9956}}}]}}, AspectRatio -> 
             Automatic, ImageSize -> {24., 24.}, 
             PlotRange -> {{0., 24.}, {0., 24.}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"ExchangeLink\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"0.0.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Location: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"C:\\\\Users\\\\Kirill \
Belov\\\\AppData\\\\Roaming\\\\Mathematica\\\\Paclets\\\\Repository\\\\\
ExchangeLink-0.0.1\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   RowBox[{"Missing", "[", "\"NotAvailable\"", "]"}], Short], 
                  "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  PacletObject[
   Association[
   "Name" -> "ExchangeLink", "Version" -> "0.0.1", "MathematicaVersion" -> 
    "11.3+", "Creator" -> "Kirill Belov", 
    "Extensions" -> {{"Documentation", "Language" -> "English"}}, "Location" -> 
    "C:\\Users\\Kirill \
Belov\\AppData\\Roaming\\Mathematica\\Paclets\\Repository\\ExchangeLink-0.0.\
1"]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",ExpressionUUID->"3235249c-2b8a-481c-ba4a-\
65355031c547"]
}, Open  ]],

Cell["Evaluate code:", "Item",ExpressionUUID->"41bfe437-2bec-4ebe-b164-d2e2921a1ee4"],

Cell[BoxData[
 RowBox[{"Get", "[", "\"\<ExchangeLink`\>\"", "]"}]], "Code",ExpressionUUID->"e3b6e5a9-c9bb-4b47-bcf8-44469c9e2f97"],

Cell["All functions are available", "Item",ExpressionUUID->"d1e297be-636e-4e48-9913-4a25072cdffd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Information ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "2856ef06-e343-4884-99a6-27e2d9a6876b"]
}], "Chapter",ExpressionUUID->"9adeba25-b835-480d-ad55-36bacd7d0804"],

Cell["\<\
After the initialization of Binance API methods are available in the current \
notebook You can see list of functions/methods using following command:\
\>", "Text",ExpressionUUID->"53303002-869d-4501-a034-ac3457f0b8f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExchangeLink`Binance`*"}]], "Code",ExpressionUUID->"ff3e357e-6a4a-49e2-94a3-7d0123522ea2"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ExchangeLink`Binance`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              
              StyleBox["ExchangeLink`Binance`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["BinanceAccountInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceAccountInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceHistoricalTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceHistoricalTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrdersNow", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOCOrdersNow", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinancePing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinancePing", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceAggTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceAggTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceKlines", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceKlines", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderCancel", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOrderCancel", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinancePrice", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinancePrice", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceAveragePrice", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceAveragePrice", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceMyTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceMyTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderCreate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOrderCreate", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceSell", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceSell", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceBookTicker", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceBookTicker", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderCancel", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOCOrderCancel", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderGet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOrderGet", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTicker", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceTicker", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceBuy", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceBuy", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderCreate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOCOrderCreate", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrdersAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOrdersAll", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTime", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceTime", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceDepth", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceDepth", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderGet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOCOrderGet", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrdersNow", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOrdersNow", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceExchangeInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceExchangeInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrdersAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOCOrdersAll", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderTest", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "BinanceOrderTest", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$BinanceExchangeInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-0f762b8b-3a96-4c09-b679-1ba780fc4ec8", {
                   "$BinanceExchangeInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",Exp\
ressionUUID->"64cf5658-7e07-4e50-b493-ed3e311dda56"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "General data ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "a63fcb0c-b987-4e8f-a2a7-1c6c9ab85c37"]
}], "Chapter",ExpressionUUID->"19d08895-99cf-44a8-be98-356a0246821d"],

Cell["General information from the Binance server.", "Text",ExpressionUUID->"da47335a-6c7f-411a-8322-15afd7b2f9e6"],

Cell["\<\
Check that the server is available and get the server time. This is needed if \
you want to use the trade API. The server time is used in the creation of the \
e-sign.\
\>", "Text",ExpressionUUID->"aed67ffc-dfa0-4820-a0b2-6b31a983f72f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BinancePing", "[", "]"}], "\n", 
 RowBox[{"BinanceTime", "[", "]"}]}], "Code",ExpressionUUID->"e18d0e66-fca2-\
4120-8dfd-c53971823316"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]], "Output",ExpressionUU\
ID->"c6919428-e49b-459b-b2e1-7e21c93da742"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"serverTime\"\>", "\[Rule]", 
   TemplateBox[{
     RowBox[{"\"Mon 20 Apr 2020 07:27:22\"", 
       StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2020", ",", "4", ",", "20", ",", "7", ",", "27", ",", 
             "22.956000328063965`"}], "}"}], ",", "\"Instant\"", ",", 
         "\"Gregorian\"", ",", "0.`"}], "]"}]},
    "DateObject",
    Editable->False]}], "\[RightAssociation]"}]], "Output",ExpressionUUID->\
"a74a6373-38d9-454e-9aa5-e561f9496f53"]
}, Open  ]],

Cell["\<\
Information about order limits and precision. List of all the trading pairs \
available on Binance and the current statuses. This is the information you \
need, if you want to create your own orders. Binance has restrictions on \
precision of prices or quantities in orders.\
\>", "Text",ExpressionUUID->"257132ec-378a-4fcf-ba61-7ff6f5c66466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceExchangeInfo", "[", "]"}]], "Code",ExpressionUUID->"d5560724-e0ea-4935-86c3-5baaf73145fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"timezone\"\>", "\[Rule]", "\<\"UTC\"\>"}], ",", 
           TemplateBox[{"3"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"symbols\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[LeftAssociation]", 
               RowBox[{
                RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"ETHBTC\"\>"}], ",", 
                RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"TRADING\"\>"}], ",", 
                RowBox[{"\<\"baseAsset\"\>", "\[Rule]", "\<\"ETH\"\>"}], ",", 
                TemplateBox[{"9"},
                 "OutputSizeLimit`Skeleton"], ",", 
                RowBox[{
                 RowBox[{"\<\"i\"\>", "\[Ellipsis]", "\<\"ed\"\>"}], 
                 "\[Rule]", "True"}], ",", 
                RowBox[{"\<\"isMarginTradingAllowed\"\>", "\[Rule]", "True"}],
                 ",", 
                RowBox[{"\<\"filters\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"PRICE_FILTER\"\>"}], ",", 
                    RowBox[{"\<\"minPrice\"\>", "\[Rule]", "1.`*^-6"}], ",", 
                    RowBox[{"\<\"maxPrice\"\>", "\[Rule]", "100000.`"}], ",", 
                    RowBox[{"\<\"tickSize\"\>", "\[Rule]", "1.`*^-6"}]}], 
                    "\[RightAssociation]"}], ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"PERCENT_PRICE\"\>"}], ",", 
                    RowBox[{"\<\"multiplierUp\"\>", "\[Rule]", "5"}], ",", 
                    RowBox[{"\<\"multiplierDown\"\>", "\[Rule]", "0.2`"}], 
                    ",", 
                    RowBox[{"\<\"avgPriceMins\"\>", "\[Rule]", "5"}]}], 
                    "\[RightAssociation]"}], ",", 
                   TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"MAX_NUM_ALGO_ORDERS\"\>"}], ",", 
                    RowBox[{"\<\"maxNumAlgoOrders\"\>", "\[Rule]", "5"}]}], 
                    "\[RightAssociation]"}]}], "}"}]}]}], 
               "\[RightAssociation]"}], ",", 
              TemplateBox[{"788"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\[LeftAssociation]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 23046009482329666571, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 23046009482329666571, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 10, 23046009482329666571, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23046009482329666571 === $SessionID, 
   Out[10], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",ExpressionUUID->"132900b3-fe0c-4a22-b1e6-69da9dcba076"]
}, Open  ]],

Cell[TextData[{
 "ExchangeInfo cache. ",
 StyleBox["BinanceExchangeInfo[]",
  FontWeight->"Bold"],
 " is nearly constant data. It changes about one time per week. So you can \
save the current value of this variable in the session and you can use it \
without another request to Binance. The value that is saved in memory exists \
for one day. After time 00:00 ",
 StyleBox["$BinanceExchangeInfo",
  FontWeight->"Bold"],
 " will be updated."
}], "Text",ExpressionUUID->"1062b093-279e-45f7-ae63-a53ffcdd8aae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", " ", "@", " ", "\n", 
  RowBox[{
   RowBox[{"Query", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"<|", "\n", "\t", 
      RowBox[{
       RowBox[{"\"\<symbol\>\"", " ", "->", " ", "\"\<symbol\>\""}], ",", " ",
        "\n", "\t", 
       RowBox[{"\"\<minPrice\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "1", " ", "/*", " ", "2"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<maxPrice\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "1", " ", "/*", " ", "3"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<tickSize\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "1", " ", "/*", " ", "4"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<minQty\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "3", " ", "/*", " ", "2"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<maxQty\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "3", " ", "/*", " ", "3"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<stepSize\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "3", " ", "/*", " ", "4"}]}]}], 
      "|>"}]}], "]"}], " ", "@", " ", "\n", 
   RowBox[{"$BinanceExchangeInfo", "[", "\"\<symbols\>\"", "]"}]}]}]], "Code",\
ExpressionUUID->"8d54f4e8-7193-4f5c-a896-c3c41726d23b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "symbol" -> "ETHBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 100000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "LTCBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BNBBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "NEOBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "QTUMETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "EOSETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SNTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BNTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BCCBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 100000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "GASBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BNBETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BTCUSDT", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHUSDT", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 9000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "HSRBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 1.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "OAXETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DNTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MCOETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ICNETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MCOBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WTCBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WTCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LRCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LRCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QTUMBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "YOYOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "OMGBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "OMGETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ZRXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZRXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STRATBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STRATETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SNGLSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SNGLSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BQXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BQXETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KNCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KNCETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FUNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FUNETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SNMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SNMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NEOETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "IOTABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "IOTAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LINKBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LINKETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XVGBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XVGETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SALTBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SALTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "MDABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MDAETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MTLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MTLETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SUBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SUBETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "EOSBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ETCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ETCBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "MTHBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MTHETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ENGBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ENGETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZECBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ZECETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ASTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ASTETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DASHBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DASHETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "OAXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ICNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTGBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 1.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BTGETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "EVXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "EVXETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "REQBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "REQETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIBETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HSRETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TRXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TRXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POWRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POWRETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARKBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARKETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "YOYOETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XRPBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XRPETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MODBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "MODETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ENJBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ENJETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORJBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORJETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BNBUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "VENBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "YOYOBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POWRBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 900000., 
        "stepSize" -> 0.1], 
       Association[
       "symbol" -> "VENBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VENETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KMDBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "KMDETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NULSBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "RCNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RCNETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RCNBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NULSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NULSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RDNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RDNETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RDNBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XMRBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "XMRETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DLTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WTCBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 900000., 
        "stepSize" -> 0.1], 
       Association[
       "symbol" -> "DLTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DLTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AMBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AMBETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AMBBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCCETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCCUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCCBNB", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BATBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BATETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BATBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BCPTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCPTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCPTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARNETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GVTBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "GVTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "CDTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CDTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GXSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GXSETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NEOUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "NEOBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "POEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POEETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QSPBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QSPETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QSPBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTSBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XZCBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "XZCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "XZCBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LSKBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LSKETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LSKBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TNTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FUELBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FUELETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MANABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MANAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCDETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DGDBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DGDETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "IOTABNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADXETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PPTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PPTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "CMTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CMTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CMTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XLMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XLMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XLMBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CNDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CNDETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CNDBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LENDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LENDETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WABIBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WABIETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WABIBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LTCETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "LTCUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "TNBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TNBETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WAVESBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WAVESETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WAVESBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "GTOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GTOETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GTOBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ICXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ICXETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ICXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "OSTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "OSTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "OSTBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ELFBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ELFETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AIONBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AIONETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "AIONBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NEBLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NEBLETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NEBLBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BRDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BRDETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BRDBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MCOBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EDOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "EDOETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WINGSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WINGSETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NAVBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NAVETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NAVBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LUNBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LUNETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TRIGBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TRIGETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TRIGBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "APPCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "APPCETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "APPCBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIBEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIBEETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RLCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RLCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "RLCBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "INSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "INSETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "PIVXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PIVXETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "PIVXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 900000., 
        "stepSize" -> 0.1], 
       Association[
       "symbol" -> "IOSTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "IOSTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CHATBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CHATETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STEEMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STEEMETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "STEEMBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NANOBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NANOETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NANOBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "VIABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIAETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "VIABNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BLZBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BLZETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BLZBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AEETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "AEBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "RPXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RPXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RPXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NCASHBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NCASHETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NCASHBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POABNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZILBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZILETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZILBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONTBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ONTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ONTBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "STORMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORMBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QTUMBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "QTUMUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "XEMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XEMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XEMBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WANBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WANETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WANBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "WPRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WPRETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QLCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QLCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SYSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SYSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SYSBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QLCBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GRSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GRSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADAUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADABNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CLOAKBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "CLOAKETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "GNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GNTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GNTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 900000., "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LOOMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LOOMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LOOMBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XRPUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BCNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCNETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCNBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "REPBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "REPETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "REPBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BTCTUSD", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "TUSDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ETHTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "TUSDETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TUSDBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ZENBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ZENETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ZENBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SKYBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SKYETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "SKYBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "EOSBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "CVCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CVCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CVCBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "THETABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "THETAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "THETABNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XRPBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TUSDUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "IOTAUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XLMUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "IOTXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "IOTXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QKCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QKCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AGIBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AGIETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AGIBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NXSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NXSETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NXSBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ENJBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DATABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DATAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONTUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "TRXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TRXUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ETCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ETCBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ICXUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "SCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SCBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NPXSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NPXSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VENUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "KEYBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KEYETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NASBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NASETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NASBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MFTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MFTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MFTBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DENTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DENTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARDRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARDRETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARDRBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NULSUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "HOTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HOTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VETBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VETETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VETUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VETBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOCKBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOCKETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POLYBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POLYBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HCBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "HCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "GOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GOBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PAXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PAXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "PAXUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "PAXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RVNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RVNBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DCRBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DCRBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "USDCBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MITHBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MITHBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCHABCBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCHSVBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCHABCUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHSVUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCPAX", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XLMPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "RENBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RENBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BNBTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XRPTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XLMTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BNBUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCUSDC", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XLMUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "USDCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ADATUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TRXTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NEOTUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "TRXXRP", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XZCXRP", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "PAXTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDCTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDCPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LINKUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LINKTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LINKPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LINKUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WAVESUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WAVESTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WAVESPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WAVESUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BCHABCTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHABCPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHABCUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHSVTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHSVPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHSVUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "TRXPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TRXUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTTBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTTUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BNBUSDS", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCUSDS", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "USDSUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTTPAX", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTTTUSD", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTTUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONGBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ONGBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONGUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "HOTBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HOTUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZILUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ZRXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ZRXUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "FETBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FETBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FETUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BATUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XMRBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "XMRUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ZECUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "IOSTBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "IOSTUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CELRBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CELRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CELRUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADAPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADAUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NEOPAX", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "NEOUSDC", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DASHBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DASHUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "NANOUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "OMGBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "OMGUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "THETAUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ENJUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MITHUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MATICBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MATICBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MATICUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ATOMBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ATOMBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ATOMUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ATOMUSDC", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ATOMPAX", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ATOMTUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ETCUSDC", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ETCPAX", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ETCTUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BATUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BATPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BATTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "PHBBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHBUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "PHBTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "PHBPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TFUELBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELUSDC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELTUSD", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELPAX", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONEBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONEUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ONETUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ONEPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ONEUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTMBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FTMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FTMUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTMTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTMPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTMUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTCBBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCPTTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BCPTPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BCPTUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ALGOBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ALGOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ALGOUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ALGOTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ALGOPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ALGOUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSBUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSBUSDS", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "GTOUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "GTOPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "GTOTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "GTOUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ERDBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ERDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ERDUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ERDPAX", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ERDUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEPAX", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DUSKBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "DUSKBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DUSKUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "DUSKUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "DUSKPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BGBPUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ANKRBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRTUSD", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRPAX", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRUSDC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONTPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ONTUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WINBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WINBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WINUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WINUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COSBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COSUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TUSDBTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "NPXSUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NPXSUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COCOSBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COCOSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COCOSUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MTLUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "TOMOBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TOMOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TOMOUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "TOMOUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "PERLBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PERLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PERLUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "PERLUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "DENTUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MFTUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KEYUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORMUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOCKUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WANUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "FUNUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CVCUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTTTRX", "minPrice" -> 0.00001, "maxPrice" -> 100000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^7, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "WINTRX", "minPrice" -> 0.00001, "maxPrice" -> 100000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^7, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "CHZBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CHZBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CHZUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BANDBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BANDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BANDUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BNBBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCBUSD", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BUSDUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BEAMBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BEAMBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BEAMUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XTZBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XTZBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "XTZUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "RENUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "RVNUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "HCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "HBARBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HBARBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HBARUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NKNBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NKNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NKNUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XRPBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ETHBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHABCBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LINKBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ETCBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "STXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "STXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STXUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "KAVABNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "KAVABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KAVAUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BUSDNGN", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.01, "maxQty" -> 100000., "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BNBNGN", "minPrice" -> 1., "maxPrice" -> 1.*^6, 
        "tickSize" -> 1., "minQty" -> 0.001, "maxQty" -> 100000., "stepSize" -> 
        0.001], 
       Association[
       "symbol" -> "BTCNGN", "minPrice" -> 1., "maxPrice" -> 1.*^8, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ARPABNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARPABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARPAUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TRXBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "IOTXUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RLCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "MCOUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "XLMBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADABUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "CTXCBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CTXCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CTXCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BCHBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCHBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCHUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BTCRUB", "minPrice" -> 1., "maxPrice" -> 1.*^8, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHRUB", "minPrice" -> 0.1, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.1, "minQty" -> 0.00001, "maxQty" -> 100000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPRUB", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BNBRUB", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.01, "maxQty" -> 100000., "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TROYBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TROYBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TROYUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BUSDRUB", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "QTUMBUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "VETBUSD", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VITEBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VITEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VITEUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTTBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "FTTBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "FTTUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BTCTRY", "minPrice" -> 1., "maxPrice" -> 1.*^7, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BNBTRY", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.01, "maxQty" -> 100000., "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BUSDTRY", "minPrice" -> 0.001, "maxPrice" -> 100000., 
        "tickSize" -> 0.001, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ETHTRY", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 100000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPTRY", "minPrice" -> 0.001, "maxPrice" -> 100000., 
        "tickSize" -> 0.001, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDTTRY", "minPrice" -> 0.001, "maxPrice" -> 100000., 
        "tickSize" -> 0.001, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDTRUB", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTCEUR", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHEUR", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBEUR", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XRPEUR", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EURBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "EURUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "OGNBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "OGNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "OGNUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "DREPBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DREPBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DREPUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ETHBULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHBULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHBEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ETHBEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "TCTBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TCTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TCTUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WRXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WRXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WRXUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ICXBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTSUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTSBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "LSKUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BNTUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BNTBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LTOBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LTOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LTOUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ATOMBUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DASHBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "NEOBUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "WAVESBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XTZBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "EOSBULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "EOSBULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "EOSBEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "EOSBEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPBULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPBULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPBEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPBEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BATBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ENJBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NANOBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ONTBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "RVNBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "STRATBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "STRATBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "STRATUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "AIONBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "AIONUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "MBLBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MBLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MBLUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COTIBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COTIBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COTIUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ALGOBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTTBUSD", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TOMOBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XMRBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBBULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBBULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBBEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBBEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "STPTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STPTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STPTUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTCZAR", "minPrice" -> 1., "maxPrice" -> 1.*^8, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHZAR", "minPrice" -> 0.1, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.1, "minQty" -> 0.00001, "maxQty" -> 100000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBZAR", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.01, "maxQty" -> 100000., "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "USDTZAR", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BUSDZAR", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTCBKRW", "minPrice" -> 1., "maxPrice" -> 7.*^8, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHBKRW", "minPrice" -> 1., "maxPrice" -> 1.*^7, 
        "tickSize" -> 1., "minQty" -> 0.00001, "maxQty" -> 8000., "stepSize" -> 
        0.00001], 
       Association[
       "symbol" -> "BNBBKRW", "minPrice" -> 1., "maxPrice" -> 5.*^6, 
        "tickSize" -> 1., "minQty" -> 0.001, "maxQty" -> 10000., "stepSize" -> 
        0.001], 
       Association[
       "symbol" -> "WTCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "DATABUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "DATAUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XZCUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "SOLBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "SOLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SOLBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCIDRT", "minPrice" -> 1., "maxPrice" -> 9.*^9, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BNBIDRT", "minPrice" -> 1., "maxPrice" -> 5.*^7, 
        "tickSize" -> 1., "minQty" -> 0.001, "maxQty" -> 100000., "stepSize" -> 
        0.001], 
       Association[
       "symbol" -> "USDTIDRT", "minPrice" -> 1., "maxPrice" -> 1.*^6, 
        "tickSize" -> 1., "minQty" -> 0.01, "maxQty" -> 1.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BUSDIDRT", "minPrice" -> 1., "maxPrice" -> 1.*^6, 
        "tickSize" -> 1., "minQty" -> 0.01, "maxQty" -> 1.*^6, "stepSize" -> 
        0.01]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "symbol"} -> 1, {All, "minPrice"} -> 
        1, {All, "maxPrice"} -> 1, {All, "tickSize"} -> 1, {All, "minQty"} -> 
        1, {All, "maxQty"} -> 1, {All, "stepSize"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "symbol" -> TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "minPrice" -> TypeSystem`PackageScope`AtomShape[60], "maxPrice" -> 
            TypeSystem`PackageScope`AtomShape[60], "tickSize" -> 
            TypeSystem`PackageScope`AtomShape[60], "minQty" -> 
            TypeSystem`PackageScope`AtomShape[60], "maxQty" -> 
            TypeSystem`PackageScope`AtomShape[60], "stepSize" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 7, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "symbol", "minPrice", "maxPrice", "tickSize", "minQty", "maxQty", 
         "stepSize"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 790], "Meta" -> 
     Association["ID" -> 149739938641052], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "symbol"} -> 1, {All, "minPrice"} -> 
        1, {All, "maxPrice"} -> 1, {All, "tickSize"} -> 1, {All, "minQty"} -> 
        1, {All, "maxQty"} -> 1, {All, "stepSize"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "symbol" -> TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "minPrice" -> TypeSystem`PackageScope`AtomShape[60], "maxPrice" -> 
            TypeSystem`PackageScope`AtomShape[60], "tickSize" -> 
            TypeSystem`PackageScope`AtomShape[60], "minQty" -> 
            TypeSystem`PackageScope`AtomShape[60], "maxQty" -> 
            TypeSystem`PackageScope`AtomShape[60], "stepSize" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 7, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "symbol", "minPrice", "maxPrice", "tickSize", "minQty", "maxQty", 
         "stepSize"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 790], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7, "DataRowCount" -> 
     790, "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["symbol", 
                    Style[
                    "symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "symbol"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["minPrice", 
                    Style[
                    "minPrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "minPrice"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "minPrice"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["maxPrice", 
                    Style[
                    "maxPrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "maxPrice"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "maxPrice"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["tickSize", 
                    Style[
                    "tickSize", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "tickSize"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "tickSize"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["minQty", 
                    Style[
                    "minQty", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "minQty"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "minQty"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["maxQty", 
                    Style[
                    "maxQty", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "maxQty"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "maxQty"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["stepSize", 
                    Style[
                    "stepSize", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "stepSize"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "stepSize"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["ETHBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LTCBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNBBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NEOBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["QTUMETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["EOSETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SNTETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNTETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BCCBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["GASBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNBETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTCUSDT", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETHUSDT", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["HSRBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["OAXETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DNTETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MCOETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ICNETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MCOBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["WTCBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 790, 1], {1, 790 - -20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 790, 1], {1, 790 - -20 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    790, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    790, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 790, 1], {1, 790 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 790, 1], {1, 790 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{576., {267., 273.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{576., {267., 273.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",ExpressionUUID->"e13e0394-3b9a-40bf-9111-\
e16707602366"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Market data ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "cce4f036-c736-419e-8e7c-33a01997de2c"]
}], "Chapter",ExpressionUUID->"348b3326-d9bc-4c2f-988a-25802b64f3ba"],

Cell["Current order book", "Text",ExpressionUUID->"a311d586-9708-4079-a6c4-0776847830b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"depth", " ", "=", " ", 
   RowBox[{"BinanceDepth", "[", "\"\<BTCUSDT\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bids", " ", "=", " ", 
    RowBox[{"depth", "[", "\"\<bids\>\"", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"asks", " ", "=", " ", 
    RowBox[{"depth", "[", "\"\<asks\>\"", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"min", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"bids", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"asks", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"bidNormalizaer", " ", "=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"bids", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "/", " ", "min"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"askNormalizaer", " ", "=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"asks", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "/", " ", "min"}], 
    "]"}]}], ";"}]}], "Code",ExpressionUUID->"23cc675d-b614-432d-94c6-\
2e02b45b7756"],

Cell[TextData[{
 "Representation of the order book using ",
 StyleBox["Histogram",
  FontWeight->"Bold"],
 ":"
}], "Text",ExpressionUUID->"7d5d4411-d1b5-4316-8df4-dd008f62141e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PairedHistogram", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"bids", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{"bidNormalizaer", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"Length", "@", "bidNormalizaer"}]}], "}"}]}], "]"}], "]"}], 
   ",", " ", "\n", "\t", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"asks", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{"askNormalizaer", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"Length", "@", "askNormalizaer"}]}], "}"}]}], "]"}], "]"}], 
   ",", " ", "\n", "\t", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", "\n", "\t", 
   RowBox[{"ChartLabels", " ", "->", " ", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<BIDS\>\"", ",", " ", "\"\<ASKS\>\""}], "}"}], ",", " ", 
        "Above"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<r1\>\"", ",", " ", "\"\<r2\>\""}], "}"}], ",", " ", 
        "Tooltip"}], "]"}]}], "\n", "\t", "}"}]}], ",", " ", "\n", "\t", 
   RowBox[{"LabelingFunction", " ", "->", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"#1", " ", "==", " ", "0"}], ")"}]}], ",", " ", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"#1", "*", "min"}], ",", " ", "Center"}], "]"}], ",", " ", 
        "None"}], "]"}], "&"}], ")"}]}], ",", " ", "\n", "\t", 
   RowBox[{"FrameTicks", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", "Automatic"}], "}"}]}]}], "\n", "]"}]], "Code",\
ExpressionUUID->"36b69576-c104-483d-ba11-4cbfc622bd0d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5389999999999999], Thickness[Small]}], {
     TagBox[
      TooltipBox[{{}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1276., 7168.}], 
             Offset[{0, 0}, {-1057., 7169.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{255.85592272013827`, 262.59656160458445`}, {
            138.44364070396114`, 152.05060262736515`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1976., 7169.}], 
             Offset[{0, 0}, {-1057., 7170.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{235.90867514428294`, 262.59656160458445`}, {
            125.33667878057167`, 138.94364070396114`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-2096., 7170.}], 
             Offset[{0, 0}, {-1057., 7171.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{232.48914698842202`, 262.59656160458445`}, {
            112.22971685718221`, 125.83667878057167`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-6353., 7171.}], 
             Offset[{0, 0}, {-1057., 7172.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{111.18138565925616`, 262.59656160458445`}, {
            99.1227549337782, 112.72971685718221`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-2471., 7172.}], 
             Offset[{0, 0}, {-1057., 7173.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{221.80312150135669`, 262.59656160458445`}, {
            86.01579301038873, 99.6227549337782}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1284., 7173.}], 
             Offset[{0, 0}, {-1057., 7174.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{255.62795417641422`, 262.59656160458445`}, {
            72.90883108699927, 86.51579301038873}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-8224., 7174.}], 
             Offset[{0, 0}, {-1057., 7175.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{57.86524249579142, 262.59656160458445`}, {
            59.801869163595256`, 73.40883108699927}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-3752., 7175.}], 
             Offset[{0, 0}, {-1057., 7176.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{185.29965843754144`, 262.59656160458445`}, {
            46.694907240205794`, 60.301869163595256`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1733., 7176.}], 
             Offset[{0, 0}, {-1057., 7177.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{242.83321965990132`, 262.59656160458445`}, {
            33.58794531680178, 47.194907240205794`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1602., 7177.}], 
             Offset[{0, 0}, {-1057., 7178.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{246.5662045633828, 262.59656160458445`}, {
            20.480983393412316`, 34.08794531680178}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-2747., 7178.}], 
             Offset[{0, 0}, {-1057., 7179.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{213.9382067428766, 262.59656160458445`}, {
            7.3740214700228535`, 20.980983393412316`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-5983., 7179.}], 
             Offset[{0, 0}, {-1057., 7180.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{121.72493080649397`, 
            262.59656160458445`}, {-5.732940453381161, 7.8740214700228535`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-3920., 7180.}], 
             Offset[{0, 0}, {-1057., 7181.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{180.51231901933616`, 
            262.59656160458445`}, {-18.839902376770624`, -5.232940453381161}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-4959., 7181.}], 
             Offset[{0, 0}, {-1057., 7182.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{150.90490440317376`, 
            262.59656160458445`}, {-31.946864300160087`, \
-18.339902376770624`}}],
          "DelayedMouseEffectStyle"]}, {}, {}},
       StyleBox["\"r1\"", {}, StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style["r1", {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[{{}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5389999999999999], Thickness[Small]}], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {1062., 7182.}], 
             Offset[{0, 0}, {1057., 7183.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.3372492836675, 
            322.9797296234951}, {-45.0538262235641, -31.446864300160087`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {5155., 7183.}], 
             Offset[{0, 0}, {1057., 7184.}], "RoundingRadius" -> 0]},
           ImageSizeCache->{{322.3372492836675, 
            439.6141358063177}, {-58.160788146953564`, -44.5538262235641}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {5078., 7184.}], 
             Offset[{0, 0}, {1057., 7185.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.3372492836675, 
            437.4199385729736}, {-71.26775007035758, -57.660788146953564`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {3273., 7185.}], 
             Offset[{0, 0}, {1057., 7186.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.3372492836675, 
            385.9845358952324}, {-84.37471199374704, -70.76775007035758}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {2910., 7186.}], 
             Offset[{0, 0}, {1057., 7187.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.3372492836675, 
            375.64046322375316`}, {-97.4816739171365, -83.87471199374704}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {5214., 7187.}], 
             Offset[{0, 0}, {1057., 7188.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.3372492836675, 
            441.29540381628266`}, {-110.58863584054052`, -96.9816739171365}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {3365., 7188.}], 
             Offset[{0, 0}, {1057., 7189.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.3372492836675, 
            388.6061741480591}, {-123.69559776392998`, -110.08863584054052`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {9513., 7189.}], 
             Offset[{0, 0}, {1057., 7190.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.3372492836675, 
            563.7999999999998}, {-136.80255968731944`, -123.19559776392998`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {4024., 7190.}], 
             Offset[{0, 0}, {1057., 7191.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{322.3372492836675, 
            407.3850829373286}, {-149.90952161072346`, -136.30255968731944`}}],
          "DelayedMouseEffectStyle"]}, {}, {}},
       StyleBox["\"r1\"", {}, StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style["r1", {}], 
       "Tooltip"]& ]}, {}}, {{{{{{{{{}, {{}, 
            InsetBox["0.307695`", {-1166.5, 7168.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["1.291195`", {-1516.5, 7169.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["1.459795`", {-1576.5, 7170.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["7.44088`", {-3705., 7171.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["1.98667`", {-1764., 7172.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.318935`", {-1170.5, 7173.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["10.069635`", {-4640.5, 7174.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["3.786475`", {-2404.5, 7175.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.94978`", {-1395., 7176.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.765725`", {-1329.5, 7177.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["2.37445`", {-1902., 7178.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["6.92103`", {-3520., 7179.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["4.022515`", {-2488.5, 7180.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["5.48231`", {-3008., 7181.5}, 
             ImageScaled[{0.5, 0.5}]]}}}, {}}, 
        InsetBox["\<\"BIDS\"\>", Offset[{0, 4}, {-4640.5, 7182.}], 
         ImageScaled[{0.5, 0}]]}, {}}, {{{{{{}, {{}, 
            InsetBox["0.007025`", {1059.5, 7182.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["5.75769`", {3106., 7183.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["5.6495049999999996`", {3067.5, 7184.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["3.11348`", {2165., 7185.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["2.603465`", {1983.5, 7186.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["5.840585`", {3135.5, 7187.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["3.24274`", {2211., 7188.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["11.88068`", {5285., 7189.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["4.168635`", {2540.5, 7190.5}, 
             ImageScaled[{0.5, 0.5}]]}}}, {}}, 
        InsetBox["\<\"ASKS\"\>", Offset[{0, 4}, {5285., 7191.}], 
         ImageScaled[{0.5, 0}]]}, {}}}, {}}, {}}, 
   StyleBox[{
     {Opacity[0], PointBox[{{-8931.65, 7167.08}, {8931.65, 7167.08}}]}, {
      StyleBox[{
        LineBox[{
         Offset[{0, 0}, {-1057.0000000000157`, 7166.8499999999}], 
          Offset[{0, 0}, {-1057.0000000000157`, 7192.150000000042}]}], 
        StyleBox[{{
           LineBox[{{
             Offset[{0, 0}, {-1057.0000000000157`, 7170.0000000002065`}], 
              Offset[{4., 0}, {-1057.0000000000157`, 7170.0000000002065`}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7175.0000000002065`}], 
              Offset[{4., 0}, {-1057.0000000000157`, 7175.0000000002065`}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7180.0000000002065`}], 
              Offset[{4., 0}, {-1057.0000000000157`, 7180.0000000002065`}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7185.000000000207}], 
              Offset[{4., 0}, {-1057.0000000000157`, 7185.000000000207}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7190.000000000207}], 
              Offset[{4., 0}, {-1057.0000000000157`, 7190.000000000207}]}}], 
           LineBox[{{
             Offset[{0, 0}, {-1057.0000000000157`, 7166.999999999971}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7166.999999999971}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7167.999999999854}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7167.999999999854}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7168.999999999735}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7168.999999999735}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7171.000000000089}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7171.000000000089}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7171.999999999971}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7171.999999999971}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7172.999999999854}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7172.999999999854}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7173.999999999735}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7173.999999999735}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7176.000000000089}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7176.000000000089}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7176.999999999971}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7176.999999999971}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7177.999999999854}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7177.999999999854}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7178.999999999735}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7178.999999999735}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7181.000000000089}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7181.000000000089}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7181.999999999971}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7181.999999999971}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7182.999999999854}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7182.999999999854}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7183.999999999736}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7183.999999999736}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7186.000000000089}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7186.000000000089}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7186.999999999972}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7186.999999999972}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7187.999999999854}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7187.999999999854}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7188.999999999736}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7188.999999999736}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7191.000000000089}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 7191.000000000089}]}, {
             Offset[{0, 0}, {-1057.0000000000157`, 7191.999999999972}], 
              Offset[{2.5, 0.}, {-1057.0000000000157`, 
               7191.999999999972}]}}]}, 
          
          StyleBox[{{{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}, "GraphicsLabel",
           StripOnInput->False]}, "GraphicsTicks",
         StripOnInput->False]}, "GraphicsAxes",
       StripOnInput->False,
       Antialiasing->False], 
      StyleBox[{
        LineBox[{
         Offset[{0, 0}, {1057.0000000000157`, 7166.8499999999}], 
          Offset[{0, 0}, {1057.0000000000157`, 7192.150000000042}]}], 
        StyleBox[{{
           LineBox[{{
             Offset[{0, 0}, {1057.0000000000157`, 7170.0000000002065`}], 
              Offset[{-4., 0}, {1057.0000000000157`, 7170.0000000002065`}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7175.0000000002065`}], 
              Offset[{-4., 0}, {1057.0000000000157`, 7175.0000000002065`}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7180.0000000002065`}], 
              Offset[{-4., 0}, {1057.0000000000157`, 7180.0000000002065`}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7185.000000000207}], 
              Offset[{-4., 0}, {1057.0000000000157`, 7185.000000000207}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7190.000000000207}], 
              Offset[{-4., 0}, {1057.0000000000157`, 7190.000000000207}]}}], 
           LineBox[{{
             Offset[{0, 0}, {1057.0000000000157`, 7166.999999999971}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7166.999999999971}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7167.999999999854}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7167.999999999854}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7168.999999999735}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7168.999999999735}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7171.000000000089}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7171.000000000089}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7171.999999999971}], Offset[
              {-2.5, 0.}, {1057.0000000000157`, 7171.999999999971}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7172.999999999854}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7172.999999999854}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7173.999999999735}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7173.999999999735}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7176.000000000089}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7176.000000000089}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7176.999999999971}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7176.999999999971}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7177.999999999854}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7177.999999999854}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7178.999999999735}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7178.999999999735}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7181.000000000089}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7181.000000000089}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7181.999999999971}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7181.999999999971}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7182.999999999854}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7182.999999999854}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7183.999999999736}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7183.999999999736}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7186.000000000089}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7186.000000000089}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7186.999999999972}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7186.999999999972}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7187.999999999854}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7187.999999999854}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7188.999999999736}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7188.999999999736}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7191.000000000089}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 7191.000000000089}]}, {
             Offset[{0, 0}, {1057.0000000000157`, 7191.999999999972}], 
              Offset[{-2.5, 0.}, {1057.0000000000157`, 
               7191.999999999972}]}}]}, 
          
          StyleBox[{{{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}, "GraphicsLabel",
           StripOnInput->False]}, "GraphicsTicks",
         StripOnInput->False]}, "GraphicsAxes",
       StripOnInput->False,
       Antialiasing->False], {
       StyleBox[InsetBox[
         PaneBox["7170"], {0, 7170.0000000002065}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["7175"], {0, 7175.0000000002065}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["7180"], {0, 7180.0000000002065}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["7185"], {0, 7185.000000000207}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["7190"], {0, 7190.000000000207}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False]}, {}}},
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {None, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.02]}}]], "Output",ExpressionUUID->"414aa9a6-31c6-4a8a-bbbc-\
f1cb33ef2f0d"]
}, Open  ]],

Cell["Last trades for the pair - order size, time and other", "Text",ExpressionUUID->"47244977-20ba-41e8-8ff1-cbc6c84c91ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTrades", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",ExpressionUUI\
D->"e6ed90fb-8bfc-4b64-819e-90251de0cb1d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"id\"\>", "\[Rule]", "297473194"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "7183.77`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.002741`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "19.69071357`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Mon 20 Apr 2020 07:27:53\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "20", ",", "7", ",", "27", ",", 
                    "53.17799997329712`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyerMaker\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"498"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"id\"\>", "\[Rule]", "297473693"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "7182.26`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.035078`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "251.93931628`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Mon 20 Apr 2020 07:29:15\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "20", ",", "7", ",", "29", ",", 
                    "15.033999919891357`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyerMaker\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 23046009482329666571, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 23046009482329666571, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 19, 23046009482329666571, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23046009482329666571 === $SessionID, 
   Out[19], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",ExpressionUUID->"48f16ea1-4687-4356-8650-59d94284959a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Market prices ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "6e52b520-682c-4178-8a31-c8839c0da8cc"]
}], "Chapter",ExpressionUUID->"0a33d0e3-0323-4983-8231-7af4d6bc6ad2"],

Cell["Get the current price of Bitcoin.", "Text",ExpressionUUID->"851ea476-ea07-4edb-878c-c57626c8c10d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinancePrice", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",ExpressionUUID->"24b606ad-2a3c-42fc-8a9f-9f70f04ad9c4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "7182.77`"}]}], 
  "\[RightAssociation]"}]], "Output",ExpressionUUID->"b42ca767-3df5-43b7-8ab9-\
e53c0baf2b4a"]
}, Open  ]],

Cell["\<\
More information about a cryptocurrency pair. The result has information \
about the 24h change, volume and last prices.\
\>", "Text",ExpressionUUID->"22a1a003-2215-4c63-8c32-ef270786eba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTicker", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",ExpressionUUI\
D->"b1ff0c1f-2faa-431c-81c8-38196664eb53"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"priceChange\"\>", "\[Rule]", "30.69`"}], ",", 
   RowBox[{"\<\"priceChangePercent\"\>", "\[Rule]", "0.429`"}], ",", 
   RowBox[{"\<\"weightedAvgPrice\"\>", "\[Rule]", "7141.60022869`"}], ",", 
   RowBox[{"\<\"prevClosePrice\"\>", "\[Rule]", "7152.18`"}], ",", 
   RowBox[{"\<\"lastPrice\"\>", "\[Rule]", "7181.86`"}], ",", 
   RowBox[{"\<\"lastQty\"\>", "\[Rule]", "0.035514`"}], ",", 
   RowBox[{"\<\"bidPrice\"\>", "\[Rule]", "7181.81`"}], ",", 
   RowBox[{"\<\"bidQty\"\>", "\[Rule]", "0.1`"}], ",", 
   RowBox[{"\<\"askPrice\"\>", "\[Rule]", "7181.94`"}], ",", 
   RowBox[{"\<\"askQty\"\>", "\[Rule]", "0.05`"}], ",", 
   RowBox[{"\<\"openPrice\"\>", "\[Rule]", "7151.17`"}], ",", 
   RowBox[{"\<\"highPrice\"\>", "\[Rule]", "7220.`"}], ",", 
   RowBox[{"\<\"lowPrice\"\>", "\[Rule]", "7055.6`"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "43939.121587`"}], ",", 
   RowBox[{"\<\"quoteVolume\"\>", "\[Rule]", "3.137956407743646`*^8"}], ",", 
   RowBox[{"\<\"openTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Sun 19 Apr 2020 07:30:03\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "19", ",", "7", ",", "30", ",", 
              "3.9790000915527344`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"closeTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Mon 20 Apr 2020 07:30:03\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "20", ",", "7", ",", "30", ",", 
              "3.9790000915527344`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"firstId\"\>", "\[Rule]", "296998818"}], ",", 
   RowBox[{"\<\"lastId\"\>", "\[Rule]", "297473905"}], ",", 
   RowBox[{"\<\"count\"\>", "\[Rule]", "475088"}]}], 
  "\[RightAssociation]"}]], "Output",ExpressionUUID->"1d8186de-5794-4760-a66d-\
f9e98840eefb"]
}, Open  ]],

Cell["And for all currency pairs.", "Text",ExpressionUUID->"90011771-aa6d-4a51-a03b-2dabfb2af9c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTicker", "[", "]"}]], "Code",ExpressionUUID->"2310e413-cc81-4a60-9de3-b41431513742"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"ETHBTC\"\>"}], ",", 
             RowBox[{"\<\"priceChange\"\>", "\[Rule]", "0.000141`"}], ",", 
             RowBox[{"\<\"priceChangePercent\"\>", "\[Rule]", "0.554`"}], ",", 
             RowBox[{"\<\"weightedAvgPrice\"\>", "\[Rule]", "0.02542068`"}], 
             ",", 
             RowBox[{"\<\"prevClosePrice\"\>", "\[Rule]", "0.025458`"}], ",", 
             RowBox[{"\<\"lastPrice\"\>", "\[Rule]", "0.025597`"}], ",", 
             RowBox[{"\<\"lastQty\"\>", "\[Rule]", "0.007`"}], ",", 
             RowBox[{"\<\"bidPrice\"\>", "\[Rule]", "0.025592`"}], ",", 
             TemplateBox[{"5"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"lowPrice\"\>", "\[Rule]", "0.024931`"}], ",", 
             RowBox[{"\<\"volume\"\>", "\[Rule]", "244102.682`"}], ",", 
             RowBox[{"\<\"quoteVolume\"\>", "\[Rule]", "6205.25547156`"}], 
             ",", 
             RowBox[{"\<\"openTime\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Sun 19 Apr 2020 07:30:15\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "19", ",", "7", ",", "30", ",", 
                    "15.067999839782715`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"closeTime\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Mon 20 Apr 2020 07:30:15\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "20", ",", "7", ",", "30", ",", 
                    "15.067999839782715`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"firstId\"\>", "\[Rule]", "172701044"}], ",", 
             RowBox[{"\<\"lastId\"\>", "\[Rule]", "172799100"}], ",", 
             RowBox[{"\<\"count\"\>", "\[Rule]", "98057"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"788"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 23046009482329666571, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 23046009482329666571, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 22, 23046009482329666571, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23046009482329666571 === $SessionID, 
   Out[22], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",ExpressionUUID->"bc567749-84a5-4d2d-830d-01ac233b9768"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Chart ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "41ee0dea-4b0c-45cb-a312-2786ac4dea5e"]
}], "Chapter",ExpressionUUID->"362235ba-25a3-477f-9582-7ff5b89cd0a2"],

Cell["Get historical data from Binance", "Text",ExpressionUUID->"e38b7723-1790-4a6a-bc87-ec50edcb7c7b"],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]BTCUSDT\[CloseCurlyDoubleQuote] - cryptocurrency \
pair", "Item",ExpressionUUID->"992f0dca-f1d2-4496-b20f-7e697dd4752e"],

Cell["\<\
\[OpenCurlyDoubleQuote]15m\[CloseCurlyDoubleQuote] - time interval of the one \
\[OpenCurlyDoubleQuote]candle\[CloseCurlyDoubleQuote]. Available intervals: \
1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 12h, 1d\
\>", "Item",ExpressionUUID->"842bfae4-d1a9-4d3a-a2de-ce36db47c142"],

Cell["\<\
\[OpenCurlyDoubleQuote]limit\[CloseCurlyDoubleQuote] \[Rule] 96 - number of \
candles. Max value is 1000, default - 500\
\>", "Item",ExpressionUUID->"8b749f3d-a648-4dbf-88be-0c14410af40f"]
}, Open  ]],

Cell["Interactive chart with different indicators", "Text",ExpressionUUID->"087a20fa-a7fe-4e97-a4ae-636a966fd567"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InteractiveTradingChart", "[", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ", "6"}], 
         "}"}]}], "}"}]}], "]"}], " ", "@", " ", 
    RowBox[{"BinanceKlines", "[", 
     RowBox[{"\"\<BTCUSDT\>\"", ",", " ", "\"\<15m\>\"", ",", " ", 
      RowBox[{"\"\<limit\>\"", " ", "->", " ", "192"}]}], "]"}]}], ",", " ", 
   "\n", "\t", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotTheme", " ", "->", " ", "\"\<Marketing\>\""}]}], "\n", 
  "]"}]], "Code",ExpressionUUID->"d6670f0f-137b-4a1f-90ce-c53d978b3165"],

Cell[BoxData[
 DynamicBox[Charting`iInteractiveTradingChart[InteractiveTradingChart, {{
     DateObject[{2020, 4, 18, 7, 45, 0.}, "Instant", "Gregorian", 0.], {
     7096.3, 7099.98, 7089.17, 7089.72, 172.05986}}, {
     DateObject[{2020, 4, 18, 8, 0, 0.}, "Instant", "Gregorian", 0.], {
     7089.78, 7107.96, 7085.81, 7104.8, 382.273031}}, {
     DateObject[{2020, 4, 18, 8, 15, 0.}, "Instant", "Gregorian", 0.], {
     7104.59, 7106.79, 7095.13, 7098.05, 213.625067}}, {
     DateObject[{2020, 4, 18, 8, 30, 0.}, "Instant", "Gregorian", 0.], {
     7097.39, 7100., 7085.6, 7088.18, 164.550575}}, {
     DateObject[{2020, 4, 18, 8, 45, 0.}, "Instant", "Gregorian", 0.], {
     7088.19, 7094.64, 7082.86, 7090., 229.948123}}, {
     DateObject[{2020, 4, 18, 9, 0, 0.}, "Instant", "Gregorian", 0.], {
     7090.01, 7098.53, 7087.04, 7095.32, 158.897621}}, {
     DateObject[{2020, 4, 18, 9, 15, 0.}, "Instant", "Gregorian", 0.], {
     7095.32, 7100., 7092.09, 7097.92, 197.347894}}, {
     DateObject[{2020, 4, 18, 9, 30, 0.}, "Instant", "Gregorian", 0.], {
     7097.93, 7102., 7093.09, 7097.82, 204.08395}}, {
     DateObject[{2020, 4, 18, 9, 45, 0.}, "Instant", "Gregorian", 0.], {
     7097.66, 7097.66, 7086.02, 7089.1, 202.06265}}, {
     DateObject[{2020, 4, 18, 10, 0, 0.}, "Instant", "Gregorian", 0.], {
     7089.1, 7093.87, 7085., 7086.27, 181.257128}}, {
     DateObject[{2020, 4, 18, 10, 15, 0.}, "Instant", "Gregorian", 0.], {
     7086.54, 7090.67, 7054.11, 7061.57, 712.010473}}, {
     DateObject[{2020, 4, 18, 10, 30, 0.}, "Instant", "Gregorian", 0.], {
     7061.07, 7080.5, 7057.9, 7080.08, 425.960446}}, {
     DateObject[{2020, 4, 18, 10, 45, 0.}, "Instant", "Gregorian", 0.], {
     7080.07, 7086.68, 7073.37, 7082.9, 238.215792}}, {
     DateObject[{2020, 4, 18, 11, 0, 0.}, "Instant", "Gregorian", 0.], {
     7082.67, 7084.49, 7075., 7075.7, 200.961427}}, {
     DateObject[{2020, 4, 18, 11, 15, 0.}, "Instant", "Gregorian", 0.], {
     7076.01, 7077.5, 7060.01, 7071.9, 232.81218}}, {
     DateObject[{2020, 4, 18, 11, 30, 0.}, "Instant", "Gregorian", 0.], {
     7071.43, 7082.63, 7067.18, 7078.54, 188.007559}}, {
     DateObject[{2020, 4, 18, 11, 45, 0.}, "Instant", "Gregorian", 0.], {
     7077.67, 7120.93, 7075.81, 7104.52, 630.141974}}, {
     DateObject[{2020, 4, 18, 12, 0, 0.}, "Instant", "Gregorian", 0.], {
     7104.52, 7110.32, 7078.74, 7089.03, 562.270829}}, {
     DateObject[{2020, 4, 18, 12, 15, 0.}, "Instant", "Gregorian", 0.], {
     7089.05, 7108.62, 7086.12, 7094.94, 402.948877}}, {
     DateObject[{2020, 4, 18, 12, 30, 0.}, "Instant", "Gregorian", 0.], {
     7094.95, 7100.47, 7086.94, 7098.43, 334.145339}}, {
     DateObject[{2020, 4, 18, 12, 45, 0.}, "Instant", "Gregorian", 0.], {
     7098.79, 7160., 7097.58, 7133.34, 2028.001967}}, {
     DateObject[{2020, 4, 18, 13, 0, 0.}, "Instant", "Gregorian", 0.], {
     7133.36, 7189.81, 7120.53, 7165.84, 3019.19445}}, {
     DateObject[{2020, 4, 18, 13, 15, 0.}, "Instant", "Gregorian", 0.], {
     7165.83, 7178.57, 7142.73, 7163.28, 1272.639735}}, {
     DateObject[{2020, 4, 18, 13, 30, 0.}, "Instant", "Gregorian", 0.], {
     7162.76, 7179.91, 7162.2, 7168.51, 816.905517}}, {
     DateObject[{2020, 4, 18, 13, 45, 0.}, "Instant", "Gregorian", 0.], {
     7168.49, 7260., 7168.49, 7237.14, 4303.534841}}, {
     DateObject[{2020, 4, 18, 14, 0, 0.}, "Instant", "Gregorian", 0.], {
     7237.13, 7268.9, 7209.5, 7227.84, 1672.416137}}, {
     DateObject[{2020, 4, 18, 14, 15, 0.}, "Instant", "Gregorian", 0.], {
     7228.72, 7230.07, 7210.09, 7227.08, 750.476357}}, {
     DateObject[{2020, 4, 18, 14, 30, 0.}, "Instant", "Gregorian", 0.], {
     7227.08, 7244.94, 7221.53, 7239.49, 810.272307}}, {
     DateObject[{2020, 4, 18, 14, 45, 0.}, "Instant", "Gregorian", 0.], {
     7239.08, 7249.74, 7218., 7228.2, 770.449968}}, {
     DateObject[{2020, 4, 18, 15, 0, 0.}, "Instant", "Gregorian", 0.], {
     7228.82, 7238., 7210.15, 7222.19, 669.747063}}, {
     DateObject[{2020, 4, 18, 15, 15, 0.}, "Instant", "Gregorian", 0.], {
     7222.2, 7235.48, 7217.61, 7232.05, 524.742641}}, {
     DateObject[{2020, 4, 18, 15, 30, 0.}, "Instant", "Gregorian", 0.], {
     7232.73, 7236.9, 7217., 7228.44, 541.894545}}, {
     DateObject[{2020, 4, 18, 15, 45, 0.}, "Instant", "Gregorian", 0.], {
     7228.16, 7246.49, 7226.61, 7243.37, 786.65599}}, {
     DateObject[{2020, 4, 18, 16, 0, 0.}, "Instant", "Gregorian", 0.], {
     7243.65, 7255., 7169.2, 7205.31, 2215.434372}}, {
     DateObject[{2020, 4, 18, 16, 15, 0.}, "Instant", "Gregorian", 0.], {
     7205.3, 7211.72, 7186., 7196.81, 840.701479}}, {
     DateObject[{2020, 4, 18, 16, 30, 0.}, "Instant", "Gregorian", 0.], {
     7196.82, 7199., 7155.01, 7184.51, 1094.067809}}, {
     DateObject[{2020, 4, 18, 16, 45, 0.}, "Instant", "Gregorian", 0.], {
     7184.53, 7198.16, 7179., 7194.04, 533.077617}}, {
     DateObject[{2020, 4, 18, 17, 0, 0.}, "Instant", "Gregorian", 0.], {
     7194.28, 7195.9, 7180., 7183.33, 457.875268}}, {
     DateObject[{2020, 4, 18, 17, 15, 0.}, "Instant", "Gregorian", 0.], {
     7183., 7208., 7182.57, 7207.99, 477.916274}}, {
     DateObject[{2020, 4, 18, 17, 30, 0.}, "Instant", "Gregorian", 0.], {
     7208., 7220.38, 7196., 7199.87, 411.523318}}, {
     DateObject[{2020, 4, 18, 17, 45, 0.}, "Instant", "Gregorian", 0.], {
     7199.85, 7200.08, 7183.89, 7189.69, 350.466024}}, {
     DateObject[{2020, 4, 18, 18, 0, 0.}, "Instant", "Gregorian", 0.], {
     7190.68, 7193.61, 7180., 7185.28, 346.676702}}, {
     DateObject[{2020, 4, 18, 18, 15, 0.}, "Instant", "Gregorian", 0.], {
     7185.53, 7194.32, 7175., 7188.69, 327.993055}}, {
     DateObject[{2020, 4, 18, 18, 30, 0.}, "Instant", "Gregorian", 0.], {
     7188.56, 7199.65, 7187.27, 7197.06, 165.520672}}, {
     DateObject[{2020, 4, 18, 18, 45, 0.}, "Instant", "Gregorian", 0.], {
     7197.07, 7198.05, 7187.72, 7191.77, 148.894637}}, {
     DateObject[{2020, 4, 18, 19, 0, 0.}, "Instant", "Gregorian", 0.], {
     7191.77, 7210., 7186.27, 7200.16, 260.577026}}, {
     DateObject[{2020, 4, 18, 19, 15, 0.}, "Instant", "Gregorian", 0.], {
     7199.8, 7224.79, 7198.74, 7211., 787.392969}}, {
     DateObject[{2020, 4, 18, 19, 30, 0.}, "Instant", "Gregorian", 0.], {
     7210.81, 7219.81, 7205., 7209.72, 239.156381}}, {
     DateObject[{2020, 4, 18, 19, 45, 0.}, "Instant", "Gregorian", 0.], {
     7209.42, 7216.68, 7208., 7211.2, 241.193399}}, {
     DateObject[{2020, 4, 18, 20, 0, 0.}, "Instant", "Gregorian", 0.], {
     7211.2, 7218.55, 7199., 7217.75, 385.366516}}, {
     DateObject[{2020, 4, 18, 20, 15, 0.}, "Instant", "Gregorian", 0.], {
     7217.71, 7230., 7212.21, 7218.04, 473.981527}}, {
     DateObject[{2020, 4, 18, 20, 30, 0.}, "Instant", "Gregorian", 0.], {
     7218.07, 7230., 7216.56, 7216.92, 309.035021}}, {
     DateObject[{2020, 4, 18, 20, 45, 0.}, "Instant", "Gregorian", 0.], {
     7217.65, 7227.18, 7215.95, 7220.22, 188.417146}}, {
     DateObject[{2020, 4, 18, 21, 0, 0.}, "Instant", "Gregorian", 0.], {
     7220.1, 7230., 7217., 7229.43, 184.811587}}, {
     DateObject[{2020, 4, 18, 21, 15, 0.}, "Instant", "Gregorian", 0.], {
     7229.87, 7235.44, 7216.19, 7224.29, 332.599179}}, {
     DateObject[{2020, 4, 18, 21, 30, 0.}, "Instant", "Gregorian", 0.], {
     7224.09, 7226.9, 7204.45, 7220.24, 320.140255}}, {
     DateObject[{2020, 4, 18, 21, 45, 0.}, "Instant", "Gregorian", 0.], {
     7220.52, 7222.87, 7207.44, 7215.6, 381.152457}}, {
     DateObject[{2020, 4, 18, 22, 0, 0.}, "Instant", "Gregorian", 0.], {
     7215.61, 7231.4, 7208.86, 7226.73, 252.495932}}, {
     DateObject[{2020, 4, 18, 22, 15, 0.}, "Instant", "Gregorian", 0.], {
     7227.04, 7235.63, 7221.08, 7225.24, 221.832365}}, {
     DateObject[{2020, 4, 18, 22, 30, 0.}, "Instant", "Gregorian", 0.], {
     7225.28, 7255., 7223.68, 7252.08, 1035.379131}}, {
     DateObject[{2020, 4, 18, 22, 45, 0.}, "Instant", "Gregorian", 0.], {
     7251.88, 7293.08, 7242.03, 7260.99, 1481.058705}}, {
     DateObject[{2020, 4, 18, 23, 0, 0.}, "Instant", "Gregorian", 0.], {7261.,
      7262., 7240., 7247.43, 602.27523}}, {
     DateObject[{2020, 4, 18, 23, 15, 0.}, "Instant", "Gregorian", 0.], {
     7247.43, 7277.69, 7246.09, 7262.86, 350.29389}}, {
     DateObject[{2020, 4, 18, 23, 30, 0.}, "Instant", "Gregorian", 0.], {
     7263., 7264.57, 7225.01, 7246.31, 730.613927}}, {
     DateObject[{2020, 4, 18, 23, 45, 0.}, "Instant", "Gregorian", 0.], {
     7246.54, 7251.53, 7231.03, 7248.6, 296.017627}}, {
     DateObject[{2020, 4, 19, 0, 0, 0.}, "Instant", "Gregorian", 0.], {7248.6,
      7266.15, 7214.1, 7225.19, 667.198324}}, {
     DateObject[{2020, 4, 19, 0, 15, 0.}, "Instant", "Gregorian", 0.], {
     7226.05, 7226.24, 7180., 7210.4, 1314.055923}}, {
     DateObject[{2020, 4, 19, 0, 30, 0.}, "Instant", "Gregorian", 0.], {
     7210.26, 7222., 7205.39, 7215.32, 321.06888}}, {
     DateObject[{2020, 4, 19, 0, 45, 0.}, "Instant", "Gregorian", 0.], {
     7215.51, 7231.63, 7211.5, 7222., 260.04341}}, {
     DateObject[{2020, 4, 19, 1, 0, 0.}, "Instant", "Gregorian", 0.], {7222., 
     7227.96, 7208.02, 7222.01, 325.568851}}, {
     DateObject[{2020, 4, 19, 1, 15, 0.}, "Instant", "Gregorian", 0.], {
     7222.12, 7222.22, 7201., 7204.22, 299.005743}}, {
     DateObject[{2020, 4, 19, 1, 30, 0.}, "Instant", "Gregorian", 0.], {
     7203.36, 7218.75, 7193.66, 7217.7, 330.20397}}, {
     DateObject[{2020, 4, 19, 1, 45, 0.}, "Instant", "Gregorian", 0.], {
     7217.66, 7235.19, 7217.2, 7226.43, 452.85668}}, {
     DateObject[{2020, 4, 19, 2, 0, 0.}, "Instant", "Gregorian", 0.], {
     7226.43, 7227.86, 7212.79, 7216.35, 300.239123}}, {
     DateObject[{2020, 4, 19, 2, 15, 0.}, "Instant", "Gregorian", 0.], {
     7216.27, 7232.04, 7215., 7224.12, 196.642713}}, {
     DateObject[{2020, 4, 19, 2, 30, 0.}, "Instant", "Gregorian", 0.], {
     7223.52, 7245.12, 7220.63, 7240.8, 285.685149}}, {
     DateObject[{2020, 4, 19, 2, 45, 0.}, "Instant", "Gregorian", 0.], {
     7241.07, 7245.9, 7228.23, 7232.95, 339.44368}}, {
     DateObject[{2020, 4, 19, 3, 0, 0.}, "Instant", "Gregorian", 0.], {
     7232.94, 7233.99, 7216.16, 7226.25, 433.678974}}, {
     DateObject[{2020, 4, 19, 3, 15, 0.}, "Instant", "Gregorian", 0.], {
     7227.19, 7237.49, 7219.12, 7228.91, 240.501395}}, {
     DateObject[{2020, 4, 19, 3, 30, 0.}, "Instant", "Gregorian", 0.], {
     7228.92, 7237.6, 7222.22, 7226.18, 258.275349}}, {
     DateObject[{2020, 4, 19, 3, 45, 0.}, "Instant", "Gregorian", 0.], {
     7226.18, 7236.06, 7225., 7229.96, 129.046896}}, {
     DateObject[{2020, 4, 19, 4, 0, 0.}, "Instant", "Gregorian", 0.], {
     7229.27, 7241.45, 7222.22, 7238.15, 175.944831}}, {
     DateObject[{2020, 4, 19, 4, 15, 0.}, "Instant", "Gregorian", 0.], {
     7238.6, 7241.66, 7228.99, 7236.21, 226.321527}}, {
     DateObject[{2020, 4, 19, 4, 30, 0.}, "Instant", "Gregorian", 0.], {
     7236.55, 7243.79, 7226.38, 7228.18, 235.349984}}, {
     DateObject[{2020, 4, 19, 4, 45, 0.}, "Instant", "Gregorian", 0.], {
     7228.41, 7235.19, 7220.07, 7222.21, 217.494542}}, {
     DateObject[{2020, 4, 19, 5, 0, 0.}, "Instant", "Gregorian", 0.], {
     7222.22, 7225., 7192.88, 7200.4, 474.995662}}, {
     DateObject[{2020, 4, 19, 5, 15, 0.}, "Instant", "Gregorian", 0.], {
     7202.15, 7224.36, 7192.68, 7224.36, 380.824981}}, {
     DateObject[{2020, 4, 19, 5, 30, 0.}, "Instant", "Gregorian", 0.], {
     7224.35, 7225.99, 7211., 7211.38, 279.334287}}, {
     DateObject[{2020, 4, 19, 5, 45, 0.}, "Instant", "Gregorian", 0.], {
     7211.34, 7211.68, 7100., 7121.36, 3286.407074}}, {
     DateObject[{2020, 4, 19, 6, 0, 0.}, "Instant", "Gregorian", 0.], {
     7122.79, 7150., 7101.25, 7139.92, 1252.979864}}, {
     DateObject[{2020, 4, 19, 6, 15, 0.}, "Instant", "Gregorian", 0.], {
     7139.28, 7175.64, 7130., 7155.45, 941.551971}}, {
     DateObject[{2020, 4, 19, 6, 30, 0.}, "Instant", "Gregorian", 0.], {
     7155.76, 7167.63, 7148.43, 7152.75, 347.81012}}, {
     DateObject[{2020, 4, 19, 6, 45, 0.}, "Instant", "Gregorian", 0.], {
     7152.78, 7159.38, 7141., 7154.64, 379.279133}}, {
     DateObject[{2020, 4, 19, 7, 0, 0.}, "Instant", "Gregorian", 0.], {
     7154.64, 7158.64, 7143.18, 7155.61, 232.918347}}, {
     DateObject[{2020, 4, 19, 7, 15, 0.}, "Instant", "Gregorian", 0.], {
     7155.61, 7163.19, 7150.17, 7153.61, 253.214399}}, {
     DateObject[{2020, 4, 19, 7, 30, 0.}, "Instant", "Gregorian", 0.], {
     7153.59, 7153.59, 7122., 7139.92, 502.096134}}, {
     DateObject[{2020, 4, 19, 7, 45, 0.}, "Instant", "Gregorian", 0.], {
     7139.25, 7152.98, 7137.91, 7146.77, 263.383225}}, {
     DateObject[{2020, 4, 19, 8, 0, 0.}, "Instant", "Gregorian", 0.], {
     7145.49, 7146.71, 7123.18, 7125.94, 484.510193}}, {
     DateObject[{2020, 4, 19, 8, 15, 0.}, "Instant", "Gregorian", 0.], {
     7125.99, 7150., 7123.42, 7148.38, 344.940211}}, {
     DateObject[{2020, 4, 19, 8, 30, 0.}, "Instant", "Gregorian", 0.], {
     7148.4, 7153., 7136., 7152., 252.209906}}, {
     DateObject[{2020, 4, 19, 8, 45, 0.}, "Instant", "Gregorian", 0.], {
     7151.84, 7151.87, 7140.12, 7146.24, 197.167666}}, {
     DateObject[{2020, 4, 19, 9, 0, 0.}, "Instant", "Gregorian", 0.], {
     7146.24, 7146.4, 7135., 7135.2, 288.914874}}, {
     DateObject[{2020, 4, 19, 9, 15, 0.}, "Instant", "Gregorian", 0.], {
     7135.43, 7150.44, 7133., 7147.27, 442.468741}}, {
     DateObject[{2020, 4, 19, 9, 30, 0.}, "Instant", "Gregorian", 0.], {
     7147.23, 7153.5, 7137.99, 7150., 215.550474}}, {
     DateObject[{2020, 4, 19, 9, 45, 0.}, "Instant", "Gregorian", 0.], {7150.,
      7186., 7144.99, 7170.55, 526.655245}}, {
     DateObject[{2020, 4, 19, 10, 0, 0.}, "Instant", "Gregorian", 0.], {
     7170.51, 7181.8, 7159.29, 7166., 436.356973}}, {
     DateObject[{2020, 4, 19, 10, 15, 0.}, "Instant", "Gregorian", 0.], {
     7166., 7176., 7161.08, 7169.61, 216.935021}}, {
     DateObject[{2020, 4, 19, 10, 30, 0.}, "Instant", "Gregorian", 0.], {
     7169.61, 7170.28, 7153., 7158.23, 366.818709}}, {
     DateObject[{2020, 4, 19, 10, 45, 0.}, "Instant", "Gregorian", 0.], {
     7157.71, 7172.98, 7157.38, 7165.96, 354.243853}}, {
     DateObject[{2020, 4, 19, 11, 0, 0.}, "Instant", "Gregorian", 0.], {
     7166.14, 7170.84, 7145.22, 7150.8, 292.464949}}, {
     DateObject[{2020, 4, 19, 11, 15, 0.}, "Instant", "Gregorian", 0.], {
     7150.53, 7158.01, 7137., 7140.36, 426.713434}}, {
     DateObject[{2020, 4, 19, 11, 30, 0.}, "Instant", "Gregorian", 0.], {
     7140.88, 7158.01, 7138.75, 7155.2, 340.561193}}, {
     DateObject[{2020, 4, 19, 11, 45, 0.}, "Instant", "Gregorian", 0.], {
     7155.63, 7163.65, 7145.22, 7163.19, 255.623697}}, {
     DateObject[{2020, 4, 19, 12, 0, 0.}, "Instant", "Gregorian", 0.], {
     7162.66, 7170., 7150.71, 7161.9, 184.88275}}, {
     DateObject[{2020, 4, 19, 12, 15, 0.}, "Instant", "Gregorian", 0.], {
     7161.9, 7169., 7145.22, 7152.91, 225.707495}}, {
     DateObject[{2020, 4, 19, 12, 30, 0.}, "Instant", "Gregorian", 0.], {
     7152.81, 7157.96, 7145.67, 7151., 241.855526}}, {
     DateObject[{2020, 4, 19, 12, 45, 0.}, "Instant", "Gregorian", 0.], {
     7150.72, 7164.61, 7148.62, 7155.33, 253.759879}}, {
     DateObject[{2020, 4, 19, 13, 0, 0.}, "Instant", "Gregorian", 0.], {
     7155.83, 7157.02, 7126., 7140.19, 533.706781}}, {
     DateObject[{2020, 4, 19, 13, 15, 0.}, "Instant", "Gregorian", 0.], {
     7140.05, 7149.99, 7138.66, 7140.02, 205.101299}}, {
     DateObject[{2020, 4, 19, 13, 30, 0.}, "Instant", "Gregorian", 0.], {
     7140.01, 7141.78, 7080., 7098.93, 1627.186384}}, {
     DateObject[{2020, 4, 19, 13, 45, 0.}, "Instant", "Gregorian", 0.], {
     7099.72, 7122., 7080., 7103.2, 1282.089435}}, {
     DateObject[{2020, 4, 19, 14, 0, 0.}, "Instant", "Gregorian", 0.], {
     7103.46, 7103.77, 7055.6, 7075.08, 2059.944882}}, {
     DateObject[{2020, 4, 19, 14, 15, 0.}, "Instant", "Gregorian", 0.], {
     7075.09, 7088., 7070.03, 7086.26, 672.61978}}, {
     DateObject[{2020, 4, 19, 14, 30, 0.}, "Instant", "Gregorian", 0.], {
     7086.26, 7097.74, 7080., 7087.6, 719.977206}}, {
     DateObject[{2020, 4, 19, 14, 45, 0.}, "Instant", "Gregorian", 0.], {
     7087.42, 7113.24, 7086.45, 7106.99, 1177.831554}}, {
     DateObject[{2020, 4, 19, 15, 0, 0.}, "Instant", "Gregorian", 0.], {
     7107.03, 7120., 7098.25, 7116.12, 478.995884}}, {
     DateObject[{2020, 4, 19, 15, 15, 0.}, "Instant", "Gregorian", 0.], {
     7116.12, 7116.34, 7100., 7101.63, 268.829272}}, {
     DateObject[{2020, 4, 19, 15, 30, 0.}, "Instant", "Gregorian", 0.], {
     7101.48, 7111.77, 7089.77, 7111.18, 593.312791}}, {
     DateObject[{2020, 4, 19, 15, 45, 0.}, "Instant", "Gregorian", 0.], {
     7111.18, 7111.18, 7095.55, 7097.33, 385.411899}}, {
     DateObject[{2020, 4, 19, 16, 0, 0.}, "Instant", "Gregorian", 0.], {
     7097.34, 7107.29, 7086., 7102.58, 395.055603}}, {
     DateObject[{2020, 4, 19, 16, 15, 0.}, "Instant", "Gregorian", 0.], {
     7102.7, 7129.98, 7101.18, 7125.49, 593.597963}}, {
     DateObject[{2020, 4, 19, 16, 30, 0.}, "Instant", "Gregorian", 0.], {
     7125.49, 7134.05, 7116.07, 7119.99, 571.036392}}, {
     DateObject[{2020, 4, 19, 16, 45, 0.}, "Instant", "Gregorian", 0.], {
     7119.86, 7130.17, 7115.38, 7122.59, 354.864061}}, {
     DateObject[{2020, 4, 19, 17, 0, 0.}, "Instant", "Gregorian", 0.], {
     7122.49, 7147., 7116.29, 7146.99, 764.283447}}, {
     DateObject[{2020, 4, 19, 17, 15, 0.}, "Instant", "Gregorian", 0.], {
     7146.99, 7165.08, 7137.13, 7156.4, 675.03123}}, {
     DateObject[{2020, 4, 19, 17, 30, 0.}, "Instant", "Gregorian", 0.], {
     7155.75, 7167.93, 7143.76, 7155.67, 599.545208}}, {
     DateObject[{2020, 4, 19, 17, 45, 0.}, "Instant", "Gregorian", 0.], {
     7155.76, 7159.97, 7145., 7157.14, 346.239624}}, {
     DateObject[{2020, 4, 19, 18, 0, 0.}, "Instant", "Gregorian", 0.], {
     7157.15, 7170.58, 7142.53, 7142.55, 492.985853}}, {
     DateObject[{2020, 4, 19, 18, 15, 0.}, "Instant", "Gregorian", 0.], {
     7142.67, 7155.98, 7135., 7148.32, 387.502994}}, {
     DateObject[{2020, 4, 19, 18, 30, 0.}, "Instant", "Gregorian", 0.], {
     7148.31, 7154.08, 7140., 7152., 147.560803}}, {
     DateObject[{2020, 4, 19, 18, 45, 0.}, "Instant", "Gregorian", 0.], {
     7152.08, 7153.87, 7140., 7147.12, 235.424878}}, {
     DateObject[{2020, 4, 19, 19, 0, 0.}, "Instant", "Gregorian", 0.], {
     7147.13, 7152.03, 7122.94, 7131.2, 352.146699}}, {
     DateObject[{2020, 4, 19, 19, 15, 0.}, "Instant", "Gregorian", 0.], {
     7130.79, 7137.9, 7123.24, 7128.38, 233.813627}}, {
     DateObject[{2020, 4, 19, 19, 30, 0.}, "Instant", "Gregorian", 0.], {
     7128.71, 7136.25, 7115.23, 7135.02, 280.961383}}, {
     DateObject[{2020, 4, 19, 19, 45, 0.}, "Instant", "Gregorian", 0.], {
     7135.02, 7140.05, 7130.54, 7134.28, 156.632215}}, {
     DateObject[{2020, 4, 19, 20, 0, 0.}, "Instant", "Gregorian", 0.], {
     7134.25, 7135.74, 7120., 7127.54, 273.775015}}, {
     DateObject[{2020, 4, 19, 20, 15, 0.}, "Instant", "Gregorian", 0.], {
     7127.54, 7131.66, 7117., 7127.3, 198.033734}}, {
     DateObject[{2020, 4, 19, 20, 30, 0.}, "Instant", "Gregorian", 0.], {
     7127.3, 7145.61, 7122.38, 7135.33, 198.653669}}, {
     DateObject[{2020, 4, 19, 20, 45, 0.}, "Instant", "Gregorian", 0.], {
     7135.58, 7150., 7132.09, 7136.44, 189.465519}}, {
     DateObject[{2020, 4, 19, 21, 0, 0.}, "Instant", "Gregorian", 0.], {
     7137.61, 7167., 7136.57, 7162.04, 467.627297}}, {
     DateObject[{2020, 4, 19, 21, 15, 0.}, "Instant", "Gregorian", 0.], {
     7163.07, 7167.17, 7150., 7158.67, 312.117876}}, {
     DateObject[{2020, 4, 19, 21, 30, 0.}, "Instant", "Gregorian", 0.], {
     7158.66, 7164., 7143., 7153.11, 278.620726}}, {
     DateObject[{2020, 4, 19, 21, 45, 0.}, "Instant", "Gregorian", 0.], {
     7152.79, 7210., 7144., 7183.04, 674.057717}}, {
     DateObject[{2020, 4, 19, 22, 0, 0.}, "Instant", "Gregorian", 0.], {
     7184.71, 7193.08, 7157.23, 7165., 618.023409}}, {
     DateObject[{2020, 4, 19, 22, 15, 0.}, "Instant", "Gregorian", 0.], {
     7165., 7191.48, 7154.98, 7173.72, 637.971601}}, {
     DateObject[{2020, 4, 19, 22, 30, 0.}, "Instant", "Gregorian", 0.], {
     7173.99, 7188.53, 7167.34, 7172.67, 390.520091}}, {
     DateObject[{2020, 4, 19, 22, 45, 0.}, "Instant", "Gregorian", 0.], {
     7172.67, 7188.53, 7169., 7175.52, 282.294987}}, {
     DateObject[{2020, 4, 19, 23, 0, 0.}, "Instant", "Gregorian", 0.], {
     7175.05, 7187.9, 7168.02, 7173.29, 421.508992}}, {
     DateObject[{2020, 4, 19, 23, 15, 0.}, "Instant", "Gregorian", 0.], {
     7173.29, 7179.94, 7160.03, 7165.09, 329.867013}}, {
     DateObject[{2020, 4, 19, 23, 30, 0.}, "Instant", "Gregorian", 0.], {
     7165.21, 7173.17, 7104.28, 7126.75, 1149.829524}}, {
     DateObject[{2020, 4, 19, 23, 45, 0.}, "Instant", "Gregorian", 0.], {
     7126.04, 7137.99, 7106.6, 7120.74, 699.045683}}, {
     DateObject[{2020, 4, 20, 0, 0, 0.}, "Instant", "Gregorian", 0.], {7121.4,
      7133.33, 7082., 7128.43, 1234.968201}}, {
     DateObject[{2020, 4, 20, 0, 15, 0.}, "Instant", "Gregorian", 0.], {
     7127.74, 7150., 7127.28, 7135.76, 420.825653}}, {
     DateObject[{2020, 4, 20, 0, 30, 0.}, "Instant", "Gregorian", 0.], {
     7135.63, 7156.32, 7131.55, 7147.45, 456.886807}}, {
     DateObject[{2020, 4, 20, 0, 45, 0.}, "Instant", "Gregorian", 0.], {
     7147.49, 7172.32, 7145.14, 7161.16, 528.654041}}, {
     DateObject[{2020, 4, 20, 1, 0, 0.}, "Instant", "Gregorian", 0.], {
     7161.16, 7166.44, 7148., 7152.2, 453.527851}}, {
     DateObject[{2020, 4, 20, 1, 15, 0.}, "Instant", "Gregorian", 0.], {
     7152.47, 7156.57, 7132.76, 7135., 329.446828}}, {
     DateObject[{2020, 4, 20, 1, 30, 0.}, "Instant", "Gregorian", 0.], {7135.,
      7153.19, 7130.9, 7150.67, 312.742273}}, {
     DateObject[{2020, 4, 20, 1, 45, 0.}, "Instant", "Gregorian", 0.], {
     7150.06, 7162., 7149.41, 7155.63, 258.170967}}, {
     DateObject[{2020, 4, 20, 2, 0, 0.}, "Instant", "Gregorian", 0.], {
     7155.76, 7164., 7145.78, 7147.4, 348.953404}}, {
     DateObject[{2020, 4, 20, 2, 15, 0.}, "Instant", "Gregorian", 0.], {
     7147.62, 7156.01, 7146.65, 7154.49, 186.224794}}, {
     DateObject[{2020, 4, 20, 2, 30, 0.}, "Instant", "Gregorian", 0.], {7155.,
      7164.79, 7154.12, 7163.43, 311.100077}}, {
     DateObject[{2020, 4, 20, 2, 45, 0.}, "Instant", "Gregorian", 0.], {
     7163.72, 7187., 7163.1, 7173.45, 510.809324}}, {
     DateObject[{2020, 4, 20, 3, 0, 0.}, "Instant", "Gregorian", 0.], {7173.9,
      7184.83, 7161.55, 7165.97, 523.038092}}, {
     DateObject[{2020, 4, 20, 3, 15, 0.}, "Instant", "Gregorian", 0.], {
     7166.12, 7174.93, 7160.72, 7171.49, 354.986201}}, {
     DateObject[{2020, 4, 20, 3, 30, 0.}, "Instant", "Gregorian", 0.], {
     7171.49, 7177.16, 7155., 7164.99, 397.712095}}, {
     DateObject[{2020, 4, 20, 3, 45, 0.}, "Instant", "Gregorian", 0.], {
     7164.98, 7167.4, 7160., 7161.03, 230.442753}}, {
     DateObject[{2020, 4, 20, 4, 0, 0.}, "Instant", "Gregorian", 0.], {
     7161.55, 7220., 7161.35, 7195.81, 1285.68328}}, {
     DateObject[{2020, 4, 20, 4, 15, 0.}, "Instant", "Gregorian", 0.], {
     7195.3, 7202.99, 7182.18, 7197.03, 444.084886}}, {
     DateObject[{2020, 4, 20, 4, 30, 0.}, "Instant", "Gregorian", 0.], {
     7197.1, 7205.06, 7187.5, 7205.05, 367.214643}}, {
     DateObject[{2020, 4, 20, 4, 45, 0.}, "Instant", "Gregorian", 0.], {
     7205.05, 7208.93, 7163.28, 7173.57, 500.766058}}, {
     DateObject[{2020, 4, 20, 5, 0, 0.}, "Instant", "Gregorian", 0.], {
     7173.74, 7184.85, 7159.74, 7170.04, 445.337331}}, {
     DateObject[{2020, 4, 20, 5, 15, 0.}, "Instant", "Gregorian", 0.], {7170.,
      7174.93, 7154.49, 7169.29, 438.703187}}, {
     DateObject[{2020, 4, 20, 5, 30, 0.}, "Instant", "Gregorian", 0.], {
     7169.38, 7180., 7168., 7174.18, 298.421182}}, {
     DateObject[{2020, 4, 20, 5, 45, 0.}, "Instant", "Gregorian", 0.], {
     7174.19, 7185.02, 7170., 7173.29, 267.976386}}, {
     DateObject[{2020, 4, 20, 6, 0, 0.}, "Instant", "Gregorian", 0.], {
     7173.22, 7180.88, 7160., 7160.96, 330.667052}}, {
     DateObject[{2020, 4, 20, 6, 15, 0.}, "Instant", "Gregorian", 0.], {
     7160.34, 7171.16, 7154.43, 7157.39, 353.991118}}, {
     DateObject[{2020, 4, 20, 6, 30, 0.}, "Instant", "Gregorian", 0.], {
     7157.39, 7170., 7154.01, 7164.22, 299.94008}}, {
     DateObject[{2020, 4, 20, 6, 45, 0.}, "Instant", "Gregorian", 0.], {
     7164.22, 7175.8, 7159.19, 7167.97, 338.934043}}, {
     DateObject[{2020, 4, 20, 7, 0, 0.}, "Instant", "Gregorian", 0.], {
     7167.95, 7175., 7156.26, 7171.11, 521.788961}}, {
     DateObject[{2020, 4, 20, 7, 15, 0.}, "Instant", "Gregorian", 0.], {
     7170.29, 7186., 7169.76, 7181.39, 360.681495}}, {
     DateObject[{2020, 4, 20, 7, 30, 0.}, "Instant", "Gregorian", 0.], {
     7181.94, 7198., 7180.77, 7183.69, 114.289729}}}, Automatic, Automatic, 
   ImageSize -> Large, PlotTheme -> "Marketing"],
  ImageSizeCache->{533., {267., 273.}},
  SingleEvaluation->True]], "Output",ExpressionUUID->"0ee45fe6-caaf-4a2b-a75c-\
fdee69f00dc1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "API Keys ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "ae7f8af7-6f78-4c06-b754-3c402a3bf191"]
}], "Chapter",ExpressionUUID->"7692efec-76f0-4042-95e2-5561abdbf672"],

Cell["\<\
If you want to use your account and trade API endpoint, you must create your \
own API Key and API sercret key.\
\>", "Text",ExpressionUUID->"98657a06-20f4-4d3c-8114-d2cddc337ab9"],

Cell["Use following way to do this:", "Text",ExpressionUUID->"2c37a0f0-976b-43c5-8567-65f1c67ac5ef"],

Cell[CellGroupData[{

Cell[TextData[{
 "Go and login to ",
 ButtonBox["binance.com",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://biannce.com"], None},
  ButtonNote->"https://biannce.com"],
 " or ",
 ButtonBox["binance.us",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://binance.us"], None},
  ButtonNote->"https://binance.us"],
 "."
}], "Item",ExpressionUUID->"bc2f921f-5206-444a-91a7-be3b732ffd6d"],

Cell["\<\
Click to the menu item \[OpenCurlyDoubleQuote]API Managment\
\[CloseCurlyDoubleQuote] in your account actions menu:\
\>", "Item",ExpressionUUID->"0b35eca8-122a-434f-8501-0d19c88cd951"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztvXdUVMkWt32/9/3nW+vOOIo5oZgFsyIqKgaiIEkyIllAJIsgAiqSowgI
ItGEKKKCCbMiSUHFrBhQQUQZZ8xhwn1/cGZ6ehrEppVqw2Y9i2nOqVOnuuvp
vXd1z7KkrFx0F/6f//znPx7/P37pWnrNdHe3XDavI/7Qd/ZwsHO2tVFzXmJr
Z+s+yer/4uDi/+8//6nAfxsfS3TrQxAEQRCEMEhKDSGI9qNHHynSjGhvuvbo
898OncQ+DOLbhjQjGECaEQwgzQgGkGYEA0gzggGkGcEA0oxgAGlGMIA0IxhA
mhEMIM0IBpBmBANa10xuyvT4hKTa2ofHT5wyNDbjPzV56oyk9SlPnjwpKi4x
NjXnDs5WnrMjZ9fPP/+8eUvWNAVF/va6+kYnTp56/PhJwOpggbu0cop3ryVL
l6WlZyYmbXBwdJabPJ3lS+Tg6FJ16/bd6ntLPJfNVlLL2ra9vv5x7q49KnM0
xT59Xwuta4b53ZCS/uuvv5aVnTU1s+Q/xRn19u3bq9eu2zk4jZ0wabL8DIVZ
ymhfV/cIms1SVBszTk5m1PgJcvIQQ1FFHVPz6NEjuDRwiMxHT3F30dLV37f/
4IsXL//888//Nf3gQX19fUpqOu7F5iXy9PLBW+Dp06cYHjfUly9f7j9wcI6G
ttin72tBZM3gg5HJgnVJyct9V0ybobTcf2Vtbe2NmzcvXb4Mzc6dO3/p0uXq
e/fWJa5HD3j7X7ly9crVazW1tWfOlldV3YKcoWGRHzrl5OKOWyywsKk4dx7z
e+BgAe4+aOiI0ePkXN09S8rOPHv27GDBYS0d/eZjtrZ1uFB58dGj+tS0DPlp
sz79JYJa4RHRUTGx8Io0E402aYZZdnFbsjUrG/nLfpHTYie3TZu3hkVEwbeg
4LBbt++8e//+f3//vHnz9sbNqsyNm7ds3VZTU/vbb7/xTr1+/fpCZSUmLik5
pcVTi53dlNXmYkJxNjYuYZzsZP5RKcxU2rhpy4MHNXHxiWPGy+HIJHkFX/9V
R44eO3/+wvXrN54+/QXxB5o5OrniFhtS0lYGBKZnbiouKcVj6KGuqbtx89ai
opLYtfG8qIgH4ZHRhYVFpWVn8KznautxxyEz14m+kelHNcNL5OzqgQhcdubs
pi1ZunpGzY/jBUGZgXcNf+fCjPDrRXjNLKwWunksvXu3+sWLF1u3bTddYCkQ
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
oSOvX795//7948dP4Imf/6qKc+e57SnR5tSp04bGZgK7Z4ZHRPPvVrkhNT01
PRMP7t/HkUf37t9fsXI1TBNGM/5QxmkWsLg//7Q+3vdD5aZOZamd7+/qwItU
D3b/iGCF9njcPHZxmp1a3+X8RgnuKlCz58cLmzpV7fiJ6/Pato54zPXAnb2a
1RGNeae4e5WldeYefwOatW7gpyTNj+6nid/8+84g1m3L3oHHXN3O7ZKJVYmb
uyf/7pncvm+83SoVZiphkA6OLnjMv6HhRzUTSJfNNcORIJf+c1VkVBVlvGwH
IEBBIT2N4dPkR6FZjKekurKMtcFQeflRq53680xDGxPtYaY6w6bKj7IxHFKR
KXE8sYu14ZAZ00eqzB6R6NMH3Qa79NNTH66lKq0ya0Tait5oEOrar2BtN5yK
8JBMXdG7IK4bekb7eerSmwN7fb2aQaElXssSk5IFQlZKavqq1cFcWBNNszbt
p2lt68DTDODBgYOHvH380CYkLLK4pDR/736BHZpa3BGJ2yUH4fHwkWOFhUU4
JZpmvKTJ+YY4gyCDSV/lKAUNoJC75cATiY1LBmi21GYgzmYG9PJ3kOJlSbRZ
sUgKdp1Nlwh06p+2sjcU8rWXgodo6W45KDeiBxrELJVE7MIp3Ki5Zhv8ejvO
H1yS0vmrTpoCJVlzOLVGjZGdMUsFCLlnq2Tb99NE4OI5g+SIg7D0+o0bXBss
P5M3pEGVVjRTVFbfmpWNfNq05+YrpODS0jPCaCb5saSJtBXn3VdfYziimfm8
oZxmvLoLmnGNBYox3p+cM3jM65bTKWNVL84lXifNNbu4uZP/IinZiaM1lGXy
ort/pZpxe/62GKYQeZb7rYRpzq4eQ6VHtXUAbd1Pk98ZI5MFx4+fzN6+U2BU
AtsaCmi2aLHrhcpKbrdo/lOiLQH4NdsZ3gNHMPs8DYTUjItmRRs6+9kPaBbN
BiKaNddsqfVAJEfYFejcH6cwGHTIC3dfqWatb1w4V1sPFZHwG09/SDNh9tPk
FwPt0zI2VlScd3VfOnzEWHhy8lRhSGj4Yic3ITUzMbOAzFh0iKwZ/0pzf2w3
D8uBqKmczAahykJmXOvdVxjNuNpslsJIZFXU8PDN0XTwzOkjNVWkOYUENENq
DnHthxuZNl2IUzBcf+5w1dky6GpHWI+vWrPW+XTNJIXYT1PAGYRZlPovX75E
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
RjCANCMYQJoRDOA0+3986/4g
    "], {{0, 364.}, {205., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{205., 364.},
  PlotRange->{{0, 205.}, {0, 364.}}]], "Input",ExpressionUUID->"de833a72-3731-\
4a35-9701-c85e5f4999d6"],

Cell["Click to the button \[OpenCurlyDoubleQuote]Create\
\[CloseCurlyDoubleQuote]", "Item",ExpressionUUID->"ef1d6fdd-8ab6-473a-b3c7-\
8435243c9bb3"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3f9LXPeex/Hu7i8L/WX/BfvTwP1BUAg7+0Nwt1hYSaFUl7DeH8qUvb2m
FM293TS04QopkSAJiJAEQiIUhcAsBBQE09ubL73XeHOtXhSlkUhsnWiN4zjO
HB2d0TGz73POfPmcL/NNR/PF54PTYJ1zPuczI/Oaz7dzpurjtg8/+ce33nrr
83+Wfz70nf333//e92Xjv8j//Ffr56d+2/qb//nP1v/9zW9/8/t//fif5Jcj
8t9f/uGtt/SfUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKWJh7Vo
ZosnX3ZtALwMRg4kXnYtXl+THZ7aqszWMfayqwPg0CxN+rvPNdZ5q5QQ8NT5
2rr7x5dedt1eM5UJ0sDtMyeampXt3EDRP8REn/UQ59bSdvFq7+BMIO5y9PjN
wsf2je/xqQBHQDJ0/2KzR3nvO7a65mujwderizp/93L31fT23eLhnrsiQTrX
22T/Q/huh4ocNNaV/49o/5u23Jqzpen4pcKHdBGkgLvYzJVfe0t561WfHgq8
RlmqRsqlycM9dyWC9Kn/hPOv8El/sPBRZQSpvtVfmlSzlCAF9iK56D/lTFHv
sQ+kH9dU7XzfdU+69QhfSa95kM72NbtFWau/cO++zCCt8rzfMZYbDM917S0j
PHX1dO2B/KJD5yw9em/LlYeLuVnmZCLwsKfZq77vmq48fpkVLsPrHaRKv77m
3NkvcrFWpHdvCdKW3se5xQOZbXH81tf16h/99FDUUUzwdisNUaAkyZkr7ypv
qIauEc1tt4V+X42StBOuO5UpbrypY+VWOFH6gqLo4Jk9BGl8TwuW9KM0dZHD
voNU7defH45+31lq794SpHmbr9PX3ld2O3fH8SclSIESxR92Ks1Rb/v3edc7
BW75qry+9tszUWvCWCZ5b6bDKjjWf+O8Pt18dsjedoovjN74oqVebeLWvNf4
xdWBxwXDeWnSf+nMCedygpvDs87j0tPW1nEJb1O2njcmHIcktenBrpYP3lMb
59UNZ9pvFZlfiz4e6vhMOZG3qSU9JbffIJ2+ngu6tiEtFR9uL7F3X1qQWnfz
Xna8JgQpUKLxS0o0vdszXWDXmBZ1ixTL3IS0+pKLd75qytMJTUzfbHEOumbf
yycuDrulVmL21pn8R0kON19+ZA3TYoOE9lhbuHv2g/xzbd4zvU/cP18CA+4V
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
T2xLaoUjmgSX/CAh9hKrJJG5vqFHqOQn4QngtSOhKkEqzVSJMgm0w6/AVjwh
Z5cIPfxTA0AFSTvQjFOJtcM8r6S3dORphQJ4Y2zv7EhnX8LtcE4X1TY2tw41
twHgcEgTUSLuwM+ibcTjdOcBvLH0HvdBZqmUT1sUwBtP2qUH1Mffiiek8IMo
GQBeNeGIVvG5p93dFyurEWaXABwR2zs7EnqVXRMlrVxWOgE4UjZimxXs4CeT
u6FwtFKlAcBrQfrg0iit1HVPEss0RwEcQZJ+slWkKGmOMjoK4AjaSSYr0h/f
3t55vSbrd3df/PJ85dkvyzs7yf2Xtr6x+fOzX8JrhV5JeVT2KX0spdz9AbxE
4Yi2//tExTa39tOvN2NNckPdlldWix4i297mywhS4NWX+Pkb7V5N5Nu3I9/+
KvLn7lihSCjd840Hb0ce+OMVKSxDuvYSg/ssJKpt7O7ufazVjLXAwvNIdF1b
j5nb5lahJyqnI0iBN9jOXKceoXc/Xf/xQWziSyNOfRuh/Rf800EEaTyxvf8L
nVbXtP0MkBaINTNPgivhZ4vL8oPstr2zs7UVl9TNtl3NtInFthZ+0feRh6SZ
bdZHOfy5mrrqGc1MlqM2N/WXVlvfMM8l/8rP8pvllbA8upUJ9pXQmvq/KWuQ
Smmyw/zCkvxG6pMdglZrkn0i5kMFak6Q4qj6af2eJOeXscyQYfLnzsiD7lhE
fnykSag+OL8+8qGkqzYnmfs89sOnkT9mGq6R9CGJp93RP/1KT+DvPoxOTOjv
t5A/qgdyetOPTaW2n/nT7d7vPtSmZvbWP99JJiUG9/mcV1YjxXfKr2iQLi4F
pYEaCkfkZ4kpiZp4PCFBt/g8aN7mVNqvgYUlKUR2W1ldm3+2tBbVsodLQK2u
RWWfbNpnz7i9vSPhJrmnGWO88pkixz4Prm7FE/Kv/F6SUH6ZzclkMrnwS1DO
q7bA1SDVS1hYkp/lQClfKmmOnKhPRH6WfZaDq0VrTpDiiAoaiffwgVusGUH6
7TuRv1zfmH2wFd2KPXwn8m2D9uNMfHFA+9PbkT91b8m7c+OOvtuwf3N5ZuPh
v8n+2pOt1O7Wtmb8/sE3W1pE2jK7S9/oEfrn65vLP22O+2S36OO9pJm5CGq/
Tzq0tp/DnV379Y2YuS7LzBNtQ085acJJLpkNS4lcialsI9NsJcYT+rVaZtaZ
D6mHO88opQVDYckuMwPlpVhaDi1k8lxKCyw+l+aoZLU0I+UhM/ckA1fDllfM
0iJ98UIqbyZ2aFVPfrNRqtZk1ziR+cFRuOYEKY4os1//6JHbY2aLNNM31+7o
kfvDhNmy2X78Oz0zf9Z/Tsw92DKHLc20/NuE8/CtMcnYTzfSw3IT69+9Hfl+
YG/XfO4zBvdfgnOyKdt3VvNEDU/150wOLy2vrErzctnoPpsxlS+O1DOazc5s
+c+M8DTKWTXbitL4fB4MSahK3EmEyv62UeV8Y6Tq2W01MQp/Lp36cmsOHAml
B6m55/fntR+69W1Y7+9Hp55bjjB79OnS1MONiadvP4yax/5wPipB+m3n3t51
+w/Sg+7alxaklrkqyUZp+BUNUulry4Hyr7QGzTKlRSrd82w55oCAlCw7y79y
lL6zdWZNDVLpyEtr0xwjVYdwCwZpGTUHjoSiXXtbkP51IDb7ILttrkgvPrI5
8bvod+9kR0TzB+mn68qxsdmZPbRIK9K1P+jJpsJBmsrMB5kdZJFIbJtjmIWD
1BzAXFldk33Wopr5ywWlGvFE+numzG6+nrqLz1ccnzvZIJWdl4Or0qo0bwjj
bJFauvZy9p2dcmsOHA32yabdQHfk7pcbzyL2IF0dULv2kp9by3qHcefJeb1p
+mNEfzPnbZGmNv/2jtK1T+0s/5TY0/qjikw2Hdzyp8JBmp1sklacNAIl6CTB
5FiJstDqWqpokBqZaQ6ByiY/SJzK/s+Dq5JsaxFNOt3mkgYz+vRxgGdLGzH7
ajEzSENh/Xpb2U2eyLrsFE9IfeT3UsKLTAvTOdlUuOZRbZ3rxXA05V/+ZA3S
VGTjLxKG/6H9OJNYndn4a4MevxvmYOnb0b9PJDRzFklarXe249nDjcmmXSOf
9ZGB65vLkfhP16N/fDvy95k91LYiy58ObkF+viBN6c1gPY6yo6mSXeayJUk/
aWQmS2mRZhqf5m5ylKSWkZ/6CiVpfIYj0d1Mjpn7LLg1m+U3Zv1lH8lDcy2T
RKLEsvxs1rDA8ifXmscz5dAoxZGlLMivURbk24JU3oE/bRhLofTlTw/0Vqv+
FtrN/rImOv4g9reG7Njp1oSRq9/+t7kqdfvn65lVUg3RHx4k9rT+qSIL8l+7
S0T3QJ+vf7bk7NcDQEUuEU296TctkT67OZS67lhJBeCIq9RNS1Jv9G30siMP
yyurlb0VNoA3QAVvo8eNnQEcQZW9sXOKrxoBcPRU9qtGUnz5HYAj5iC+/C7F
1zEDOEoO4uuYTdLK3dw6kJIB4NUR1W+vdIDLvKPaRjzOYCmAN5ZE6P4vZSpK
TkG7FMAbSdqih5CiJj2x12PMPQF4Y2zv7IQj2iFfuL0VT6ysRlgTBeB1Z95i
SALtgGaXCtvdfSHpHQpHzds0HX4FAGA/dpJJM0Ilyl7utY3J5K7UROJUOvuS
qLtSG0IVwCtJ0knCM57YltSSjrwEl/xQwWuX9m97eye2uRXVNlbXNEn4YGiN
jY2N7ZXaJJokoCSmJKwqck8nAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACAI+X/Ae+tZwY=
    "], {{0, 198.}, {451., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->72],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{451., 198.},
  PlotRange->{{0, 451.}, {0, 198.}}]], "Input",ExpressionUUID->"27521ca6-8e02-\
4819-9edf-19e05dcc9fea"],

Cell["\<\
Follow the instructions of Binance. You have to confirm process in your email\
\>", "Item",ExpressionUUID->"3e52d2bb-92d5-4797-8f93-e5a121eceb18"],

Cell[TextData[{
 "After the previous operation you have to copy the keys and save them in a \
special file - ",
 StyleBox["\[OpenCurlyDoubleQuote]ExchangeLink.wl\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 "."
}], "Text",ExpressionUUID->"925baf7c-9c7b-4c1b-b97f-27eade19592c"],

Cell["\<\
Data in the file must be a Wolfram Association in a format like this:\
\>", "Text",ExpressionUUID->"e71e67e9-4b4c-48b6-b961-b8d32ffa99cf"],

Cell[BoxData[
 RowBox[{"<|", "\n", " \t", 
  RowBox[{"\"\<Binance\>\"", " ", "->", " ", "\n", "  \t", 
   RowBox[{"<|", "\n", "   \t\t", 
    RowBox[{
     RowBox[{"\"\<Domain\>\"", " ", "->", " ", "\"\<binance.com\>\""}], ",", 
     " ", 
     RowBox[{"(*", 
      RowBox[{"also", " ", 
       RowBox[{"binance", ".", "us"}], " ", "is", " ", "available"}], "*)"}], 
     "\n", "   \t\t", 
     RowBox[{
     "\"\<APIKey\>\"", " ", "->", " ", 
      "\"\<JqbsI8dNvn4wQ2tQ00bzChAdIiKVxas98ZMQPxO7Iykr0zrp32mPMOBO2tFbrdw5\>\
\""}], ",", " ", "\n", "   \t\t", 
     RowBox[{
     "\"\<SecretKey\>\"", " ", "->", " ", 
      "\"\<nwVaV8d25Btl9PqSJgks0IUBtZMj44xIdJY2wHceAcGqH3zpagEx9R6mn1G7rbbo\>\
\""}]}], "\n", "   \t", "|>"}]}], " ", "\n", " ", "|>"}]], "Code",ExpressionUU\
ID->"1cfeeb35-6b49-4d47-a89e-a002b0205665"],

Cell[TextData[{
 "This file maybe stored in the current working directory or in the project \
directory. If you cloned the project from github - ",
 StyleBox["\[OpenCurlyDoubleQuote]ExchangeLink.wl\[CloseCurlyDoubleQuote]",
  FontSlant->"Italic"],
 " already exists in the project directory."
}], "Text",ExpressionUUID->"39c37b26-d8fd-41f1-bb46-dd27c21d094d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Account ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "15f5288e-9f8b-4f78-9ed3-550a330f2e0e"]
}], "Chapter",ExpressionUUID->"2785a5cd-a0f6-4391-8e80-5e76d5bcdf9a"],

Cell["Non zero balances", "Text",ExpressionUUID->"d9b58248-031f-4ccb-b6ed-f6b735071ff5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{"#free", "&"}], "]"}], " ", "@", " ", "\n", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#free", " ", ">", " ", "0"}], "&"}], "]"}], " ", "@", " ", "\n", 
   RowBox[{
    RowBox[{"BinanceAccountInfo", "[", "]"}], "[", "\"\<balances\>\"", 
    "]"}]}]}]], "Code",ExpressionUUID->"f775a8e1-33f6-4580-b32e-43ca0382ad8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BCHSV\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "4.9`*^-6"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"ADD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0004`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"MEETONE\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0004`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"ATD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"EOP\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"IQ\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.00408`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BNB\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.35438899`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"SUB\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.864`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"EON\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "1.5008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"MOD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "14.65`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",ExpressionUUID->"60c4621c-\
d710-4302-a184-09d81b76713a"]
}, Open  ]],

Cell["History of all trades", "Text",ExpressionUUID->"f8d07e71-daf7-433f-9362-7e20b700fcf6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceMyTrades", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",ExpressionU\
UID->"01613f79-19a5-4c3c-beba-095d6aedc9c6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"id\"\>", "\[Rule]", "17056810"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "44470524"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "8750.`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.013617`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "119.14875`"}], ",", 
             RowBox[{"\<\"commission\"\>", "\[Rule]", "0.03574462`"}], ",", 
             RowBox[{"\<\"commissionAsset\"\>", "\[Rule]", "\<\"USDT\"\>"}], 
             ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Wed 14 Feb 2018 04:07:40\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2018", ",", "2", ",", "14", ",", "4", ",", "7", ",", 
                    "40.19799995422363`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyer\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isMaker\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}], ",", 
           TemplateBox[{"378"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"id\"\>", "\[Rule]", "73573796"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "173127381"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"isBuyer\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"isMaker\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 41, 23046009482329666571, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 41, 23046009482329666571, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 41, 23046009482329666571, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23046009482329666571 === $SessionID, 
   Out[41], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",ExpressionUUID->"9a8196e2-d6b9-4365-ab87-a1b0826876af"]
}, Open  ]],

Cell["\<\
History of all orders. Like all trades but in these statistics you can see \
what orders were canceled.\
\>", "Text",ExpressionUUID->"13a71be2-af50-432a-b8ca-4e720e0de512"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrdersAll", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",Expression\
UUID->"1889e211-656d-481f-8c90-103c98cb07cb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "44470524"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             
             RowBox[{"\<\"clientOrderId\"\>", 
              "\[Rule]", "\<\"ItBhjKwekNUlg8wRiLrzFT\"\>"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "8750.`"}], ",", 
             RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.013617`"}], ",", 
             RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.013617`"}], ",", 
             RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "119.14875`"}],
              ",", 
             RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"FILLED\"\>"}], ",", 
             RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
             RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
             RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
             RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Wed 14 Feb 2018 04:06:50\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2018", ",", "2", ",", "14", ",", "4", ",", "6", ",", 
                    "50.65499973297119`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Wed 14 Feb 2018 04:07:40\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2018", ",", "2", ",", "14", ",", "4", ",", "7", ",", 
                    "40.19799995422363`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"375"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "1856529260"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             
             RowBox[{"\<\"clientOrderId\"\>", 
              "\[Rule]", "\<\"hb3kY1ONrorHNx1xxPqlO8\"\>"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "15000.`"}], ",", 
             RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.0008`"}], ",", 
             RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"CANCELED\"\>"}], ",", 
             RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
             RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
             RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
             RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Fri 17 Apr 2020 07:33:54\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
                    "54.992000102996826`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Fri 17 Apr 2020 07:34:09\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "17", ",", "7", ",", "34", ",", 
                    "9.329999923706055`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 10]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 42, 23046009482329666571, 10/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 42, 23046009482329666571, 10 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 42, 23046009482329666571, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23046009482329666571 === $SessionID, 
   Out[42], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",ExpressionUUID->"24c4eb05-9a7a-4ec5-868e-a8a232552945"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Trading ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "1058455c-213d-45e9-bc1d-8fc0331aa02b"]
}], "Chapter",ExpressionUUID->"c4fc074f-8488-4663-b9b6-fe64719ae94e"],

Cell["\<\
One of the important parts of this guide - trading. The point of Binance is \
to trade cryptocurrency!\
\>", "Text",ExpressionUUID->"1fc533a0-d971-47a9-a6d8-61c68e627123"],

Cell["You can create simple order using following.", "Text",ExpressionUUID->"2448182b-6feb-45f1-9e8b-b60daf5ba747"],

Cell["\<\
First - get the current price of LTC in BNB (now I have only BNB):\
\>", "Text",ExpressionUUID->"87b6e1ed-a5c7-4fae-90cb-26129148e37e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"price", " ", "=", " ", 
  RowBox[{
   RowBox[{"BinancePrice", "[", "\"\<LTCBNB\>\"", "]"}], "[", "\"\<price\>\"",
    "]"}]}]], "Code",ExpressionUUID->"9710d12e-a94a-4c8d-942f-446d6eacbac8"],

Cell[BoxData["2.621`"], "Output",ExpressionUUID->"2f3b3ab0-8359-4574-a854-7046547ebcd7"]
}, Open  ]],

Cell["\<\
And try to buy LTC 10% more cheaper than our original purchase:\
\>", "Text",ExpressionUUID->"586f2726-2d2b-4c74-b761-a63664e0868b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceBuy", "[", 
  RowBox[{"\"\<LTCBNB\>\"", ",", " ", "0.14", ",", " ", 
   RowBox[{"price", " ", "*", " ", "0.9"}]}], "]"}]], "Code",ExpressionUUID->\
"3095bba1-89df-4cd7-bce1-36b331431b4a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"LTCBNB\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "61103260"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"mcG4hnnpwPzcZDT2fCjc8c\"\>"}], ",", 
   RowBox[{"\<\"transactTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Mon 20 Apr 2020 07:59:19\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "20", ",", "7", ",", "59", ",", 
              "19.06700038909912`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "2.359`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.14`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"BUY\"\>"}], ",", 
   RowBox[{"\<\"fills\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",ExpressionUUID->\
"ef931c94-8680-4fde-a9af-3088ae15bcb5"]
}, Open  ]],

Cell["Now you can check that the order was created.", "Text",ExpressionUUID->"cd643406-61b8-43e9-9d5e-d2a0252d13aa"],

Cell["Try to get all opened orders:", "Text",ExpressionUUID->"65ba1a24-fbcd-42e9-a9cd-bf9b83d0c080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orders", " ", "=", " ", 
  RowBox[{"BinanceOrdersNow", "[", "\"\<LTCBNB\>\"", "]"}]}]], "Code",Expressi\
onUUID->"c3552983-922d-4fba-bef9-622c6490d388"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"LTCBNB\"\>"}], ",", 
    RowBox[{"\<\"orderId\"\>", "\[Rule]", "61103260"}], ",", 
    RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"\<\"clientOrderId\"\>", 
     "\[Rule]", "\<\"mcG4hnnpwPzcZDT2fCjc8c\"\>"}], ",", 
    RowBox[{"\<\"price\"\>", "\[Rule]", "2.359`"}], ",", 
    RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.14`"}], ",", 
    RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
    RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
    RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
    RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"BUY\"\>"}], ",", 
    RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"time\"\>", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\"Mon 20 Apr 2020 07:59:19\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "4", ",", "20", ",", "7", ",", "59", ",", 
               "19.06700038909912`"}], "}"}], ",", "\"Instant\"", ",", 
           "\"Gregorian\"", ",", "0.`"}], "]"}]},
      "DateObject",
      Editable->False]}], ",", 
    RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\"Mon 20 Apr 2020 07:59:19\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "4", ",", "20", ",", "7", ",", "59", ",", 
               "19.06700038909912`"}], "}"}], ",", "\"Instant\"", ",", 
           "\"Gregorian\"", ",", "0.`"}], "]"}]},
      "DateObject",
      Editable->False]}], ",", 
    RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
   "\[RightAssociation]"}], "}"}]], "Output",ExpressionUUID->"0367bfed-97e4-\
481e-846e-6bc10ff16b82"]
}, Open  ]],

Cell["Get order informoation first:", "Text",ExpressionUUID->"cdd8f6ff-a394-4170-b86d-e8d3ee865c3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrderGet", "[", 
  RowBox[{"\"\<LTCBNB\>\"", ",", " ", 
   RowBox[{"orders", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<orderId\>\""}], "]"}], "]"}]}], 
  "]"}]], "Code",ExpressionUUID->"195e0e47-8174-4f90-9359-620cbb3ebd20"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"LTCBNB\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "61103260"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"mcG4hnnpwPzcZDT2fCjc8c\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "2.359`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.14`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"BUY\"\>"}], ",", 
   RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"time\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Mon 20 Apr 2020 07:59:19\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "20", ",", "7", ",", "59", ",", 
              "19.06700038909912`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Mon 20 Apr 2020 07:59:19\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "20", ",", "7", ",", "59", ",", 
              "19.06700038909912`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
  "\[RightAssociation]"}]], "Output",ExpressionUUID->"0e4a698c-bb09-4401-a2b8-\
f05b3c887c54"]
}, Open  ]],

Cell["If you changed the decision, then you can cancel the order:", "Text",ExpressionUUID->"e677df2c-f8f3-4f09-933a-251a752270b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrderCancel", "[", 
  RowBox[{"\"\<LTCBNB\>\"", ",", " ", 
   RowBox[{"orders", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<orderId\>\""}], "]"}], "]"}]}], 
  "]"}]], "Code",ExpressionUUID->"a9d746fb-07c1-4a14-8a0e-8564481e7624"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"LTCBNB\"\>"}], ",", 
   RowBox[{"\<\"origClientOrderId\"\>", 
    "\[Rule]", "\<\"mcG4hnnpwPzcZDT2fCjc8c\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "61103260"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"eQHIogt8W0QAuBfg7fkZHD\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "2.359`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.14`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"CANCELED\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"BUY\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",ExpressionUUID->"0d35725a-887c-480e-b643-\
708dca0b7d3c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Contributing ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "f278861e-c6f2-4091-bf54-d534d74f00ae"]
}], "Chapter",ExpressionUUID->"11300bbb-1b9b-4d8e-a067-8bd063a5a0bd"],

Cell["\<\
You can use all available ways to contribute to this project.\
\>", "Text",ExpressionUUID->"b929acbe-b29c-411b-b3dd-90e903fbd31b"],

Cell["Join the team.", "Item",
 FontWeight->"Bold",ExpressionUUID->"40c6ac96-7bd5-409a-b623-038efea45a33"],

Cell["\<\
We will glad to see you in ExchangeLink team. Please contact with us.\
\>", "Text",ExpressionUUID->"02984766-4ac8-4bb6-86df-ad4b5e2c1d73"],

Cell["Standard github flow", "Item",
 FontWeight->"Bold",ExpressionUUID->"69ae4876-e0d2-4387-aaca-b20780a38b10"],

Cell["More about this way on the official github help page.", "Text",ExpressionUUID->"0cb7434a-5239-4f0d-9941-a118ac6cf69d"],

Cell["Contact with the team", "Item",
 FontWeight->"Bold",ExpressionUUID->"3b226b0a-4c1f-41e4-82f9-51484d43c932"],

Cell["\<\
If you have any suggestions or questions, you can always write us an email. \
We will consider any offer and try to answer all your questions.\
\>", "Text",ExpressionUUID->"d0e149a3-d4ac-4223-8ac7-ac28fccc7cb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Contacts ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Chapter",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "0ed46293-b731-4d80-ba4b-03f2296885ab"]
}], "Chapter",ExpressionUUID->"e358bc4c-110a-4c86-9dc5-2492eb218f9d"],

Cell[TextData[{
 StyleBox["Jon Woodard",
  FontWeight->"Bold"],
 " (",
 ButtonBox["@Lenley",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/Lenley"], None},
  ButtonNote->"https://github.com/Lenley"],
 ") - jonlbwoodard@gmail.com\n",
 StyleBox["Kirill Belov",
  FontWeight->"Bold"],
 " (",
 ButtonBox["@KirillBelovTest",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/KirillBelovTest"], None},
  ButtonNote->"https://github.com/KirillBelovTest"],
 ") - KirillBelovTest@gmail.com"
}], "Text",ExpressionUUID->"3790c199-4bd0-41c9-bc8b-923c98736bc6"]
}, Open  ]]
},
WindowSize->{958, 981},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
TrackCellChangeTimes->False,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a1b83e48-477a-40f8-a3f3-a486b9d760e5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 593, 15, 71, "Chapter",ExpressionUUID->"ceb6c9fc-82b6-42fe-b4ea-0cb06a112220"],
Cell[1176, 39, 92, 0, 34, "Text",ExpressionUUID->"94325706-a665-4439-950d-c03da10cba45"],
Cell[1271, 41, 243, 4, 56, "Text",ExpressionUUID->"62ddfd43-a8cf-42c8-8ece-ba29c1f6593d"],
Cell[1517, 47, 146, 2, 34, "Text",ExpressionUUID->"47e38a98-4764-4277-aab4-6dd32a046ff9"],
Cell[1666, 51, 108, 0, 34, "Text",ExpressionUUID->"07e41d6c-76f2-4e8a-8e05-bd14e8b1ee5a"],
Cell[CellGroupData[{
Cell[1799, 55, 84, 0, 31, "Item",ExpressionUUID->"36c6c467-4486-4705-b3db-d50d5e84aba1"],
Cell[CellGroupData[{
Cell[1908, 59, 128, 0, 26, "Subitem",ExpressionUUID->"0c9fcfdf-3730-4fe1-8ce6-6832421c7409"],
Cell[2039, 61, 87, 0, 26, "Subitem",ExpressionUUID->"3f06b1c5-02dd-4825-8168-dd2a29d5641c"],
Cell[2129, 63, 79, 0, 26, "Subitem",ExpressionUUID->"cf2eaabe-197e-4b45-a934-826e54363268"],
Cell[2211, 65, 82, 0, 26, "Subitem",ExpressionUUID->"d63990fb-5b5d-40b0-97e6-c3468a1bebf1"]
}, Open  ]],
Cell[2308, 68, 91, 0, 31, "Item",ExpressionUUID->"ed0f13ba-8aaf-437d-9e76-a39b1e40b871"],
Cell[2402, 70, 109, 0, 26, "Subitem",ExpressionUUID->"6efa8d49-9f49-4a55-9021-87ef80d2bc4f"],
Cell[2514, 72, 82, 0, 31, "Item",ExpressionUUID->"d6d3e025-d558-455c-af86-9483a91203b3"],
Cell[CellGroupData[{
Cell[2621, 76, 107, 0, 26, "Subitem",ExpressionUUID->"83d6010a-bdea-430f-94b0-049839efd9c8"],
Cell[2731, 78, 111, 0, 26, "Subitem",ExpressionUUID->"40859e22-4afe-4906-bf70-d55794848933"]
}, Open  ]]
}, Open  ]],
Cell[2869, 82, 119, 0, 34, "Text",ExpressionUUID->"dc63ed3d-defc-47f5-96eb-59f7d0edd7e0"],
Cell[2991, 84, 104, 0, 34, "Text",ExpressionUUID->"79a685f2-9c44-4a11-a704-84a71197b4f1"],
Cell[3098, 86, 81, 0, 34, "Text",ExpressionUUID->"da0da92b-9dc7-495d-8b13-2451796f495e"],
Cell[CellGroupData[{
Cell[3204, 90, 90, 0, 31, "Item",ExpressionUUID->"11f249a5-f935-43ba-aa96-70a4994d1efb"],
Cell[3297, 92, 79, 0, 31, "Item",ExpressionUUID->"92838304-4ba9-4bcc-9e24-abaa5d10c025"],
Cell[3379, 94, 79, 0, 31, "Item",ExpressionUUID->"8037e85a-f53e-455f-98f9-64c311d4b8cc"],
Cell[3461, 96, 77, 0, 31, "Item",ExpressionUUID->"a0cf709d-63ef-4538-a954-809b3e73b7a3"]
}, Open  ]],
Cell[3553, 99, 79, 0, 34, "Text",ExpressionUUID->"2f7f2463-d807-4c75-8426-5929a7572c9b"],
Cell[CellGroupData[{
Cell[3657, 103, 77, 0, 31, "Item",ExpressionUUID->"2a36e40d-24cf-4e7d-a3f5-8c2ba74d91f1"],
Cell[3737, 105, 77, 0, 31, "Item",ExpressionUUID->"51726709-685f-45a2-94a2-537be6b1a106"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3863, 111, 595, 15, 71, "Chapter",ExpressionUUID->"98423955-86ce-4594-94d4-2f049b426089"],
Cell[CellGroupData[{
Cell[4483, 130, 88, 0, 31, "Item",ExpressionUUID->"da8b29ed-bb2c-43ca-9ed2-ae2aaeb8d724"],
Cell[4574, 132, 85, 0, 31, "Item",ExpressionUUID->"f24dd662-497e-4c7c-8a96-e27e7e0f9917"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4696, 137, 229, 4, 50, "Code",ExpressionUUID->"d50352aa-480e-4810-8145-6155a3815ab4"],
Cell[4928, 143, 22216, 393, 69, "Output",ExpressionUUID->"3235249c-2b8a-481c-ba4a-65355031c547"]
}, Open  ]],
Cell[27159, 539, 85, 0, 31, "Item",ExpressionUUID->"41bfe437-2bec-4ebe-b164-d2e2921a1ee4"],
Cell[27247, 541, 130, 1, 50, "Code",ExpressionUUID->"e3b6e5a9-c9bb-4b47-bcf8-44469c9e2f97"],
Cell[27380, 544, 98, 0, 31, "Item",ExpressionUUID->"d1e297be-636e-4e48-9913-4a25072cdffd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27515, 549, 592, 15, 71, "Chapter",ExpressionUUID->"9adeba25-b835-480d-ad55-36bacd7d0804"],
Cell[28110, 566, 229, 3, 56, "Text",ExpressionUUID->"53303002-869d-4501-a034-ac3457f0b8f2"],
Cell[CellGroupData[{
Cell[28364, 573, 119, 1, 50, "Code",ExpressionUUID->"ff3e357e-6a4a-49e2-94a3-7d0123522ea2"],
Cell[28486, 576, 15398, 345, 213, "Output",ExpressionUUID->"64cf5658-7e07-4e50-b493-ed3e311dda56"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43933, 927, 593, 15, 71, "Chapter",ExpressionUUID->"19d08895-99cf-44a8-be98-356a0246821d"],
Cell[44529, 944, 115, 0, 34, "Text",ExpressionUUID->"da47335a-6c7f-411a-8322-15afd7b2f9e6"],
Cell[44647, 946, 246, 4, 56, "Text",ExpressionUUID->"aed67ffc-dfa0-4820-a0b2-6b31a983f72f"],
Cell[CellGroupData[{
Cell[44918, 954, 160, 3, 69, "Code",ExpressionUUID->"e18d0e66-fca2-4120-8dfd-c53971823316"],
Cell[45081, 959, 137, 2, 32, "Output",ExpressionUUID->"c6919428-e49b-459b-b2e1-7e21c93da742"],
Cell[45221, 963, 625, 15, 43, "Output",ExpressionUUID->"a74a6373-38d9-454e-9aa5-e561f9496f53"]
}, Open  ]],
Cell[45861, 981, 353, 5, 56, "Text",ExpressionUUID->"257132ec-378a-4fcf-ba61-7ff6f5c66466"],
Cell[CellGroupData[{
Cell[46239, 990, 121, 1, 50, "Code",ExpressionUUID->"d5560724-e0ea-4935-86c3-5baaf73145fe"],
Cell[46363, 993, 11403, 280, 180, "Output",ExpressionUUID->"132900b3-fe0c-4a22-b1e6-69da9dcba076"]
}, Open  ]],
Cell[57781, 1276, 508, 11, 78, "Text",ExpressionUUID->"1062b093-279e-45f7-ae63-a53ffcdd8aae"],
Cell[CellGroupData[{
Cell[58314, 1291, 1456, 34, 213, "Code",ExpressionUUID->"8d54f4e8-7193-4f5c-a896-c3c41726d23b"],
Cell[59773, 1327, 267781, 5520, 559, "Output",ExpressionUUID->"e13e0394-3b9a-40bf-9111-e16707602366"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[327603, 6853, 592, 15, 71, "Chapter",ExpressionUUID->"348b3326-d9bc-4c2f-988a-25802b64f3ba"],
Cell[328198, 6870, 89, 0, 34, "Text",ExpressionUUID->"a311d586-9708-4079-a6c4-0776847830b9"],
Cell[328290, 6872, 1320, 41, 141, "Code",ExpressionUUID->"23cc675d-b614-432d-94c6-2e02b45b7756"],
Cell[329613, 6915, 177, 5, 34, "Text",ExpressionUUID->"7d5d4411-d1b5-4316-8df4-dd008f62141e"],
Cell[CellGroupData[{
Cell[329815, 6924, 2342, 61, 231, "Code",ExpressionUUID->"36b69576-c104-483d-ba11-4cbfc622bd0d"],
Cell[332160, 6987, 27140, 587, 357, "Output",ExpressionUUID->"414aa9a6-31c6-4a8a-bbbc-f1cb33ef2f0d"]
}, Open  ]],
Cell[359315, 7577, 124, 0, 34, "Text",ExpressionUUID->"47244977-20ba-41e8-8ff1-cbc6c84c91ae"],
Cell[CellGroupData[{
Cell[359464, 7581, 136, 2, 50, "Code",ExpressionUUID->"e6ed90fb-8bfc-4b64-819e-90251de0cb1d"],
Cell[359603, 7585, 11015, 272, 190, "Output",ExpressionUUID->"48f16ea1-4687-4356-8650-59d94284959a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[370667, 7863, 594, 15, 71, "Chapter",ExpressionUUID->"0a33d0e3-0323-4983-8231-7af4d6bc6ad2"],
Cell[371264, 7880, 104, 0, 34, "Text",ExpressionUUID->"851ea476-ea07-4edb-878c-c57626c8c10d"],
Cell[CellGroupData[{
Cell[371393, 7884, 133, 1, 50, "Code",ExpressionUUID->"24b606ad-2a3c-42fc-8a9f-9f70f04ad9c4"],
Cell[371529, 7887, 274, 6, 32, "Output",ExpressionUUID->"b42ca767-3df5-43b7-8ab9-e53c0baf2b4a"]
}, Open  ]],
Cell[371818, 7896, 199, 3, 34, "Text",ExpressionUUID->"22a1a003-2215-4c63-8c32-ef270786eba6"],
Cell[CellGroupData[{
Cell[372042, 7903, 136, 2, 50, "Code",ExpressionUUID->"b1ff0c1f-2faa-431c-81c8-38196664eb53"],
Cell[372181, 7907, 2371, 49, 138, "Output",ExpressionUUID->"1d8186de-5794-4760-a66d-f9e98840eefb"]
}, Open  ]],
Cell[374567, 7959, 98, 0, 34, "Text",ExpressionUUID->"90011771-aa6d-4a51-a03b-2dabfb2af9c0"],
Cell[CellGroupData[{
Cell[374690, 7963, 115, 1, 50, "Code",ExpressionUUID->"2310e413-cc81-4a60-9de3-b41431513742"],
Cell[374808, 7966, 11375, 278, 198, "Output",ExpressionUUID->"bc567749-84a5-4d2d-830d-01ac233b9768"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[386232, 8250, 586, 15, 71, "Chapter",ExpressionUUID->"362235ba-25a3-477f-9582-7ff5b89cd0a2"],
Cell[386821, 8267, 103, 0, 34, "Text",ExpressionUUID->"e38b7723-1790-4a6a-bc87-ec50edcb7c7b"],
Cell[CellGroupData[{
Cell[386949, 8271, 149, 1, 31, "Item",ExpressionUUID->"992f0dca-f1d2-4496-b20f-7e697dd4752e"],
Cell[387101, 8274, 282, 4, 31, "Item",ExpressionUUID->"842bfae4-d1a9-4d3a-a2de-ce36db47c142"],
Cell[387386, 8280, 198, 3, 31, "Item",ExpressionUUID->"8b749f3d-a648-4dbf-88be-0c14410af40f"]
}, Open  ]],
Cell[387599, 8286, 114, 0, 34, "Text",ExpressionUUID->"087a20fa-a7fe-4e97-a4ae-636a966fd567"],
Cell[CellGroupData[{
Cell[387738, 8290, 770, 18, 105, "Code",ExpressionUUID->"d6670f0f-137b-4a1f-90ce-c53d978b3165"],
Cell[388511, 8310, 25018, 389, 559, "Output",ExpressionUUID->"0ee45fe6-caaf-4a2b-a75c-fdee69f00dc1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413578, 8705, 589, 15, 71, "Chapter",ExpressionUUID->"7692efec-76f0-4042-95e2-5561abdbf672"],
Cell[414170, 8722, 190, 3, 34, "Text",ExpressionUUID->"98657a06-20f4-4d3c-8114-d2cddc337ab9"],
Cell[414363, 8727, 100, 0, 34, "Text",ExpressionUUID->"2c37a0f0-976b-43c5-8567-65f1c67ac5ef"],
Cell[CellGroupData[{
Cell[414488, 8731, 404, 14, 31, "Item",ExpressionUUID->"bc2f921f-5206-444a-91a7-be3b732ffd6d"],
Cell[414895, 8747, 194, 3, 31, "Item",ExpressionUUID->"0b35eca8-122a-434f-8501-0d19c88cd951"]
}, Open  ]],
Cell[415104, 8753, 18412, 307, 377, "Input",ExpressionUUID->"de833a72-3731-4a35-9701-c85e5f4999d6"],
Cell[433519, 9062, 148, 2, 31, "Item",ExpressionUUID->"ef1d6fdd-8ab6-473a-b3c7-8435243c9bb3"],
Cell[433670, 9066, 9388, 159, 211, "Input",ExpressionUUID->"27521ca6-8e02-4819-9edf-19e05dcc9fea"],
Cell[443061, 9227, 156, 2, 31, "Item",ExpressionUUID->"3e52d2bb-92d5-4797-8f93-e5a121eceb18"],
Cell[443220, 9231, 283, 6, 34, "Text",ExpressionUUID->"925baf7c-9c7b-4c1b-b97f-27eade19592c"],
Cell[443506, 9239, 148, 2, 34, "Text",ExpressionUUID->"e71e67e9-4b4c-48b6-b961-b8d32ffa99cf"],
Cell[443657, 9243, 817, 19, 177, "Code",ExpressionUUID->"1cfeeb35-6b49-4d47-a89e-a002b0205665"],
Cell[444477, 9264, 359, 6, 56, "Text",ExpressionUUID->"39c37b26-d8fd-41f1-bb46-dd27c21d094d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[444873, 9275, 588, 15, 71, "Chapter",ExpressionUUID->"2785a5cd-a0f6-4391-8e80-5e76d5bcdf9a"],
Cell[445464, 9292, 88, 0, 34, "Text",ExpressionUUID->"d9b58248-031f-4ccb-b6ed-f6b735071ff5"],
Cell[CellGroupData[{
Cell[445577, 9296, 399, 10, 87, "Code",ExpressionUUID->"f775a8e1-33f6-4580-b32e-43ca0382ad8e"],
Cell[445979, 9308, 2700, 63, 117, "Output",ExpressionUUID->"60c4621c-d710-4302-a184-09d81b76713a"]
}, Open  ]],
Cell[448694, 9374, 92, 0, 34, "Text",ExpressionUUID->"f8d07e71-daf7-433f-9362-7e20b700fcf6"],
Cell[CellGroupData[{
Cell[448811, 9378, 138, 2, 50, "Code",ExpressionUUID->"01613f79-19a5-4c3c-beba-095d6aedc9c6"],
Cell[448952, 9382, 11364, 277, 202, "Output",ExpressionUUID->"9a8196e2-d6b9-4365-ab87-a1b0826876af"]
}, Open  ]],
Cell[460331, 9662, 182, 3, 34, "Text",ExpressionUUID->"13a71be2-af50-432a-b8ca-4e720e0de512"],
Cell[CellGroupData[{
Cell[460538, 9669, 139, 2, 50, "Code",ExpressionUUID->"1889e211-656d-481f-8c90-103c98cb07cb"],
Cell[460680, 9673, 14074, 329, 288, "Output",ExpressionUUID->"24c4eb05-9a7a-4ec5-868e-a8a232552945"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[474803, 10008, 588, 15, 71, "Chapter",ExpressionUUID->"c4fc074f-8488-4663-b9b6-fe64719ae94e"],
Cell[475394, 10025, 181, 3, 34, "Text",ExpressionUUID->"1fc533a0-d971-47a9-a6d8-61c68e627123"],
Cell[475578, 10030, 115, 0, 34, "Text",ExpressionUUID->"2448182b-6feb-45f1-9e8b-b60daf5ba747"],
Cell[475696, 10032, 145, 2, 34, "Text",ExpressionUUID->"87b6e1ed-a5c7-4fae-90cb-26129148e37e"],
Cell[CellGroupData[{
Cell[475866, 10038, 214, 4, 50, "Code",ExpressionUUID->"9710d12e-a94a-4c8d-942f-446d6eacbac8"],
Cell[476083, 10044, 88, 0, 32, "Output",ExpressionUUID->"2f3b3ab0-8359-4574-a854-7046547ebcd7"]
}, Open  ]],
Cell[476186, 10047, 142, 2, 34, "Text",ExpressionUUID->"586f2726-2d2b-4c74-b761-a63664e0868b"],
Cell[CellGroupData[{
Cell[476353, 10053, 218, 4, 50, "Code",ExpressionUUID->"3095bba1-89df-4cd7-bce1-36b331431b4a"],
Cell[476574, 10059, 1521, 32, 97, "Output",ExpressionUUID->"ef931c94-8680-4fde-a9af-3088ae15bcb5"]
}, Open  ]],
Cell[478110, 10094, 116, 0, 34, "Text",ExpressionUUID->"cd643406-61b8-43e9-9d5e-d2a0252d13aa"],
Cell[478229, 10096, 100, 0, 34, "Text",ExpressionUUID->"65ba1a24-fbcd-42e9-a9cd-bf9b83d0c080"],
Cell[CellGroupData[{
Cell[478354, 10100, 176, 3, 50, "Code",ExpressionUUID->"c3552983-922d-4fba-bef9-622c6490d388"],
Cell[478533, 10105, 2260, 49, 123, "Output",ExpressionUUID->"0367bfed-97e4-481e-846e-6bc10ff16b82"]
}, Open  ]],
Cell[480808, 10157, 100, 0, 34, "Text",ExpressionUUID->"cdd8f6ff-a394-4170-b86d-e8d3ee865c3e"],
Cell[CellGroupData[{
Cell[480933, 10161, 270, 6, 50, "Code",ExpressionUUID->"195e0e47-8174-4f90-9359-620cbb3ebd20"],
Cell[481206, 10169, 2191, 48, 119, "Output",ExpressionUUID->"0e4a698c-bb09-4401-a2b8-f05b3c887c54"]
}, Open  ]],
Cell[483412, 10220, 130, 0, 34, "Text",ExpressionUUID->"e677df2c-f8f3-4f09-933a-251a752270b0"],
Cell[CellGroupData[{
Cell[483567, 10224, 273, 6, 50, "Code",ExpressionUUID->"a9d746fb-07c1-4a14-8a0e-8564481e7624"],
Cell[483843, 10232, 1048, 20, 71, "Output",ExpressionUUID->"0d35725a-887c-480e-b643-708dca0b7d3c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[484940, 10258, 593, 15, 71, "Chapter",ExpressionUUID->"11300bbb-1b9b-4d8e-a067-8bd063a5a0bd"],
Cell[485536, 10275, 140, 2, 34, "Text",ExpressionUUID->"b929acbe-b29c-411b-b3dd-90e903fbd31b"],
Cell[485679, 10279, 106, 1, 31, "Item",ExpressionUUID->"40c6ac96-7bd5-409a-b623-038efea45a33"],
Cell[485788, 10282, 148, 2, 34, "Text",ExpressionUUID->"02984766-4ac8-4bb6-86df-ad4b5e2c1d73"],
Cell[485939, 10286, 112, 1, 31, "Item",ExpressionUUID->"69ae4876-e0d2-4387-aaca-b20780a38b10"],
Cell[486054, 10289, 124, 0, 34, "Text",ExpressionUUID->"0cb7434a-5239-4f0d-9941-a118ac6cf69d"],
Cell[486181, 10291, 113, 1, 31, "Item",ExpressionUUID->"3b226b0a-4c1f-41e4-82f9-51484d43c932"],
Cell[486297, 10294, 221, 3, 56, "Text",ExpressionUUID->"d0e149a3-d4ac-4223-8ac7-ac28fccc7cb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486555, 10302, 589, 15, 71, "Chapter",ExpressionUUID->"e358bc4c-110a-4c86-9dc5-2492eb218f9d"],
Cell[487147, 10319, 592, 19, 56, "Text",ExpressionUUID->"3790c199-4bd0-41c9-bc8b-923c98736bc6"]
}, Open  ]]
}
]
*)

