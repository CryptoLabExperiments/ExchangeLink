(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    441453,       9515]
NotebookOptionsPosition[    431145,       9342]
NotebookOutlinePosition[    431572,       9359]
CellTagsIndexPosition[    431529,       9356]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 "Binance ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Title",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "9988faf8-60a0-4ded-abac-c17784380a91"]
}], "Title",ExpressionUUID->"9eca8ff7-13d5-40c4-a3cc-a9f5dc8b827e"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "04f78537-9a99-4214-867c-a39fb933a3e4"]
}], "Section",ExpressionUUID->"85dbaebe-6107-4b20-9130-c46c7e50e26e"],

Cell["Initialization cell", "Text",ExpressionUUID->"dbacc3fb-88a9-4e2b-baad-98418b92a2e4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$HistoryLength", " ", "=", " ", "0"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<ExchangeLink`\>\"", "]"}], ";"}]}], "Code",
 CellLabel->"In[1]:=",ExpressionUUID->"cfcbf03f-ee8c-42bc-a3dd-feb3e7685177"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Information ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "d8b0c0c5-edc5-4ba7-8a58-349b915826e7"]
}], "Section",ExpressionUUID->"73d0ce59-6d19-4bb1-9d8e-a6bb73743769"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExchangeLink`Binance`*"}]], "Code",
 CellLabel->"In[3]:=",ExpressionUUID->"ff3e357e-6a4a-49e2-94a3-7d0123522ea2"],

Cell[BoxData[
 StyleBox[
  FrameBox[GridBox[{
     {
      DynamicModuleBox[{Typeset`open$$ = True}, 
       PaneSelectorBox[{False->
        ButtonBox[
         RowBox[{
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEBitmaps", "RightPointerOpener"]], " ", 
          StyleBox["ExchangeLink`Binance`", "InformationGridGroupHeader"]}],
         Appearance->None,
         BaseStyle->"InformationGridLink",
         ButtonFunction:>FEPrivate`Set[Typeset`open$$, True],
         Evaluator->Automatic,
         Method->"Preemptive"], True->
        PaneBox[GridBox[{
           {
            ButtonBox[
             RowBox[{
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], " ", 
              
              StyleBox["ExchangeLink`Binance`", 
               "InformationGridGroupHeader"]}],
             Appearance->None,
             BaseStyle->"InformationGridLink",
             ButtonFunction:>FEPrivate`Set[Typeset`open$$, False],
             Evaluator->Automatic,
             Method->"Preemptive"]},
           {
            PaneBox[GridBox[{
               {
                ButtonBox[
                 StyleBox["BinanceAccountInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceAccountInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceHistoricalTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceHistoricalTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrdersNow", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOCOrdersNow", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinancePing", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinancePing", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceAggTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceAggTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceKlines", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceKlines", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderCancel", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOrderCancel", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinancePrice", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinancePrice", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceAveragePrice", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceAveragePrice", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceMyTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceMyTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderCreate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOrderCreate", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceSell", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceSell", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceBookTicker", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceBookTicker", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderCancel", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOCOrderCancel", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderGet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOrderGet", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTicker", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceTicker", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceBuy", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceBuy", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderCreate", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOCOrderCreate", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrdersAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOrdersAll", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTime", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceTime", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceDepth", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceDepth", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrderGet", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOCOrderGet", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrdersNow", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOrdersNow", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceTrades", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceTrades", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]},
               {
                ButtonBox[
                 StyleBox["BinanceExchangeInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceExchangeInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOCOrdersAll", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOCOrdersAll", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["BinanceOrderTest", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "BinanceOrderTest", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic], 
                ButtonBox[
                 StyleBox["$BinanceExchangeInfo", "InformationGridButton"],
                 Appearance->None,
                 BaseStyle->"InformationGridLink",
                 
                 ButtonData:>{
                  "Info-5a540766-b0bf-4998-bd9d-bf35a3318b8a", {
                   "$BinanceExchangeInfo", "ExchangeLink`Binance`"}, False},
                 ButtonNote->"ExchangeLink`Binance`",
                 Evaluator->Automatic]}
              },
              DefaultBaseStyle->"Text",
              
              GridBoxAlignment->{
               "Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
              GridBoxItemSize->{"Columns" -> {{
                   Scaled[0.2375]}}}],
             ImageMargins->{{10, 0}, {0, 2}}]}
          },
          GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}],
         FrameMargins->{{0, 0}, {8, 0}}]}, Dynamic[Typeset`open$$],
        ImageSize->Automatic]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{"ColumnsIndexed" -> {{False}}, "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.8]}, 
        Offset[0.2]}}],
   BaseStyle->"InformationTitleFrame"], "InformationGridPlain"]], "Output",
 CellLabel->"Out[3]=",ExpressionUUID->"33d5d9fb-4025-4366-8971-f9b1466faaa9"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "General data ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "3fdb2353-c552-4e18-90d9-936d54c08339"]
}], "Section",ExpressionUUID->"19d08895-99cf-44a8-be98-356a0246821d"],

Cell["General information from Binance server", "Text",ExpressionUUID->"da47335a-6c7f-411a-8322-15afd7b2f9e6"],

Cell["\<\
Check that server is available and get server time. This need if you want use \
trade API. Server time used in the creating of e-sign.\
\>", "Text",ExpressionUUID->"aed67ffc-dfa0-4820-a0b2-6b31a983f72f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BinancePing", "[", "]"}], "\n", 
 RowBox[{"BinanceTime", "[", "]"}]}], "Code",
 CellLabel->"In[4]:=",ExpressionUUID->"e18d0e66-fca2-4120-8dfd-c53971823316"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[4]=",ExpressionUUID->"08a17aa0-0076-485e-8417-5a3c06543390"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{"\<\"serverTime\"\>", "\[Rule]", 
   TemplateBox[{
     RowBox[{"\"Fri 17 Apr 2020 07:32:19\"", 
       StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
     RowBox[{"DateObject", "[", 
       RowBox[{
         RowBox[{"{", 
           
           RowBox[{"2020", ",", "4", ",", "17", ",", "7", ",", "32", ",", 
             "19.461999893188477`"}], "}"}], ",", "\"Instant\"", ",", 
         "\"Gregorian\"", ",", "0.`"}], "]"}]},
    "DateObject",
    Editable->False]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[5]=",ExpressionUUID->"77bed437-ef78-4248-968e-9b5cf1d63431"]
}, Open  ]],

Cell["\<\
Information about order limits, precision. List of all pairs available on \
Binance and current statuses\
\>", "Text",ExpressionUUID->"257132ec-378a-4fcf-ba61-7ff6f5c66466"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceExchangeInfo", "[", "]"}]], "Code",
 CellLabel->"In[6]:=",ExpressionUUID->"d5560724-e0ea-4935-86c3-5baaf73145fe"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"timezone\"\>", "\[Rule]", "\<\"UTC\"\>"}], ",", 
           TemplateBox[{"3"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\<\"symbols\"\>", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[LeftAssociation]", 
               RowBox[{
                RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"ETHBTC\"\>"}], ",", 
                RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"TRADING\"\>"}], ",", 
                RowBox[{"\<\"baseAsset\"\>", "\[Rule]", "\<\"ETH\"\>"}], ",", 
                TemplateBox[{"9"},
                 "OutputSizeLimit`Skeleton"], ",", 
                RowBox[{
                 RowBox[{"\<\"i\"\>", "\[Ellipsis]", "\<\"ed\"\>"}], 
                 "\[Rule]", "True"}], ",", 
                RowBox[{"\<\"isMarginTradingAllowed\"\>", "\[Rule]", "True"}],
                 ",", 
                RowBox[{"\<\"filters\"\>", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"PRICE_FILTER\"\>"}], ",", 
                    RowBox[{"\<\"minPrice\"\>", "\[Rule]", "1.`*^-6"}], ",", 
                    RowBox[{"\<\"maxPrice\"\>", "\[Rule]", "100000.`"}], ",", 
                    RowBox[{"\<\"tickSize\"\>", "\[Rule]", "1.`*^-6"}]}], 
                    "\[RightAssociation]"}], ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"PERCENT_PRICE\"\>"}], ",", 
                    RowBox[{"\<\"multiplierUp\"\>", "\[Rule]", "5"}], ",", 
                    RowBox[{"\<\"multiplierDown\"\>", "\[Rule]", "0.2`"}], 
                    ",", 
                    RowBox[{"\<\"avgPriceMins\"\>", "\[Rule]", "5"}]}], 
                    "\[RightAssociation]"}], ",", 
                   TemplateBox[{"4"},
                    "OutputSizeLimit`Skeleton"], ",", 
                   RowBox[{"\[LeftAssociation]", 
                    RowBox[{
                    
                    RowBox[{"\<\"filterType\"\>", 
                    "\[Rule]", "\<\"MAX_NUM_ALGO_ORDERS\"\>"}], ",", 
                    RowBox[{"\<\"maxNumAlgoOrders\"\>", "\[Rule]", "5"}]}], 
                    "\[RightAssociation]"}]}], "}"}]}]}], 
               "\[RightAssociation]"}], ",", 
              TemplateBox[{"788"},
               "OutputSizeLimit`Skeleton"], ",", 
              RowBox[{"\[LeftAssociation]", 
               TemplateBox[{"1"},
                "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], 
             "}"}]}]}], "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 23044328995006451657, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 23044328995006451657, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 6, 23044328995006451657, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23044328995006451657 === $SessionID, 
   Out[6], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[6]=",ExpressionUUID->"0a772b2e-b915-456b-ab5b-999c23ebb6fc"]
}, Open  ]],

Cell["ExchangeInfo cache ", "Text",ExpressionUUID->"1062b093-279e-45f7-ae63-a53ffcdd8aae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", " ", "@", " ", "\n", 
  RowBox[{
   RowBox[{"Query", "[", 
    RowBox[{"All", ",", " ", 
     RowBox[{"<|", "\n", "\t", 
      RowBox[{
       RowBox[{"\"\<symbol\>\"", " ", "->", " ", "\"\<symbol\>\""}], ",", " ",
        "\n", "\t", 
       RowBox[{"\"\<minPrice\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "1", " ", "/*", " ", "2"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<maxPrice\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "1", " ", "/*", " ", "3"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<tickSize\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "1", " ", "/*", " ", "4"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<minQty\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "3", " ", "/*", " ", "2"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<maxQty\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "3", " ", "/*", " ", "3"}]}], ",", 
       " ", "\n", "\t", 
       RowBox[{"\"\<stepSize\>\"", " ", "->", " ", 
        RowBox[{
        "\"\<filters\>\"", " ", "/*", " ", "3", " ", "/*", " ", "4"}]}]}], 
      "|>"}]}], "]"}], " ", "@", " ", "\n", 
   RowBox[{"$BinanceExchangeInfo", "[", "\"\<symbols\>\"", "]"}]}]}]], "Code",
 CellLabel->"In[7]:=",ExpressionUUID->"8d54f4e8-7193-4f5c-a896-c3c41726d23b"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
    Association["InitialData" -> {
       Association[
       "symbol" -> "ETHBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 100000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "LTCBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BNBBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "NEOBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "QTUMETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "EOSETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SNTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BNTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BCCBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 100000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "GASBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BNBETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BTCUSDT", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHUSDT", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 9000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "HSRBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 1.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "OAXETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DNTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MCOETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ICNETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MCOBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WTCBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WTCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LRCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LRCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QTUMBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "YOYOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "OMGBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "OMGETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ZRXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZRXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STRATBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STRATETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SNGLSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SNGLSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BQXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BQXETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KNCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KNCETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FUNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FUNETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SNMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SNMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NEOETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "IOTABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "IOTAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LINKBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LINKETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XVGBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XVGETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SALTBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SALTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "MDABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MDAETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MTLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MTLETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SUBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SUBETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "EOSBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ETCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ETCBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "MTHBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MTHETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ENGBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ENGETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZECBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ZECETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ASTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ASTETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DASHBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DASHETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "OAXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ICNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTGBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 1.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BTGETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "EVXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "EVXETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "REQBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "REQETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIBETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HSRETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TRXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TRXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POWRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POWRETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARKBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARKETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "YOYOETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XRPBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XRPETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MODBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "MODETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ENJBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ENJETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORJBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORJETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BNBUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "VENBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "YOYOBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POWRBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 900000., 
        "stepSize" -> 0.1], 
       Association[
       "symbol" -> "VENBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VENETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KMDBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "KMDETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NULSBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "RCNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RCNETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RCNBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NULSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NULSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RDNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RDNETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RDNBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XMRBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "XMRETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DLTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WTCBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 900000., 
        "stepSize" -> 0.1], 
       Association[
       "symbol" -> "DLTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DLTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AMBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AMBETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AMBBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCCETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCCUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCCBNB", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BATBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BATETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BATBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BCPTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCPTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCPTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARNETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GVTBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "GVTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "CDTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CDTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GXSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GXSETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NEOUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "NEOBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "POEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POEETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QSPBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QSPETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QSPBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTSBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XZCBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "XZCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "XZCBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LSKBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LSKETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LSKBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TNTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FUELBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FUELETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MANABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MANAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCDETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DGDBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DGDETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "IOTABNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADXETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PPTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PPTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "CMTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CMTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CMTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XLMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XLMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XLMBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CNDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CNDETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CNDBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LENDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LENDETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WABIBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WABIETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WABIBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LTCETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "LTCUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "TNBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TNBETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WAVESBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WAVESETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WAVESBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "GTOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GTOETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GTOBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ICXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ICXETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ICXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "OSTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "OSTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "OSTBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ELFBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ELFETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AIONBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AIONETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "AIONBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NEBLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NEBLETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NEBLBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BRDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BRDETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BRDBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MCOBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EDOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "EDOETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WINGSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WINGSETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NAVBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NAVETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NAVBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LUNBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "LUNETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TRIGBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TRIGETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TRIGBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "APPCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "APPCETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "APPCBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIBEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIBEETH", "minPrice" -> 1.*^-7, "maxPrice" -> 100000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RLCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RLCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "RLCBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "INSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "INSETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "PIVXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PIVXETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "PIVXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 900000., 
        "stepSize" -> 0.1], 
       Association[
       "symbol" -> "IOSTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "IOSTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CHATBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CHATETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STEEMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STEEMETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "STEEMBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NANOBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NANOETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NANOBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "VIABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VIAETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "VIABNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BLZBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BLZETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BLZBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AEETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "AEBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "RPXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RPXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RPXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NCASHBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NCASHETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NCASHBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POABNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZILBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZILETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZILBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONTBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ONTETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ONTBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "STORMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORMBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QTUMBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "QTUMUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "XEMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XEMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XEMBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WANBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WANETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "WANBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "WPRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WPRETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QLCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QLCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SYSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SYSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SYSBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QLCBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GRSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GRSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ADAUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADABNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CLOAKBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "CLOAKETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "GNTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GNTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GNTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 900000., "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LOOMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LOOMETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LOOMBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XRPUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BCNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCNETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCNBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "REPBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "REPETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "REPBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BTCTUSD", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "TUSDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ETHTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "TUSDETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TUSDBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ZENBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ZENETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ZENBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "SKYBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SKYETH", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "SKYBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "EOSBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "CVCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CVCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CVCBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "THETABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "THETAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "THETABNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "XRPBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TUSDUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "IOTAUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XLMUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "IOTXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "IOTXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QKCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "QKCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AGIBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AGIETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "AGIBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NXSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NXSETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NXSBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ENJBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DATABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DATAETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONTUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "TRXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TRXUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ETCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ETCBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ICXUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "SCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SCETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SCBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NPXSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NPXSETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VENUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "KEYBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KEYETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NASBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NASETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "NASBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MFTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MFTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MFTBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DENTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DENTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARDRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARDRETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARDRBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NULSUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "HOTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HOTETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VETBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VETETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VETUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VETBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOCKBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOCKETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POLYBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "POLYBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HCBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "HCETH", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "GOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "GOBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PAXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PAXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "PAXUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "PAXETH", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RVNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RVNBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DCRBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DCRBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "USDCBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MITHBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MITHBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BCHABCBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCHSVBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCHABCUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHSVUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCPAX", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XLMPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "RENBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RENBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BNBTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XRPTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XLMTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BNBUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCUSDC", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XLMUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "USDCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ADATUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TRXTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NEOTUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "TRXXRP", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XZCXRP", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "PAXTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDCTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDCPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LINKUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LINKTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LINKPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LINKUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WAVESUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WAVESTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WAVESPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WAVESUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BCHABCTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHABCPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHABCUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHSVTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHSVPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHSVUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "TRXPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TRXUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTTBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTTUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BNBUSDS", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCUSDS", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "USDSUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTTPAX", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTTTUSD", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BTTUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONGBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ONGBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONGUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "HOTBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HOTUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ZILUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ZRXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ZRXUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "FETBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FETBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FETUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BATUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XMRBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "XMRUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ZECUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "IOSTBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "IOSTUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CELRBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CELRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CELRUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADAPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADAUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NEOPAX", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "NEOUSDC", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DASHBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DASHUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "NANOUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "OMGBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "OMGUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "THETAUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ENJUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MITHUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "MATICBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MATICBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MATICUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ATOMBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ATOMBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "ATOMUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ATOMUSDC", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ATOMPAX", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ATOMTUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ETCUSDC", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ETCPAX", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "ETCTUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BATUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BATPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BATTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "PHBBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHBBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PHBUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "PHBTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "PHBPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TFUELBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELUSDC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELTUSD", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TFUELPAX", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONEBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONEUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ONETUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ONEPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ONEUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTMBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FTMBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "FTMUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTMTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTMPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTMUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTCBBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCPTTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BCPTPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BCPTUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ALGOBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ALGOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ALGOUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ALGOTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ALGOPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ALGOUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSBUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDSBUSDS", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "GTOUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "GTOPAX", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "GTOTUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "GTOUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ERDBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ERDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ERDUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ERDPAX", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ERDUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEPAX", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOGEUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DUSKBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "DUSKBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DUSKUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "DUSKUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "DUSKPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BGBPUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ANKRBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRTUSD", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRPAX", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ANKRUSDC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ONTPAX", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ONTUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "WINBNB", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WINBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WINUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WINUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COSBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COSUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TUSDBTUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "NPXSUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NPXSUSDC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COCOSBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COCOSBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COCOSUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MTLUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "TOMOBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TOMOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TOMOUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "TOMOUSDC", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "PERLBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PERLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "PERLUSDC", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "PERLUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "DENTUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MFTUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KEYUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STORMUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DOCKUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WANUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "FUNUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CVCUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTTTRX", "minPrice" -> 0.00001, "maxPrice" -> 100000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^7, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "WINTRX", "minPrice" -> 0.00001, "maxPrice" -> 100000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^7, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "CHZBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CHZBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CHZUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BANDBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BANDBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BANDUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BNBBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCBUSD", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BUSDUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BEAMBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BEAMBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BEAMUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XTZBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XTZBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "XTZUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "RENUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "RVNUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "HCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "HBARBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HBARBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "HBARUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NKNBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NKNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "NKNUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XRPBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ETHBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHABCBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LTCBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "LINKBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ETCBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "STXBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "STXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STXUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "KAVABNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "KAVABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "KAVAUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BUSDNGN", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.01, "maxQty" -> 100000., "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BNBNGN", "minPrice" -> 1., "maxPrice" -> 1.*^6, 
        "tickSize" -> 1., "minQty" -> 0.001, "maxQty" -> 100000., "stepSize" -> 
        0.001], 
       Association[
       "symbol" -> "BTCNGN", "minPrice" -> 1., "maxPrice" -> 1.*^8, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ARPABNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARPABTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "ARPAUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "TRXBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EOSBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "IOTXUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "RLCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "MCOUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "XLMBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ADABUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "CTXCBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CTXCBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "CTXCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BCHBNB", "minPrice" -> 0.001, "maxPrice" -> 1000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCHBTC", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 0.001, "maxQty" -> 1.*^7, 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BCHUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHUSDC", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHTUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHPAX", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BCHBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BTCRUB", "minPrice" -> 1., "maxPrice" -> 1.*^8, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHRUB", "minPrice" -> 0.1, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.1, "minQty" -> 0.00001, "maxQty" -> 100000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPRUB", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BNBRUB", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.01, "maxQty" -> 100000., "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "TROYBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TROYBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TROYUSDT", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BUSDRUB", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "QTUMBUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "VETBUSD", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VITEBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VITEBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "VITEUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "FTTBNB", "minPrice" -> 0.0001, "maxPrice" -> 10000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 9.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "FTTBTC", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 0.01, "maxQty" -> 9.*^7, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "FTTUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "BTCTRY", "minPrice" -> 1., "maxPrice" -> 1.*^7, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BNBTRY", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.01, "maxQty" -> 100000., "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BUSDTRY", "minPrice" -> 0.001, "maxPrice" -> 100000., 
        "tickSize" -> 0.001, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ETHTRY", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 100000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPTRY", "minPrice" -> 0.001, "maxPrice" -> 100000., 
        "tickSize" -> 0.001, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDTTRY", "minPrice" -> 0.001, "maxPrice" -> 100000., 
        "tickSize" -> 0.001, "minQty" -> 0.01, "maxQty" -> 100000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "USDTRUB", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTCEUR", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHEUR", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBEUR", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XRPEUR", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "EURBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "EURUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "OGNBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "OGNBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "OGNUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "DREPBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DREPBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "DREPUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "BULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ETHBULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHBULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.01, "minQty" -> 1.*^-6, "maxQty" -> 9000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHBEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ETHBEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "TCTBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TCTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TCTUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WRXBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WRXBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "WRXUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ICXBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTSUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTSBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "LSKUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BNTUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BNTBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "LTOBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LTOBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "LTOUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ATOMBUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "DASHBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "NEOBUSD", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "WAVESBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XTZBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "EOSBULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "EOSBULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "EOSBEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "EOSBEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPBULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPBULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPBEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "XRPBEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BATBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ENJBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "NANOBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "ONTBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "RVNBUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "STRATBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "STRATBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "STRATUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "AIONBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "AIONUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "MBLBNB", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MBLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "MBLUSDT", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COTIBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COTIBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "COTIUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "ALGOBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTTBUSD", "minPrice" -> 1.*^-7, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-7, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "TOMOBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "XMRBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "ZECBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBBULLUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBBULLBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBBEARUSDT", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBBEARBUSD", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.00001, "maxQty" -> 900000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "STPTBNB", "minPrice" -> 1.*^-6, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-6, "minQty" -> 1., "maxQty" -> 9.*^6, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STPTBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "STPTUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTCZAR", "minPrice" -> 1., "maxPrice" -> 1.*^8, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHZAR", "minPrice" -> 0.1, "maxPrice" -> 1.*^6, 
        "tickSize" -> 0.1, "minQty" -> 0.00001, "maxQty" -> 100000., 
        "stepSize" -> 0.00001], 
       Association[
       "symbol" -> "BNBZAR", "minPrice" -> 0.01, "maxPrice" -> 100000., 
        "tickSize" -> 0.01, "minQty" -> 0.01, "maxQty" -> 100000., "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "USDTZAR", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BUSDZAR", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.1, "maxQty" -> 100000., "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "BTCBKRW", "minPrice" -> 1., "maxPrice" -> 7.*^8, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "ETHBKRW", "minPrice" -> 1., "maxPrice" -> 1.*^7, 
        "tickSize" -> 1., "minQty" -> 0.00001, "maxQty" -> 8000., "stepSize" -> 
        0.00001], 
       Association[
       "symbol" -> "BNBBKRW", "minPrice" -> 1., "maxPrice" -> 5.*^6, 
        "tickSize" -> 1., "minQty" -> 0.001, "maxQty" -> 10000., "stepSize" -> 
        0.001], 
       Association[
       "symbol" -> "WTCUSDT", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "DATABUSD", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "DATAUSDT", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "XZCUSDT", "minPrice" -> 0.001, "maxPrice" -> 10000., 
        "tickSize" -> 0.001, "minQty" -> 0.001, "maxQty" -> 900000., 
        "stepSize" -> 0.001], 
       Association[
       "symbol" -> "SOLBNB", "minPrice" -> 0.00001, "maxPrice" -> 1000., 
        "tickSize" -> 0.00001, "minQty" -> 0.1, "maxQty" -> 9.*^6, "stepSize" -> 
        0.1], 
       Association[
       "symbol" -> "SOLBTC", "minPrice" -> 1.*^-8, "maxPrice" -> 1000., 
        "tickSize" -> 1.*^-8, "minQty" -> 1., "maxQty" -> 9.*^7, "stepSize" -> 
        1.], 
       Association[
       "symbol" -> "SOLBUSD", "minPrice" -> 0.0001, "maxPrice" -> 1000., 
        "tickSize" -> 0.0001, "minQty" -> 0.01, "maxQty" -> 900000., 
        "stepSize" -> 0.01], 
       Association[
       "symbol" -> "BTCIDRT", "minPrice" -> 1., "maxPrice" -> 9.*^9, 
        "tickSize" -> 1., "minQty" -> 1.*^-6, "maxQty" -> 100000., "stepSize" -> 
        1.*^-6], 
       Association[
       "symbol" -> "BNBIDRT", "minPrice" -> 1., "maxPrice" -> 5.*^7, 
        "tickSize" -> 1., "minQty" -> 0.001, "maxQty" -> 100000., "stepSize" -> 
        0.001], 
       Association[
       "symbol" -> "USDTIDRT", "minPrice" -> 1., "maxPrice" -> 1.*^6, 
        "tickSize" -> 1., "minQty" -> 0.01, "maxQty" -> 1.*^6, "stepSize" -> 
        0.01], 
       Association[
       "symbol" -> "BUSDIDRT", "minPrice" -> 1., "maxPrice" -> 1.*^6, 
        "tickSize" -> 1., "minQty" -> 0.01, "maxQty" -> 1.*^6, "stepSize" -> 
        0.01]}, "InitialShape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "symbol"} -> 1, {All, "minPrice"} -> 
        1, {All, "maxPrice"} -> 1, {All, "tickSize"} -> 1, {All, "minQty"} -> 
        1, {All, "maxQty"} -> 1, {All, "stepSize"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "symbol" -> TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "minPrice" -> TypeSystem`PackageScope`AtomShape[60], "maxPrice" -> 
            TypeSystem`PackageScope`AtomShape[60], "tickSize" -> 
            TypeSystem`PackageScope`AtomShape[60], "minQty" -> 
            TypeSystem`PackageScope`AtomShape[60], "maxQty" -> 
            TypeSystem`PackageScope`AtomShape[60], "stepSize" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 7, {All}]], 20, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "symbol", "minPrice", "maxPrice", "tickSize", "minQty", "maxQty", 
         "stepSize"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 790], "Meta" -> 
     Association["ID" -> 1469077389573], "RowTarget" -> 20, "ColumnTarget" -> 
     10, "Shape" -> TypeSystem`PackageScope`HeaderShape[
       Association[{All, "symbol"} -> 1, {All, "minPrice"} -> 
        1, {All, "maxPrice"} -> 1, {All, "tickSize"} -> 1, {All, "minQty"} -> 
        1, {All, "maxQty"} -> 1, {All, "stepSize"} -> 1], 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          TypeSystem`PackageScope`RowShape[
           Association[
           "symbol" -> TypeSystem`PackageScope`AtomShape[76.80000000000001], 
            "minPrice" -> TypeSystem`PackageScope`AtomShape[60], "maxPrice" -> 
            TypeSystem`PackageScope`AtomShape[60], "tickSize" -> 
            TypeSystem`PackageScope`AtomShape[60], "minQty" -> 
            TypeSystem`PackageScope`AtomShape[60], "maxQty" -> 
            TypeSystem`PackageScope`AtomShape[60], "stepSize" -> 
            TypeSystem`PackageScope`AtomShape[60]]], 
          DirectedInfinity[1], 7, {All}]], 20, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "symbol", "minPrice", "maxPrice", "tickSize", "minQty", "maxQty", 
         "stepSize"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[Real]}], 790], "Path" -> {}, "BaseIndices" -> {}, 
     "DisplayedRowCount" -> 20, "DisplayedColumnCount" -> 7, "DataRowCount" -> 
     790, "DataColumnCount" -> 7, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["symbol", 
                    Style[
                    "symbol", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "symbol"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "symbol"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["minPrice", 
                    Style[
                    "minPrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "minPrice"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "minPrice"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["maxPrice", 
                    Style[
                    "maxPrice", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "maxPrice"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "maxPrice"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["tickSize", 
                    Style[
                    "tickSize", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "tickSize"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "tickSize"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["minQty", 
                    Style[
                    "minQty", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "minQty"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "minQty"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["maxQty", 
                    Style[
                    "maxQty", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "maxQty"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "maxQty"}, "ColumnHeader", True], "Mouse"], " ", ""}], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Row[{
                Annotation[
                 EventHandler[
                  MouseAppearance[
                   Mouseover["stepSize", 
                    Style[
                    "stepSize", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "stepSize"}, 1]], 
                 TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                  All, "stepSize"}, "ColumnHeader", True], "Mouse"], " ", 
                ""}], ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["ETHBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["LTCBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNBBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["NEOBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["QTUMETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["EOSETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["SNTETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNTETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BCCBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["GASBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{10, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BNBETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{11, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["BTCUSDT", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{12, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ETHUSDT", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["9000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{13, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["HSRBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["10000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{14, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["OAXETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{15, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["DNTETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.00000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{16, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MCOETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{17, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["ICNETH", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["100000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{18, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["MCOBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{19, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["WTCBTC", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["symbol"]}, "Item", False], "Mouse"], 
              ImageSize -> {{76.80000000000001, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["minPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1000.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["maxPrice"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.0000001"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["tickSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["minQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["90000000."], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["maxQty"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["0.01"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{20, 
                 Key["stepSize"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Deploy[
              Pane[
               Row[{
                 Spacer[2], 
                 Style[
                  Row[{
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[True, 790, 1], {1, 790 - -20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 0, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ - 20 
                    If[False, 790, 1], {1, 790 - -20 + 1}], Appearance -> 
                    None], " ", 
                    Style[
                    Mouseover[
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    790, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 
                    Row[{"rows ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    790, FontColor -> GrayLevel[0], FontWeight -> "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[
                    0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}]], ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 Rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show All", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]}, 
                    "Rows", 100000000, {}]], MenuEvaluator -> Automatic]}], 
                    " ", 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}]}, {5, 6.5}], 180 Degree, {
                    9, 9}]}, ImageSize -> (1 -> 1), 
                    ImagePadding -> {{0, 1}, {1, 0}}, BaselinePosition -> 
                    Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[False, 790, 1], {1, 790 - 20 + 1}], Appearance -> 
                    None], 
                    Button[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{{
                    EdgeForm[None], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.5372549019607843, 0.5372549019607843, 
                    0.5372549019607843], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]], 
                    Graphics[{{
                    EdgeForm[
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549]], 
                    FaceForm[None], 
                    Rectangle[{0, 0}, {18, 18}, RoundingRadius -> 2]}, 
                    Rotate[
                    Translate[{
                    CapForm[Round], 
                    RGBColor[
                    0.27450980392156865`, 0.5411764705882353, 
                    0.796078431372549], 
                    Line[{{0, 0}, {4, 5}, {8, 0}}], 
                    Line[{{0, 5}, {8, 5}}]}, {5, 6.5}], 180 Degree, {9, 9}]}, 
                    ImageSize -> (1 -> 1), ImagePadding -> {{0, 1}, {1, 0}}, 
                    BaselinePosition -> Scaled[0.35]]], "LinkHand"], 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$vPos$$ + 
                    20 If[True, 790, 1], {1, 790 - 20 + 1}], Appearance -> 
                    None]}], ContextMenu -> {}], 
                 Graphics[{
                   RGBColor[
                   0.8196078431372549, 0.8196078431372549, 
                    0.8196078431372549], 
                   Line[{{0, 0}, {0, 19}}]}, ImageSize -> (1 -> 1), 
                  ImagePadding -> {{0, 0}, {0, 0}}, BaselinePosition -> 
                  Scaled[0.35]]}], ImageMargins -> {{0, -1}, {-1, 1}}]], 
             Background -> 
             RGBColor[
              0.9764705882352941, 0.9764705882352941, 0.9764705882352941], 
             Alignment -> {Left, Top}], SpanFromLeft, SpanFromLeft, 
            SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Show ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    StringJoin["Hide ", 
                    Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    ToString[
                    ReplaceAll[
                    Last[TypeSystem`NestedGrid`PackagePrivate`lastPath$], Key[
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`x, 
                    Blank[]]] :> TypeSystem`NestedGrid`PackagePrivate`x]], 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""]], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}]]]]], FontFamily -> 
            "Verdana", FontSize -> 12}, Spacings -> {0, 0}, Alignment -> Left,
           Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
          BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
         LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> False, 
         ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         If[GeneralUtilities`$DebugMode, 
          Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, "  ", 
            TypeSystem`NestedGrid`PackagePrivate`formatState[
            TypeSystem`NestedGrid`PackagePrivate`$state$$, 
             TypeSystem`NestedGrid`PackagePrivate`$path$$, 
             TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
             TypeSystem`NestedGrid`PackagePrivate`$hPos$$]}], 
          TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       1, "Path" -> TypeSystem`NestedGrid`PackagePrivate`$path$$, "Grid" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        TypeSystem`NestedGrid`PackagePrivate`$state$$, "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$, "BottomBar" -> 
        TypeSystem`NestedGrid`PackagePrivate`releaseLocalHold[
         TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]], StandardForm],
      ImageSizeCache->{576., {267., 273.}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{576., {267., 273.}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>
     Block[{$ContextPath = $ContextPath}, Needs["TypeSystem`"]; 
      Needs["Dataset`"]; 
      TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = CreateUUID[]],
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[7]=",ExpressionUUID->"62bc4bdd-f849-4029-9271-964adbbcd7c1"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Market data ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "dd584cf2-6bad-4b1e-9446-da3ddbe62f11"]
}], "Section",ExpressionUUID->"7de50ca5-b424-4d16-9c24-084e2a93fb72"],

Cell["Current order book", "Text",ExpressionUUID->"a311d586-9708-4079-a6c4-0776847830b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"depth", " ", "=", " ", 
   RowBox[{"BinanceDepth", "[", "\"\<BTCUSDT\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"bids", " ", "=", " ", 
    RowBox[{"depth", "[", "\"\<bids\>\"", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"asks", " ", "=", " ", 
    RowBox[{"depth", "[", "\"\<asks\>\"", "]"}]}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"min", " ", "=", " ", 
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"bids", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "~", " ", "Join", 
      " ", "~", " ", 
      RowBox[{"asks", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], "]"}]}], ";"}], 
  " "}], "\n", 
 RowBox[{
  RowBox[{"bidNormalizaer", " ", "=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"bids", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "/", " ", "min"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"askNormalizaer", " ", "=", " ", 
   RowBox[{"Round", "[", 
    RowBox[{
     RowBox[{"asks", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", " ", "2"}], "]"}], "]"}], " ", "/", " ", "min"}], 
    "]"}]}], ";"}]}], "Code",
 CellLabel->"In[8]:=",ExpressionUUID->"23cc675d-b614-432d-94c6-2e02b45b7756"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PairedHistogram", "[", "\n", "\t", 
  RowBox[{
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"bids", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{"bidNormalizaer", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"Length", "@", "bidNormalizaer"}]}], "}"}]}], "]"}], "]"}], 
   ",", " ", "\n", "\t", 
   RowBox[{"Flatten", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"asks", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
        RowBox[{"askNormalizaer", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", "1", ",", " ", 
        RowBox[{"Length", "@", "askNormalizaer"}]}], "}"}]}], "]"}], "]"}], 
   ",", " ", "\n", "\t", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"Frame", " ", "->", " ", "True"}], ",", " ", "\n", "\t", 
   RowBox[{"ChartLabels", " ", "->", " ", 
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<BIDS\>\"", ",", " ", "\"\<ASKS\>\""}], "}"}], ",", " ", 
        "Above"}], "]"}], ",", "\n", "\t\t", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<r1\>\"", ",", " ", "\"\<r2\>\""}], "}"}], ",", " ", 
        "Tooltip"}], "]"}]}], "\n", "\t", "}"}]}], ",", " ", "\n", "\t", 
   RowBox[{"LabelingFunction", " ", "->", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"!", 
         RowBox[{"(", 
          RowBox[{"#1", " ", "==", " ", "0"}], ")"}]}], ",", " ", 
        RowBox[{"Placed", "[", 
         RowBox[{
          RowBox[{"#1", "*", "min"}], ",", " ", "Center"}], "]"}], ",", " ", 
        "None"}], "]"}], "&"}], ")"}]}], ",", " ", "\n", "\t", 
   RowBox[{"FrameTicks", " ", "->", " ", 
    RowBox[{"{", 
     RowBox[{"None", ",", " ", "Automatic"}], "}"}]}]}], "\n", "]"}]], "Code",
 CellLabel->"In[14]:=",ExpressionUUID->"36b69576-c104-483d-ba11-4cbfc622bd0d"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.5319999999999999], Thickness[Small]}], {
     TagBox[
      TooltipBox[{{}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5319999999999999], Thickness[Small]}], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-605812.75, 7048.}], 
             Offset[{0, 0}, {-440992.75, 7049.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{258.2493344893476, 269.73976635241013`}, {
            138.9897641178395, 152.05060262781626`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-445992.75, 7049.}], 
             Offset[{0, 0}, {-440992.75, 7050.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{268.9063592457768, 269.73976635241013`}, {
            126.42892560786277`, 139.4897641178395}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-2.54208375*^6, 7050.}], 
             Offset[{0, 0}, {-440992.75, 7051.}], "RoundingRadius" -> 0]},
           ImageSizeCache->{{129.1360321357256, 269.73976635241013`}, {
            113.86808709788602`, 126.92892560786277`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-512617.75, 7051.}], 
             Offset[{0, 0}, {-440992.75, 7052.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{264.4637095498871, 269.73976635241013`}, {
            101.30724858792382`, 114.36808709788602`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-2.22932075*^6, 7052.}], 
             Offset[{0, 0}, {-440992.75, 7053.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{149.9915135141204, 269.73976635241013`}, {
            88.74641007794708, 101.80724858792382`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-538859.75, 7053.}], 
             Offset[{0, 0}, {-440992.75, 7054.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{262.71385569143246`, 269.73976635241013`}, {
            76.18557156797033, 89.24641007794708}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-819420.75, 7054.}], 
             Offset[{0, 0}, {-440992.75, 7055.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{244.00564944259924`, 269.73976635241013`}, {
            63.62473305799358, 76.68557156797033}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1.82979875*^6, 7055.}], 
             Offset[{0, 0}, {-440992.75, 7056.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{176.6322083253962, 269.73976635241013`}, {
            51.06389454801683, 64.12473305799358}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-3.91332075*^6, 7056.}], 
             Offset[{0, 0}, {-440992.75, 7057.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{37.69999999999999, 269.73976635241013`}, {
            38.503056038040086`, 51.56389454801683}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1.53474275*^6, 7057.}], 
             Offset[{0, 0}, {-440992.75, 7058.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{196.30696177635957`, 269.73976635241013`}, {
            25.94221752807789, 39.003056038040086`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-568685.75, 7058.}], 
             Offset[{0, 0}, {-440992.75, 7059.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{260.7250156189431, 269.73976635241013`}, {
            13.381379018101143`, 26.44221752807789}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1.87223275*^6, 7059.}], 
             Offset[{0, 0}, {-440992.75, 7060.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{173.80264889282006`, 269.73976635241013`}, {
            0.8205405081243953, 13.881379018101143`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-1.07060275*^6, 7060.}], 
             Offset[{0, 0}, {-440992.75, 7061.}], "RoundingRadius" -> 0]},
           ImageSizeCache->{{227.2564766709224, 
            269.73976635241013`}, {-11.740298001852352`, 
            1.3205405081243953`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-813537.75, 7061.}], 
             Offset[{0, 0}, {-440992.75, 7062.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{244.3979362442641, 
            269.73976635241013`}, {-24.3011365118291, -11.240298001852352`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {-674260.75, 7062.}], 
             Offset[{0, 0}, {-440992.75, 7063.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{253.68512456237937`, 
            269.73976635241013`}, {-36.86197502180585, -23.8011365118291}}],
          "DelayedMouseEffectStyle"]}, {}, {}},
       StyleBox["\"r1\"", {}, StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style["r1", {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[{{}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5319999999999999], Thickness[Small]}], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {2.46857975*^6, 7063.}], 
             Offset[{0, 0}, {440992.75, 7064.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{328.0518130819281, 
            463.7541961054167}, {-49.422813531782595`, -36.36197502180585}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {917084.75, 7064.}], 
             Offset[{0, 0}, {440992.75, 7065.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{328.0518130819281, 
            360.29830432418737`}, {-61.98365204174479, -48.922813531782595`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {1.56097175*^6, 7065.}], 
             Offset[{0, 0}, {440992.75, 7066.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{328.0518130819281, 
            403.23360465795605`}, {-74.54449055172154, -61.48365204174479}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {2.02271275*^6, 7066.}], 
             Offset[{0, 0}, {440992.75, 7067.}], "RoundingRadius" -> 0]},
           ImageSizeCache->{{328.0518130819281, 
            434.0231508227562}, {-87.10532906169828, -74.04449055172154}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {1.83975475*^6, 7067.}], 
             Offset[{0, 0}, {440992.75, 7068.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{328.0518130819281, 
            421.82325133967043`}, {-99.66616757167503, -86.60532906169828}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {3.96893475*^6, 7068.}], 
             Offset[{0, 0}, {440992.75, 7069.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{328.0518130819281, 
            563.8}, {-112.22700608165178`, -99.16616757167503}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {1.23460375*^6, 7069.}], 
             Offset[{0, 0}, {440992.75, 7070.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{328.0518130819281, 
            381.4709225424118}, {-124.78784459162853`, -111.72700608165178`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {1.42021675*^6, 7070.}], 
             Offset[{0, 0}, {440992.75, 7071.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{328.0518130819281, 
            393.84786119911996`}, {-137.34868310160527`, \
-124.28784459162853`}}],
          "DelayedMouseEffectStyle"], 
         TagBox[
          DynamicBox[{
            FEPrivate`If[
             CurrentValue["MouseOver"], 
             EdgeForm[{
               GrayLevel[0.5], 
               AbsoluteThickness[1.5], 
               Opacity[0.66]}], {}, {}], 
            RectangleBox[
             Offset[{0, 0}, {498632.75, 7071.}], 
             Offset[{0, 0}, {440992.75, 7072.}], "RoundingRadius" -> 0]},
           
           ImageSizeCache->{{328.0518130819281, 
            332.3953302071976}, {-149.90952161156747`, -136.84868310160527`}}],
          "DelayedMouseEffectStyle"]}, {}, {}},
       StyleBox["\"r1\"", {}, StripOnInput -> False],
       TooltipStyle->"TextStyling"],
      Annotation[#, 
       Style["r1", {}], 
       "Tooltip"]& ]}, {}}, {{{{{{{{{}, {{}, 
            InsetBox["0.65928`", {-523402.75, 7048.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.02`", {-443492.75, 7049.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["8.404364`", {-1.49153825*^6, 7050.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.2865`", {-476805.25, 7051.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["7.153312`", {-1.33515675*^6, 7052.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.391468`", {-489926.25, 7053.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["1.513712`", {-630206.75, 7054.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["5.555224`", {-1.13539575*^6, 7055.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["13.889311999999999`", {-2.17715675*^6, 7056.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["4.375`", {-987867.75, 7057.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.510772`", {-504839.25, 7058.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["5.724959999999999`", {-1.15661275*^6, 7059.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["2.51844`", {-755797.75, 7060.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["1.4901799999999998`", {-627265.25, 7061.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.933072`", {-557626.75, 7062.5}, 
             ImageScaled[{0.5, 0.5}]]}}}, {}}, 
        InsetBox["\<\"BIDS\"\>", Offset[{0, 4}, {-2.17715675*^6, 7063.}], 
         ImageScaled[{0.5, 0}]]}, {}}, {{{{{{}, {{}, 
            InsetBox["8.110348`", {1.45478625*^6, 7063.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["1.9043679999999998`", {679038.75, 7064.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["4.479916`", {1.00098225*^6, 7065.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["6.32688`", {1.23185275*^6, 7066.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["5.595047999999999`", {1.14037375*^6, 7067.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["14.111768`", {2.20496375*^6, 7068.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["3.174444`", {837798.25, 7069.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["3.916896`", {930604.75, 7070.5}, 
             ImageScaled[{0.5, 0.5}]]}}, {{}, {{}, 
            InsetBox["0.23056`", {469812.75, 7071.5}, 
             ImageScaled[{0.5, 0.5}]]}}}, {}}, 
        InsetBox["\<\"ASKS\"\>", Offset[{0, 4}, {2.20496375*^6, 7072.}], 
         ImageScaled[{0.5, 0}]]}, {}}}, {}}, {}}, 
   StyleBox[{
     {Opacity[0], 
      PointBox[{{-3.7263887375000003`*^6, 7047.04}, {3.7263887375000003`*^6, 
       7047.04}}]}, {
      StyleBox[
       StyleBox[{
         LineBox[{
          Offset[{0, 0}, {-440992.7499999844, 7046.799999999939}], 
           Offset[{0, 0}, {-440992.7499999844, 7073.199999999973}]}], 
         StyleBox[{{
            LineBox[{{
              Offset[{0, 0}, {-440992.7499999844, 7050.000000000097}], 
               Offset[{4., 0}, {-440992.7499999844, 7050.000000000097}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7055.000000000097}], 
               Offset[{4., 0}, {-440992.7499999844, 7055.000000000097}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7060.000000000097}], 
               Offset[{4., 0}, {-440992.7499999844, 7060.000000000097}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7065.000000000097}], 
               Offset[{4., 0}, {-440992.7499999844, 7065.000000000097}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7070.000000000097}], 
               Offset[{4., 0}, {-440992.7499999844, 7070.000000000097}]}}], 
            LineBox[{{
              Offset[{0, 0}, {-440992.7499999844, 7046.9999999999845`}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 
                7046.9999999999845`}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7048.00000000021}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7048.00000000021}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7048.999999999871}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7048.999999999871}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7050.999999999758}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7050.999999999758}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7051.9999999999845`}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 
                7051.9999999999845`}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7053.00000000021}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7053.00000000021}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7053.999999999872}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7053.999999999872}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7055.999999999758}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7055.999999999758}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7056.9999999999845`}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 
                7056.9999999999845`}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7058.00000000021}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7058.00000000021}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7058.999999999872}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7058.999999999872}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7060.999999999759}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7060.999999999759}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7061.9999999999845`}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 
                7061.9999999999845`}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7063.00000000021}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7063.00000000021}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7063.999999999872}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7063.999999999872}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7065.999999999759}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7065.999999999759}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7066.9999999999845`}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 
                7066.9999999999845`}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7068.00000000021}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7068.00000000021}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7068.999999999872}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7068.999999999872}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7070.999999999759}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7070.999999999759}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7071.9999999999845`}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 
                7071.9999999999845`}]}, {
              Offset[{0, 0}, {-440992.7499999844, 7073.00000000021}], 
               Offset[{2.5, 0.}, {-440992.7499999844, 7073.00000000021}]}}]}, 
           
           StyleBox[{{{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}, "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]},
        Antialiasing->False], "GraphicsAxes",
       StripOnInput->False], 
      StyleBox[
       StyleBox[{
         LineBox[{
          Offset[{0, 0}, {440992.7499999844, 7046.799999999939}], 
           Offset[{0, 0}, {440992.7499999844, 7073.199999999973}]}], 
         StyleBox[{{
            LineBox[{{
              Offset[{0, 0}, {440992.7499999844, 7050.000000000097}], 
               Offset[{-4., 0}, {440992.7499999844, 7050.000000000097}]}, {
              Offset[{0, 0}, {440992.7499999844, 7055.000000000097}], 
               Offset[{-4., 0}, {440992.7499999844, 7055.000000000097}]}, {
              Offset[{0, 0}, {440992.7499999844, 7060.000000000097}], 
               Offset[{-4., 0}, {440992.7499999844, 7060.000000000097}]}, {
              Offset[{0, 0}, {440992.7499999844, 7065.000000000097}], 
               Offset[{-4., 0}, {440992.7499999844, 7065.000000000097}]}, {
              Offset[{0, 0}, {440992.7499999844, 7070.000000000097}], 
               Offset[{-4., 0}, {440992.7499999844, 7070.000000000097}]}}], 
            LineBox[{{
              Offset[{0, 0}, {440992.7499999844, 7046.9999999999845`}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 
                7046.9999999999845`}]}, {
              Offset[{0, 0}, {440992.7499999844, 7048.00000000021}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7048.00000000021}]}, {
              Offset[{0, 0}, {440992.7499999844, 7048.999999999871}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7048.999999999871}]}, {
              Offset[{0, 0}, {440992.7499999844, 7050.999999999758}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7050.999999999758}]}, {
              Offset[{0, 0}, {440992.7499999844, 7051.9999999999845`}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 
                7051.9999999999845`}]}, {
              Offset[{0, 0}, {440992.7499999844, 7053.00000000021}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7053.00000000021}]}, {
              Offset[{0, 0}, {440992.7499999844, 7053.999999999872}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7053.999999999872}]}, {
              Offset[{0, 0}, {440992.7499999844, 7055.999999999758}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7055.999999999758}]}, {
              Offset[{0, 0}, {440992.7499999844, 7056.9999999999845`}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 
                7056.9999999999845`}]}, {
              Offset[{0, 0}, {440992.7499999844, 7058.00000000021}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7058.00000000021}]}, {
              Offset[{0, 0}, {440992.7499999844, 7058.999999999872}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7058.999999999872}]}, {
              Offset[{0, 0}, {440992.7499999844, 7060.999999999759}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7060.999999999759}]}, {
              Offset[{0, 0}, {440992.7499999844, 7061.9999999999845`}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 
                7061.9999999999845`}]}, {
              Offset[{0, 0}, {440992.7499999844, 7063.00000000021}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7063.00000000021}]}, {
              Offset[{0, 0}, {440992.7499999844, 7063.999999999872}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7063.999999999872}]}, {
              Offset[{0, 0}, {440992.7499999844, 7065.999999999759}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7065.999999999759}]}, {
              Offset[{0, 0}, {440992.7499999844, 7066.9999999999845`}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 
                7066.9999999999845`}]}, {
              Offset[{0, 0}, {440992.7499999844, 7068.00000000021}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7068.00000000021}]}, {
              Offset[{0, 0}, {440992.7499999844, 7068.999999999872}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7068.999999999872}]}, {
              Offset[{0, 0}, {440992.7499999844, 7070.999999999759}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7070.999999999759}]}, {
              Offset[{0, 0}, {440992.7499999844, 7071.9999999999845`}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 
                7071.9999999999845`}]}, {
              Offset[{0, 0}, {440992.7499999844, 7073.00000000021}], 
               Offset[{-2.5, 0.}, {440992.7499999844, 7073.00000000021}]}}]}, 
           
           StyleBox[{{{{}, {}, {}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}}}, {}}, "GraphicsLabel",
            StripOnInput->False]}, "GraphicsTicks",
          StripOnInput->False]},
        Antialiasing->False], "GraphicsAxes",
       StripOnInput->False], {
       StyleBox[InsetBox[
         PaneBox["7050"], {0, 7050.000000000097}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["7055"], {0, 7055.000000000097}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["7060"], {0, 7060.000000000097}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["7065"], {0, 7065.000000000097}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False], 
       StyleBox[InsetBox[
         PaneBox["7070"], {0, 7070.000000000097}, 
         ImageScaled[{Rational[1, 2], Rational[1, 2]}]], "GraphicsLabel",
        StripOnInput->False]}, {}}},
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  Frame->True,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {None, None}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Large,
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {None, 
     Scaled[0.02]}}]], "Output",
 CellLabel->"Out[14]=",ExpressionUUID->"efc3a6d1-98bf-433a-a672-95311f1542a2"]
}, Open  ]],

Cell["Last trades for the pair - order size, time and other", "Text",ExpressionUUID->"47244977-20ba-41e8-8ff1-cbc6c84c91ae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTrades", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[15]:=",ExpressionUUID->"e6ed90fb-8bfc-4b64-819e-90251de0cb1d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"id\"\>", "\[Rule]", "295989015"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "7060.68`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.003977`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "28.08032436`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Fri 17 Apr 2020 07:31:22\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "17", ",", "7", ",", "31", ",", 
                    "22.618000030517578`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyerMaker\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"498"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"id\"\>", "\[Rule]", "295989514"}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "7064.82`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.03`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "211.9446`"}], ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Fri 17 Apr 2020 07:33:03\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
                    "3.3610000610351562`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyerMaker\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 23044328995006451657, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 23044328995006451657, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 15, 23044328995006451657, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23044328995006451657 === $SessionID, 
   Out[15], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[15]=",ExpressionUUID->"b23161b5-d99a-411c-944f-9aff42170447"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Market prices ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "528c79b6-2f27-474b-bf64-26937ed69a6e"]
}], "Section",ExpressionUUID->"5dddb3da-776a-4018-a8c3-0e3342aec9df"],

Cell["Get current price of Bitcoin", "Text",ExpressionUUID->"851ea476-ea07-4edb-878c-c57626c8c10d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinancePrice", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[19]:=",ExpressionUUID->"24b606ad-2a3c-42fc-8a9f-9f70f04ad9c4"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "7061.72`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[19]=",ExpressionUUID->"95593f8c-5b04-44b8-9901-1fe5494cb98d"]
}, Open  ]],

Cell["\<\
More information about cryptocurrency pair. Result has information about 24h \
change, volume and last prices\
\>", "Text",ExpressionUUID->"22a1a003-2215-4c63-8c32-ef270786eba6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTicker", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[20]:=",ExpressionUUID->"b1ff0c1f-2faa-431c-81c8-38196664eb53"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"priceChange\"\>", "\[Rule]", "170.8`"}], ",", 
   RowBox[{"\<\"priceChangePercent\"\>", "\[Rule]", "2.479`"}], ",", 
   RowBox[{"\<\"weightedAvgPrice\"\>", "\[Rule]", "7032.5741783`"}], ",", 
   RowBox[{"\<\"prevClosePrice\"\>", "\[Rule]", "6890.34`"}], ",", 
   RowBox[{"\<\"lastPrice\"\>", "\[Rule]", "7061.33`"}], ",", 
   RowBox[{"\<\"lastQty\"\>", "\[Rule]", "0.00375`"}], ",", 
   RowBox[{"\<\"bidPrice\"\>", "\[Rule]", "7060.72`"}], ",", 
   RowBox[{"\<\"bidQty\"\>", "\[Rule]", "0.085049`"}], ",", 
   RowBox[{"\<\"askPrice\"\>", "\[Rule]", "7061.68`"}], ",", 
   RowBox[{"\<\"askQty\"\>", "\[Rule]", "0.143803`"}], ",", 
   RowBox[{"\<\"openPrice\"\>", "\[Rule]", "6890.53`"}], ",", 
   RowBox[{"\<\"highPrice\"\>", "\[Rule]", "7190.`"}], ",", 
   RowBox[{"\<\"lowPrice\"\>", "\[Rule]", "6868.12`"}], ",", 
   RowBox[{"\<\"volume\"\>", "\[Rule]", "100995.487307`"}], ",", 
   RowBox[{"\<\"quoteVolume\"\>", "\[Rule]", "7.102582561595539`*^8"}], ",", 
   RowBox[{"\<\"openTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Thu 16 Apr 2020 07:33:19\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "16", ",", "7", ",", "33", ",", 
              "19.638999938964844`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"closeTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Fri 17 Apr 2020 07:33:19\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
              "19.638999938964844`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"firstId\"\>", "\[Rule]", "295154753"}], ",", 
   RowBox[{"\<\"lastId\"\>", "\[Rule]", "295989627"}], ",", 
   RowBox[{"\<\"count\"\>", "\[Rule]", "834875"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[20]=",ExpressionUUID->"cc6bf3a8-3287-4cba-b281-0b4c93f09448"]
}, Open  ]],

Cell["And for all currency pairs", "Text",ExpressionUUID->"90011771-aa6d-4a51-a03b-2dabfb2af9c0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceTicker", "[", "]"}]], "Code",
 CellLabel->"In[21]:=",ExpressionUUID->"2310e413-cc81-4a60-9de3-b41431513742"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"ETHBTC\"\>"}], ",", 
             RowBox[{"\<\"priceChange\"\>", "\[Rule]", "0.000104`"}], ",", 
             RowBox[{"\<\"priceChangePercent\"\>", "\[Rule]", "0.433`"}], ",", 
             RowBox[{"\<\"weightedAvgPrice\"\>", "\[Rule]", "0.02423702`"}], 
             ",", 
             RowBox[{"\<\"prevClosePrice\"\>", "\[Rule]", "0.024006`"}], ",", 
             RowBox[{"\<\"lastPrice\"\>", "\[Rule]", "0.02411`"}], ",", 
             RowBox[{"\<\"lastQty\"\>", "\[Rule]", "0.503`"}], ",", 
             RowBox[{"\<\"bidPrice\"\>", "\[Rule]", "0.02411`"}], ",", 
             TemplateBox[{"5"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"lowPrice\"\>", "\[Rule]", "0.023712`"}], ",", 
             RowBox[{"\<\"volume\"\>", "\[Rule]", "324490.128`"}], ",", 
             RowBox[{"\<\"quoteVolume\"\>", "\[Rule]", "7864.67419625`"}], 
             ",", 
             RowBox[{"\<\"openTime\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Thu 16 Apr 2020 07:33:19\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "16", ",", "7", ",", "33", ",", 
                    "19.79199981689453`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"closeTime\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Fri 17 Apr 2020 07:33:19\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
                    "19.79199981689453`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"firstId\"\>", "\[Rule]", "172379189"}], ",", 
             RowBox[{"\<\"lastId\"\>", "\[Rule]", "172501522"}], ",", 
             RowBox[{"\<\"count\"\>", "\[Rule]", "122334"}]}], 
            "\[RightAssociation]"}], ",", 
           TemplateBox[{"788"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 23044328995006451657, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 23044328995006451657, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 21, 23044328995006451657, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23044328995006451657 === $SessionID, 
   Out[21], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[21]=",ExpressionUUID->"2f976f2c-002e-4053-95c6-54dd5c2ad2ff"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Chart ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "dddcc390-27d1-41ff-93dc-a56070373690"]
}], "Section",ExpressionUUID->"0aaa0e67-21c7-435f-9947-a7a64ab7ec67"],

Cell["Get historical data from Binance", "Text",ExpressionUUID->"e38b7723-1790-4a6a-bc87-ec50edcb7c7b"],

Cell[CellGroupData[{

Cell["\[OpenCurlyDoubleQuote]BTCUSDT\[CloseCurlyDoubleQuote] - cryptocurrency \
pair", "Item",ExpressionUUID->"992f0dca-f1d2-4496-b20f-7e697dd4752e"],

Cell["\<\
\[OpenCurlyDoubleQuote]15m\[CloseCurlyDoubleQuote] - time interval of the one \
\[OpenCurlyDoubleQuote]candle\[CloseCurlyDoubleQuote]. Available intervals: \
1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 12h, 1d\
\>", "Item",ExpressionUUID->"842bfae4-d1a9-4d3a-a2de-ce36db47c142"],

Cell["\<\
\[OpenCurlyDoubleQuote]limit\[CloseCurlyDoubleQuote] \[Rule] 96 - number of \
candles. Max value is 1000, default - 500\
\>", "Item",ExpressionUUID->"8b749f3d-a648-4dbf-88be-0c14410af40f"]
}, Open  ]],

Cell["Interactive chart with different indicators", "Text",ExpressionUUID->"087a20fa-a7fe-4e97-a4ae-636a966fd567"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InteractiveTradingChart", "[", "\n", "\t", 
  RowBox[{
   RowBox[{
    RowBox[{"Query", "[", 
     RowBox[{"All", ",", " ", 
      RowBox[{"{", 
       RowBox[{"1", ",", " ", 
        RowBox[{"{", 
         RowBox[{
         "2", ",", " ", "3", ",", " ", "4", ",", " ", "5", ",", " ", "6"}], 
         "}"}]}], "}"}]}], "]"}], " ", "@", " ", 
    RowBox[{"BinanceKlines", "[", 
     RowBox[{"\"\<BTCUSDT\>\"", ",", " ", "\"\<15m\>\"", ",", " ", 
      RowBox[{"\"\<limit\>\"", " ", "->", " ", "192"}]}], "]"}]}], ",", " ", 
   "\n", "\t", 
   RowBox[{"ImageSize", " ", "->", " ", "Large"}], ",", " ", 
   RowBox[{"PlotTheme", " ", "->", " ", "\"\<Marketing\>\""}]}], "\n", 
  "]"}]], "Code",
 CellLabel->"In[22]:=",ExpressionUUID->"d6670f0f-137b-4a1f-90ce-c53d978b3165"],

Cell[BoxData[
 DynamicBox[Charting`iInteractiveTradingChart[InteractiveTradingChart, {{
     DateObject[{2020, 4, 15, 7, 45, 0.}, "Instant", "Gregorian", 0.], {
     6877.03, 6897.84, 6858.63, 6862.05, 606.576242}}, {
     DateObject[{2020, 4, 15, 8, 0, 0.}, "Instant", "Gregorian", 0.], {
     6862.06, 6875., 6860.44, 6867.89, 472.356481}}, {
     DateObject[{2020, 4, 15, 8, 15, 0.}, "Instant", "Gregorian", 0.], {
     6867.86, 6880., 6862.49, 6873.5, 330.643222}}, {
     DateObject[{2020, 4, 15, 8, 30, 0.}, "Instant", "Gregorian", 0.], {
     6874.13, 6878.5, 6867.52, 6868.62, 261.840218}}, {
     DateObject[{2020, 4, 15, 8, 45, 0.}, "Instant", "Gregorian", 0.], {
     6868.56, 6870.6, 6831.29, 6849.77, 965.781431}}, {
     DateObject[{2020, 4, 15, 9, 0, 0.}, "Instant", "Gregorian", 0.], {
     6849.79, 6859.93, 6825., 6851.3, 752.57118}}, {
     DateObject[{2020, 4, 15, 9, 15, 0.}, "Instant", "Gregorian", 0.], {
     6851.48, 6859.53, 6838.56, 6839.91, 423.702674}}, {
     DateObject[{2020, 4, 15, 9, 30, 0.}, "Instant", "Gregorian", 0.], {
     6839.83, 6846.41, 6826.16, 6835.21, 558.181135}}, {
     DateObject[{2020, 4, 15, 9, 45, 0.}, "Instant", "Gregorian", 0.], {
     6835.78, 6850., 6833., 6839., 350.151975}}, {
     DateObject[{2020, 4, 15, 10, 0, 0.}, "Instant", "Gregorian", 0.], {
     6838.28, 6859., 6835.35, 6858.11, 483.622771}}, {
     DateObject[{2020, 4, 15, 10, 15, 0.}, "Instant", "Gregorian", 0.], {
     6858.2, 6868.69, 6850., 6861.52, 577.085139}}, {
     DateObject[{2020, 4, 15, 10, 30, 0.}, "Instant", "Gregorian", 0.], {
     6861.7, 6861.7, 6836.78, 6840.43, 680.857356}}, {
     DateObject[{2020, 4, 15, 10, 45, 0.}, "Instant", "Gregorian", 0.], {
     6840.53, 6842.65, 6760., 6785.93, 2870.053856}}, {
     DateObject[{2020, 4, 15, 11, 0, 0.}, "Instant", "Gregorian", 0.], {
     6785.89, 6794.99, 6750., 6787.22, 2009.928727}}, {
     DateObject[{2020, 4, 15, 11, 15, 0.}, "Instant", "Gregorian", 0.], {
     6787.89, 6788.41, 6768.23, 6780.23, 1286.169648}}, {
     DateObject[{2020, 4, 15, 11, 30, 0.}, "Instant", "Gregorian", 0.], {
     6780.18, 6800., 6777.61, 6794.93, 565.89703}}, {
     DateObject[{2020, 4, 15, 11, 45, 0.}, "Instant", "Gregorian", 0.], {
     6794.93, 6796.29, 6771.64, 6783., 616.961894}}, {
     DateObject[{2020, 4, 15, 12, 0, 0.}, "Instant", "Gregorian", 0.], {
     6782.86, 6783.47, 6691.21, 6720.19, 4159.998605}}, {
     DateObject[{2020, 4, 15, 12, 15, 0.}, "Instant", "Gregorian", 0.], {
     6719.56, 6740.44, 6709.18, 6735.05, 1057.429657}}, {
     DateObject[{2020, 4, 15, 12, 30, 0.}, "Instant", "Gregorian", 0.], {
     6735.05, 6744.89, 6694.46, 6711.58, 1436.902369}}, {
     DateObject[{2020, 4, 15, 12, 45, 0.}, "Instant", "Gregorian", 0.], {
     6711.63, 6719.76, 6680.1, 6713.67, 1972.771507}}, {
     DateObject[{2020, 4, 15, 13, 0, 0.}, "Instant", "Gregorian", 0.], {
     6713.67, 6726.55, 6690., 6718.53, 966.437729}}, {
     DateObject[{2020, 4, 15, 13, 15, 0.}, "Instant", "Gregorian", 0.], {
     6718.82, 6744., 6711.83, 6738.41, 780.195204}}, {
     DateObject[{2020, 4, 15, 13, 30, 0.}, "Instant", "Gregorian", 0.], {
     6738.72, 6747.68, 6717., 6718.08, 672.322803}}, {
     DateObject[{2020, 4, 15, 13, 45, 0.}, "Instant", "Gregorian", 0.], {
     6718.02, 6733.94, 6713.27, 6730.47, 585.529554}}, {
     DateObject[{2020, 4, 15, 14, 0, 0.}, "Instant", "Gregorian", 0.], {
     6730.4, 6740.44, 6718.2, 6733.94, 542.620363}}, {
     DateObject[{2020, 4, 15, 14, 15, 0.}, "Instant", "Gregorian", 0.], {
     6733.94, 6742.65, 6726.16, 6739.91, 463.840732}}, {
     DateObject[{2020, 4, 15, 14, 30, 0.}, "Instant", "Gregorian", 0.], {
     6739.95, 6777., 6730., 6734.29, 1525.855932}}, {
     DateObject[{2020, 4, 15, 14, 45, 0.}, "Instant", "Gregorian", 0.], {
     6734.29, 6742.63, 6715.23, 6717.66, 709.598379}}, {
     DateObject[{2020, 4, 15, 15, 0, 0.}, "Instant", "Gregorian", 0.], {
     6717.66, 6731.78, 6705., 6728.69, 872.781652}}, {
     DateObject[{2020, 4, 15, 15, 15, 0.}, "Instant", "Gregorian", 0.], {
     6728.69, 6745.51, 6708.46, 6730.73, 601.811688}}, {
     DateObject[{2020, 4, 15, 15, 30, 0.}, "Instant", "Gregorian", 0.], {
     6729.49, 6734.7, 6706.98, 6720.17, 757.189524}}, {
     DateObject[{2020, 4, 15, 15, 45, 0.}, "Instant", "Gregorian", 0.], {
     6719.64, 6722.16, 6690., 6701.9, 1047.809878}}, {
     DateObject[{2020, 4, 15, 16, 0, 0.}, "Instant", "Gregorian", 0.], {
     6701.9, 6734.95, 6690., 6717.02, 857.359746}}, {
     DateObject[{2020, 4, 15, 16, 15, 0.}, "Instant", "Gregorian", 0.], {
     6717.49, 6742., 6716.41, 6740.81, 573.031631}}, {
     DateObject[{2020, 4, 15, 16, 30, 0.}, "Instant", "Gregorian", 0.], {
     6740.79, 6749.69, 6730., 6742.17, 567.119483}}, {
     DateObject[{2020, 4, 15, 16, 45, 0.}, "Instant", "Gregorian", 0.], {
     6741.73, 6744.91, 6726.82, 6729.58, 514.091173}}, {
     DateObject[{2020, 4, 15, 17, 0, 0.}, "Instant", "Gregorian", 0.], {
     6729.59, 6753.89, 6724.51, 6747.35, 455.996815}}, {
     DateObject[{2020, 4, 15, 17, 15, 0.}, "Instant", "Gregorian", 0.], {
     6747.35, 6749.9, 6737.88, 6743.12, 393.94505}}, {
     DateObject[{2020, 4, 15, 17, 30, 0.}, "Instant", "Gregorian", 0.], {
     6742.31, 6760., 6735., 6753.8, 436.914073}}, {
     DateObject[{2020, 4, 15, 17, 45, 0.}, "Instant", "Gregorian", 0.], {
     6753.8, 6763.13, 6745.23, 6746.86, 373.479592}}, {
     DateObject[{2020, 4, 15, 18, 0, 0.}, "Instant", "Gregorian", 0.], {
     6747.43, 6763.9, 6742.31, 6759.81, 560.857367}}, {
     DateObject[{2020, 4, 15, 18, 15, 0.}, "Instant", "Gregorian", 0.], {
     6759.72, 6771.6, 6754.53, 6769.86, 422.230929}}, {
     DateObject[{2020, 4, 15, 18, 30, 0.}, "Instant", "Gregorian", 0.], {
     6769.89, 6773.89, 6756.21, 6761., 303.091411}}, {
     DateObject[{2020, 4, 15, 18, 45, 0.}, "Instant", "Gregorian", 0.], {
     6761., 6767.45, 6746.43, 6748.23, 308.741554}}, {
     DateObject[{2020, 4, 15, 19, 0, 0.}, "Instant", "Gregorian", 0.], {
     6748.49, 6750., 6725., 6739.54, 509.778766}}, {
     DateObject[{2020, 4, 15, 19, 15, 0.}, "Instant", "Gregorian", 0.], {
     6739.38, 6745.42, 6732.91, 6744.37, 377.478369}}, {
     DateObject[{2020, 4, 15, 19, 30, 0.}, "Instant", "Gregorian", 0.], {
     6744.41, 6748.56, 6732.73, 6742.5, 310.596638}}, {
     DateObject[{2020, 4, 15, 19, 45, 0.}, "Instant", "Gregorian", 0.], {
     6742.17, 6748.92, 6725.25, 6730.01, 279.685506}}, {
     DateObject[{2020, 4, 15, 20, 0, 0.}, "Instant", "Gregorian", 0.], {
     6730.01, 6753., 6715.6, 6747.94, 549.162687}}, {
     DateObject[{2020, 4, 15, 20, 15, 0.}, "Instant", "Gregorian", 0.], {
     6748.89, 6754., 6743.33, 6746.97, 297.545634}}, {
     DateObject[{2020, 4, 15, 20, 30, 0.}, "Instant", "Gregorian", 0.], {
     6747.75, 6752.89, 6739.43, 6748.57, 159.65558}}, {
     DateObject[{2020, 4, 15, 20, 45, 0.}, "Instant", "Gregorian", 0.], {
     6749.03, 6751., 6739.31, 6741.16, 160.248903}}, {
     DateObject[{2020, 4, 15, 21, 0, 0.}, "Instant", "Gregorian", 0.], {
     6741.49, 6761.99, 6741., 6748.21, 328.043472}}, {
     DateObject[{2020, 4, 15, 21, 15, 0.}, "Instant", "Gregorian", 0.], {
     6749.6, 6749.86, 6725.54, 6738., 341.970358}}, {
     DateObject[{2020, 4, 15, 21, 30, 0.}, "Instant", "Gregorian", 0.], {
     6738., 6744.99, 6729.73, 6729.73, 171.01724}}, {
     DateObject[{2020, 4, 15, 21, 45, 0.}, "Instant", "Gregorian", 0.], {
     6729.92, 6737.79, 6719.19, 6727.4, 376.04954}}, {
     DateObject[{2020, 4, 15, 22, 0, 0.}, "Instant", "Gregorian", 0.], {
     6727.41, 6731., 6706.69, 6723.1, 407.02353}}, {
     DateObject[{2020, 4, 15, 22, 15, 0.}, "Instant", "Gregorian", 0.], {
     6723.1, 6725., 6692.1, 6698.26, 860.951857}}, {
     DateObject[{2020, 4, 15, 22, 30, 0.}, "Instant", "Gregorian", 0.], {
     6698.99, 6718.51, 6691.56, 6713.88, 411.569498}}, {
     DateObject[{2020, 4, 15, 22, 45, 0.}, "Instant", "Gregorian", 0.], {
     6715.19, 6721.37, 6702., 6708.96, 286.832056}}, {
     DateObject[{2020, 4, 15, 23, 0, 0.}, "Instant", "Gregorian", 0.], {
     6709.2, 6716.58, 6610.08, 6626.51, 2974.581452}}, {
     DateObject[{2020, 4, 15, 23, 15, 0.}, "Instant", "Gregorian", 0.], {
     6626.27, 6639.26, 6605., 6630., 1080.72539}}, {
     DateObject[{2020, 4, 15, 23, 30, 0.}, "Instant", "Gregorian", 0.], {
     6629.62, 6639.36, 6611.21, 6625.56, 726.543923}}, {
     DateObject[{2020, 4, 15, 23, 45, 0.}, "Instant", "Gregorian", 0.], {
     6624.74, 6640., 6620., 6621.24, 380.788032}}, {
     DateObject[{2020, 4, 16, 0, 0, 0.}, "Instant", "Gregorian", 0.], {
     6621.25, 6621.25, 6520.91, 6553.91, 4061.664855}}, {
     DateObject[{2020, 4, 16, 0, 15, 0.}, "Instant", "Gregorian", 0.], {
     6553.37, 6553.91, 6468.27, 6513.39, 3652.546051}}, {
     DateObject[{2020, 4, 16, 0, 30, 0.}, "Instant", "Gregorian", 0.], {
     6512.88, 6553.12, 6508.23, 6549.99, 1037.814697}}, {
     DateObject[{2020, 4, 16, 0, 45, 0.}, "Instant", "Gregorian", 0.], {
     6549.46, 6589.5, 6540., 6573.15, 1154.587251}}, {
     DateObject[{2020, 4, 16, 1, 0, 0.}, "Instant", "Gregorian", 0.], {
     6573.04, 6575.6, 6545., 6566.24, 739.219402}}, {
     DateObject[{2020, 4, 16, 1, 15, 0.}, "Instant", "Gregorian", 0.], {
     6566.24, 6604.96, 6551., 6591.04, 803.262987}}, {
     DateObject[{2020, 4, 16, 1, 30, 0.}, "Instant", "Gregorian", 0.], {
     6592.06, 6661., 6591., 6632.53, 2148.353412}}, {
     DateObject[{2020, 4, 16, 1, 45, 0.}, "Instant", "Gregorian", 0.], {
     6632.53, 6638.57, 6615., 6622.67, 612.505007}}, {
     DateObject[{2020, 4, 16, 2, 0, 0.}, "Instant", "Gregorian", 0.], {
     6622.93, 6643., 6605.98, 6638.56, 682.376278}}, {
     DateObject[{2020, 4, 16, 2, 15, 0.}, "Instant", "Gregorian", 0.], {
     6638.84, 6646.15, 6618., 6624.28, 638.24736}}, {
     DateObject[{2020, 4, 16, 2, 30, 0.}, "Instant", "Gregorian", 0.], {
     6624.31, 6634.9, 6615., 6622.44, 456.527148}}, {
     DateObject[{2020, 4, 16, 2, 45, 0.}, "Instant", "Gregorian", 0.], {
     6623.33, 6642., 6620.27, 6641.92, 465.711027}}, {
     DateObject[{2020, 4, 16, 3, 0, 0.}, "Instant", "Gregorian", 0.], {
     6641.97, 6644., 6586.73, 6608.43, 887.573212}}, {
     DateObject[{2020, 4, 16, 3, 15, 0.}, "Instant", "Gregorian", 0.], {
     6608.42, 6628.78, 6606.44, 6621.39, 330.903774}}, {
     DateObject[{2020, 4, 16, 3, 30, 0.}, "Instant", "Gregorian", 0.], {
     6621.35, 6640.27, 6618.09, 6632.39, 387.712749}}, {
     DateObject[{2020, 4, 16, 3, 45, 0.}, "Instant", "Gregorian", 0.], {
     6632.43, 6667.94, 6631.89, 6651.87, 626.914447}}, {
     DateObject[{2020, 4, 16, 4, 0, 0.}, "Instant", "Gregorian", 0.], {
     6651.69, 6678.68, 6641.05, 6643.09, 579.094751}}, {
     DateObject[{2020, 4, 16, 4, 15, 0.}, "Instant", "Gregorian", 0.], {
     6643.92, 6650., 6632.66, 6633.89, 453.887431}}, {
     DateObject[{2020, 4, 16, 4, 30, 0.}, "Instant", "Gregorian", 0.], {
     6634.8, 6643.44, 6625.83, 6637.5, 374.021223}}, {
     DateObject[{2020, 4, 16, 4, 45, 0.}, "Instant", "Gregorian", 0.], {
     6638.05, 6643.44, 6621.35, 6622.29, 243.36096}}, {
     DateObject[{2020, 4, 16, 5, 0, 0.}, "Instant", "Gregorian", 0.], {
     6623.56, 6642.97, 6622.27, 6630.75, 358.414366}}, {
     DateObject[{2020, 4, 16, 5, 15, 0.}, "Instant", "Gregorian", 0.], {
     6630.69, 6646.99, 6630.22, 6638.52, 417.509541}}, {
     DateObject[{2020, 4, 16, 5, 30, 0.}, "Instant", "Gregorian", 0.], {
     6638.85, 6651.4, 6631.21, 6639.9, 424.306702}}, {
     DateObject[{2020, 4, 16, 5, 45, 0.}, "Instant", "Gregorian", 0.], {
     6639.9, 6640.7, 6624.1, 6631.85, 377.502462}}, {
     DateObject[{2020, 4, 16, 6, 0, 0.}, "Instant", "Gregorian", 0.], {6632.1,
      6657.23, 6631.41, 6651.14, 541.557561}}, {
     DateObject[{2020, 4, 16, 6, 15, 0.}, "Instant", "Gregorian", 0.], {
     6651.18, 6691.47, 6646.22, 6675., 1224.267302}}, {
     DateObject[{2020, 4, 16, 6, 30, 0.}, "Instant", "Gregorian", 0.], {6675.,
      6694.01, 6666.14, 6677.74, 866.372013}}, {
     DateObject[{2020, 4, 16, 6, 45, 0.}, "Instant", "Gregorian", 0.], {
     6677.74, 6688.66, 6666.66, 6688.66, 450.04295}}, {
     DateObject[{2020, 4, 16, 7, 0, 0.}, "Instant", "Gregorian", 0.], {
     6688.63, 6900., 6686.39, 6872.08, 6918.728849}}, {
     DateObject[{2020, 4, 16, 7, 15, 0.}, "Instant", "Gregorian", 0.], {
     6872.35, 6980., 6861.81, 6918.29, 7972.261282}}, {
     DateObject[{2020, 4, 16, 7, 30, 0.}, "Instant", "Gregorian", 0.], {
     6916.31, 6940., 6883.69, 6912.93, 2760.920756}}, {
     DateObject[{2020, 4, 16, 7, 45, 0.}, "Instant", "Gregorian", 0.], {
     6912.93, 6922.75, 6868.12, 6892.4, 2305.717771}}, {
     DateObject[{2020, 4, 16, 8, 0, 0.}, "Instant", "Gregorian", 0.], {
     6893.24, 6923.52, 6871.13, 6894.03, 1838.070317}}, {
     DateObject[{2020, 4, 16, 8, 15, 0.}, "Instant", "Gregorian", 0.], {
     6893.97, 6969., 6887.37, 6940.01, 2607.98565}}, {
     DateObject[{2020, 4, 16, 8, 30, 0.}, "Instant", "Gregorian", 0.], {6940.,
      7147.28, 6940., 7083.02, 6997.673111}}, {
     DateObject[{2020, 4, 16, 8, 45, 0.}, "Instant", "Gregorian", 0.], {
     7082.96, 7094.8, 7031.24, 7045.27, 2220.834322}}, {
     DateObject[{2020, 4, 16, 9, 0, 0.}, "Instant", "Gregorian", 0.], {7045.3,
      7097., 7044.27, 7059.99, 2002.158963}}, {
     DateObject[{2020, 4, 16, 9, 15, 0.}, "Instant", "Gregorian", 0.], {
     7059.99, 7071.65, 7044.11, 7064.99, 1400.49554}}, {
     DateObject[{2020, 4, 16, 9, 30, 0.}, "Instant", "Gregorian", 0.], {
     7064.99, 7070., 7017., 7034.5, 1231.626321}}, {
     DateObject[{2020, 4, 16, 9, 45, 0.}, "Instant", "Gregorian", 0.], {7035.,
      7045.64, 7017., 7028.05, 934.881634}}, {
     DateObject[{2020, 4, 16, 10, 0, 0.}, "Instant", "Gregorian", 0.], {
     7027.7, 7061.8, 7026.77, 7040.01, 1253.048681}}, {
     DateObject[{2020, 4, 16, 10, 15, 0.}, "Instant", "Gregorian", 0.], {
     7040., 7054.16, 7040., 7043.79, 841.925382}}, {
     DateObject[{2020, 4, 16, 10, 30, 0.}, "Instant", "Gregorian", 0.], {
     7043.79, 7050.1, 6915., 6966., 3513.936201}}, {
     DateObject[{2020, 4, 16, 10, 45, 0.}, "Instant", "Gregorian", 0.], {
     6965.89, 6965.97, 6926.69, 6952.82, 1422.068224}}, {
     DateObject[{2020, 4, 16, 11, 0, 0.}, "Instant", "Gregorian", 0.], {
     6952.81, 6996.34, 6939.01, 6992.13, 889.344255}}, {
     DateObject[{2020, 4, 16, 11, 15, 0.}, "Instant", "Gregorian", 0.], {
     6991.99, 7032.53, 6978.44, 7023.89, 1339.978252}}, {
     DateObject[{2020, 4, 16, 11, 30, 0.}, "Instant", "Gregorian", 0.], {
     7024.72, 7065., 6988.33, 6993.88, 1403.485818}}, {
     DateObject[{2020, 4, 16, 11, 45, 0.}, "Instant", "Gregorian", 0.], {
     6994.54, 7038., 6985.33, 7023.99, 862.62509}}, {
     DateObject[{2020, 4, 16, 12, 0, 0.}, "Instant", "Gregorian", 0.], {
     7023.98, 7053.27, 6930., 6991.44, 2191.586649}}, {
     DateObject[{2020, 4, 16, 12, 15, 0.}, "Instant", "Gregorian", 0.], {
     6991.44, 7013.3, 6976.56, 7002.69, 855.327242}}, {
     DateObject[{2020, 4, 16, 12, 30, 0.}, "Instant", "Gregorian", 0.], {
     7002.56, 7027., 6996., 7004.88, 1076.153927}}, {
     DateObject[{2020, 4, 16, 12, 45, 0.}, "Instant", "Gregorian", 0.], {
     7004.57, 7077., 7001.43, 7057.38, 2098.015527}}, {
     DateObject[{2020, 4, 16, 13, 0, 0.}, "Instant", "Gregorian", 0.], {
     7057.69, 7093., 7026.01, 7036.33, 1950.079584}}, {
     DateObject[{2020, 4, 16, 13, 15, 0.}, "Instant", "Gregorian", 0.], {
     7037.4, 7048.55, 7013.2, 7035.54, 860.815722}}, {
     DateObject[{2020, 4, 16, 13, 30, 0.}, "Instant", "Gregorian", 0.], {
     7036.41, 7054.98, 7003.16, 7021.86, 933.48242}}, {
     DateObject[{2020, 4, 16, 13, 45, 0.}, "Instant", "Gregorian", 0.], {
     7022.67, 7025.73, 6973., 6982.39, 1372.44914}}, {
     DateObject[{2020, 4, 16, 14, 0, 0.}, "Instant", "Gregorian", 0.], {
     6982.02, 7001.88, 6974.99, 6980.41, 1482.739975}}, {
     DateObject[{2020, 4, 16, 14, 15, 0.}, "Instant", "Gregorian", 0.], {
     6980.41, 7013.63, 6980.4, 7004.5, 694.963226}}, {
     DateObject[{2020, 4, 16, 14, 30, 0.}, "Instant", "Gregorian", 0.], {
     7004.5, 7012.15, 6988.31, 7001.14, 636.026988}}, {
     DateObject[{2020, 4, 16, 14, 45, 0.}, "Instant", "Gregorian", 0.], {
     7002.46, 7030., 6992., 7021.97, 714.142762}}, {
     DateObject[{2020, 4, 16, 15, 0, 0.}, "Instant", "Gregorian", 0.], {
     7021.97, 7040., 7013.71, 7034.24, 722.728698}}, {
     DateObject[{2020, 4, 16, 15, 15, 0.}, "Instant", "Gregorian", 0.], {
     7034.24, 7043.76, 7025., 7028.23, 739.088027}}, {
     DateObject[{2020, 4, 16, 15, 30, 0.}, "Instant", "Gregorian", 0.], {
     7027.67, 7053.35, 7000.83, 7043.32, 1234.531155}}, {
     DateObject[{2020, 4, 16, 15, 45, 0.}, "Instant", "Gregorian", 0.], {
     7043.31, 7066., 7014., 7045.51, 1148.184427}}, {
     DateObject[{2020, 4, 16, 16, 0, 0.}, "Instant", "Gregorian", 0.], {
     7046.29, 7064.93, 6970., 7009.51, 1965.336093}}, {
     DateObject[{2020, 4, 16, 16, 15, 0.}, "Instant", "Gregorian", 0.], {
     7009.51, 7013.73, 6980., 6988.94, 751.837317}}, {
     DateObject[{2020, 4, 16, 16, 30, 0.}, "Instant", "Gregorian", 0.], {
     6989.19, 6997., 6952.2, 6993.69, 1307.939968}}, {
     DateObject[{2020, 4, 16, 16, 45, 0.}, "Instant", "Gregorian", 0.], {
     6993.34, 7012.93, 6991., 7004.61, 702.530976}}, {
     DateObject[{2020, 4, 16, 17, 0, 0.}, "Instant", "Gregorian", 0.], {
     7004.61, 7024.13, 6987.15, 7001.42, 726.50129}}, {
     DateObject[{2020, 4, 16, 17, 15, 0.}, "Instant", "Gregorian", 0.], {
     7001.42, 7006.67, 6986.08, 7004.7, 439.078967}}, {
     DateObject[{2020, 4, 16, 17, 30, 0.}, "Instant", "Gregorian", 0.], {
     7004.7, 7018.59, 7002.86, 7016.39, 535.079202}}, {
     DateObject[{2020, 4, 16, 17, 45, 0.}, "Instant", "Gregorian", 0.], {
     7016.39, 7020.52, 6998., 7003.11, 472.515357}}, {
     DateObject[{2020, 4, 16, 18, 0, 0.}, "Instant", "Gregorian", 0.], {
     7003.25, 7010.8, 6996.98, 7002.57, 413.3225}}, {
     DateObject[{2020, 4, 16, 18, 15, 0.}, "Instant", "Gregorian", 0.], {
     7002.71, 7020., 6975., 7013.2, 839.936941}}, {
     DateObject[{2020, 4, 16, 18, 30, 0.}, "Instant", "Gregorian", 0.], {
     7013.61, 7040., 7002.56, 7010.18, 914.267237}}, {
     DateObject[{2020, 4, 16, 18, 45, 0.}, "Instant", "Gregorian", 0.], {
     7010.36, 7018.79, 7000.02, 7009.23, 456.73166}}, {
     DateObject[{2020, 4, 16, 19, 0, 0.}, "Instant", "Gregorian", 0.], {
     7009.96, 7011.97, 6991.76, 7008.07, 353.494959}}, {
     DateObject[{2020, 4, 16, 19, 15, 0.}, "Instant", "Gregorian", 0.], {
     7008.31, 7023.79, 7004.38, 7022.05, 396.724717}}, {
     DateObject[{2020, 4, 16, 19, 30, 0.}, "Instant", "Gregorian", 0.], {
     7022.28, 7038.96, 7015.31, 7035.96, 595.557425}}, {
     DateObject[{2020, 4, 16, 19, 45, 0.}, "Instant", "Gregorian", 0.], {
     7036.44, 7095., 7030.35, 7070.79, 2312.511213}}, {
     DateObject[{2020, 4, 16, 20, 0, 0.}, "Instant", "Gregorian", 0.], {
     7071.01, 7071.03, 6970.03, 7003.3, 2234.136934}}, {
     DateObject[{2020, 4, 16, 20, 15, 0.}, "Instant", "Gregorian", 0.], {
     7002.53, 7017.59, 6987.58, 7010., 473.287106}}, {
     DateObject[{2020, 4, 16, 20, 30, 0.}, "Instant", "Gregorian", 0.], {
     7009.97, 7035., 7009.48, 7022.08, 343.161006}}, {
     DateObject[{2020, 4, 16, 20, 45, 0.}, "Instant", "Gregorian", 0.], {
     7022.61, 7049., 7017.56, 7047.53, 562.955733}}, {
     DateObject[{2020, 4, 16, 21, 0, 0.}, "Instant", "Gregorian", 0.], {
     7047.18, 7052.06, 7029., 7046.89, 411.733677}}, {
     DateObject[{2020, 4, 16, 21, 15, 0.}, "Instant", "Gregorian", 0.], {
     7046.89, 7047.42, 7029.74, 7038.83, 328.580394}}, {
     DateObject[{2020, 4, 16, 21, 30, 0.}, "Instant", "Gregorian", 0.], {
     7038.86, 7074.91, 7033.23, 7065.47, 657.288728}}, {
     DateObject[{2020, 4, 16, 21, 45, 0.}, "Instant", "Gregorian", 0.], {
     7065.54, 7079.89, 7046.46, 7062.97, 785.433615}}, {
     DateObject[{2020, 4, 16, 22, 0, 0.}, "Instant", "Gregorian", 0.], {
     7062.98, 7130., 7062.67, 7086.89, 2541.0958}}, {
     DateObject[{2020, 4, 16, 22, 15, 0.}, "Instant", "Gregorian", 0.], {
     7088.39, 7119., 7061.53, 7072.49, 1077.310101}}, {
     DateObject[{2020, 4, 16, 22, 30, 0.}, "Instant", "Gregorian", 0.], {
     7072.49, 7121., 7070., 7098.06, 871.471641}}, {
     DateObject[{2020, 4, 16, 22, 45, 0.}, "Instant", "Gregorian", 0.], {
     7098.56, 7168.94, 7094.99, 7152.93, 1693.508993}}, {
     DateObject[{2020, 4, 16, 23, 0, 0.}, "Instant", "Gregorian", 0.], {
     7151.06, 7190., 7119.99, 7145.87, 2402.6935}}, {
     DateObject[{2020, 4, 16, 23, 15, 0.}, "Instant", "Gregorian", 0.], {
     7145.13, 7165.62, 7130.01, 7145.69, 836.106655}}, {
     DateObject[{2020, 4, 16, 23, 30, 0.}, "Instant", "Gregorian", 0.], {
     7145.69, 7148.14, 7086.74, 7095.11, 1263.874031}}, {
     DateObject[{2020, 4, 16, 23, 45, 0.}, "Instant", "Gregorian", 0.], {
     7095.11, 7118.36, 7064., 7101.94, 919.514996}}, {
     DateObject[{2020, 4, 17, 0, 0, 0.}, "Instant", "Gregorian", 0.], {
     7101.99, 7138.26, 7015.01, 7062.87, 2254.549265}}, {
     DateObject[{2020, 4, 17, 0, 15, 0.}, "Instant", "Gregorian", 0.], {
     7062.96, 7076.39, 7050.02, 7060.88, 748.964411}}, {
     DateObject[{2020, 4, 17, 0, 30, 0.}, "Instant", "Gregorian", 0.], {
     7060.88, 7090., 7060.87, 7072.89, 584.74479}}, {
     DateObject[{2020, 4, 17, 0, 45, 0.}, "Instant", "Gregorian", 0.], {
     7072.74, 7086., 7058., 7062.16, 491.870423}}, {
     DateObject[{2020, 4, 17, 1, 0, 0.}, "Instant", "Gregorian", 0.], {
     7062.17, 7099.5, 7061.12, 7090.05, 622.520377}}, {
     DateObject[{2020, 4, 17, 1, 15, 0.}, "Instant", "Gregorian", 0.], {
     7090.05, 7123.46, 7080.28, 7115.68, 586.649233}}, {
     DateObject[{2020, 4, 17, 1, 30, 0.}, "Instant", "Gregorian", 0.], {
     7115.97, 7126.91, 7099.91, 7117.49, 461.611611}}, {
     DateObject[{2020, 4, 17, 1, 45, 0.}, "Instant", "Gregorian", 0.], {
     7117.5, 7117.5, 7091.72, 7107.74, 468.606303}}, {
     DateObject[{2020, 4, 17, 2, 0, 0.}, "Instant", "Gregorian", 0.], {
     7107.86, 7109.24, 7081.63, 7085., 444.333645}}, {
     DateObject[{2020, 4, 17, 2, 15, 0.}, "Instant", "Gregorian", 0.], {7085.,
      7095., 7065., 7086.05, 410.432004}}, {
     DateObject[{2020, 4, 17, 2, 30, 0.}, "Instant", "Gregorian", 0.], {
     7087.33, 7094.11, 7065.73, 7068.92, 437.414812}}, {
     DateObject[{2020, 4, 17, 2, 45, 0.}, "Instant", "Gregorian", 0.], {
     7068.92, 7086.99, 7062.08, 7062.3, 503.008778}}, {
     DateObject[{2020, 4, 17, 3, 0, 0.}, "Instant", "Gregorian", 0.], {
     7062.62, 7079.1, 7047.62, 7067.42, 581.064894}}, {
     DateObject[{2020, 4, 17, 3, 15, 0.}, "Instant", "Gregorian", 0.], {
     7067.42, 7072.23, 7058.01, 7071.11, 299.122374}}, {
     DateObject[{2020, 4, 17, 3, 30, 0.}, "Instant", "Gregorian", 0.], {
     7071.29, 7074.73, 7049.54, 7069.16, 514.330108}}, {
     DateObject[{2020, 4, 17, 3, 45, 0.}, "Instant", "Gregorian", 0.], {
     7069.17, 7096.9, 7065., 7086.18, 475.428583}}, {
     DateObject[{2020, 4, 17, 4, 0, 0.}, "Instant", "Gregorian", 0.], {
     7086.18, 7087.76, 7037.4, 7060.74, 736.401928}}, {
     DateObject[{2020, 4, 17, 4, 15, 0.}, "Instant", "Gregorian", 0.], {
     7060.7, 7064.42, 7050., 7050., 247.264676}}, {
     DateObject[{2020, 4, 17, 4, 30, 0.}, "Instant", "Gregorian", 0.], {7050.,
      7055.92, 7037.48, 7046.54, 328.733978}}, {
     DateObject[{2020, 4, 17, 4, 45, 0.}, "Instant", "Gregorian", 0.], {7046.,
      7051.55, 7015., 7045.83, 828.762388}}, {
     DateObject[{2020, 4, 17, 5, 0, 0.}, "Instant", "Gregorian", 0.], {
     7045.64, 7070.3, 7031.09, 7064.48, 620.389415}}, {
     DateObject[{2020, 4, 17, 5, 15, 0.}, "Instant", "Gregorian", 0.], {
     7064.46, 7073.13, 7052.09, 7062.23, 265.918701}}, {
     DateObject[{2020, 4, 17, 5, 30, 0.}, "Instant", "Gregorian", 0.], {
     7062.47, 7077.4, 7056.29, 7073.8, 284.790017}}, {
     DateObject[{2020, 4, 17, 5, 45, 0.}, "Instant", "Gregorian", 0.], {
     7073.9, 7084.95, 7065.78, 7066.98, 336.715785}}, {
     DateObject[{2020, 4, 17, 6, 0, 0.}, "Instant", "Gregorian", 0.], {
     7067.52, 7067.62, 7041.67, 7055.79, 352.876412}}, {
     DateObject[{2020, 4, 17, 6, 15, 0.}, "Instant", "Gregorian", 0.], {
     7056.4, 7064.11, 7020., 7033.86, 820.747176}}, {
     DateObject[{2020, 4, 17, 6, 30, 0.}, "Instant", "Gregorian", 0.], {
     7034.66, 7048.67, 7029.51, 7043.56, 497.436389}}, {
     DateObject[{2020, 4, 17, 6, 45, 0.}, "Instant", "Gregorian", 0.], {
     7043.54, 7059.54, 7033.65, 7057.35, 332.931788}}, {
     DateObject[{2020, 4, 17, 7, 0, 0.}, "Instant", "Gregorian", 0.], {
     7057.63, 7059.76, 7037.05, 7040.79, 467.060736}}, {
     DateObject[{2020, 4, 17, 7, 15, 0.}, "Instant", "Gregorian", 0.], {
     7040.79, 7068., 7040.79, 7066.94, 553.090225}}, {
     DateObject[{2020, 4, 17, 7, 30, 0.}, "Instant", "Gregorian", 0.], {
     7066.94, 7067.72, 7053.94, 7055.38, 167.792276}}}, Automatic, Automatic, 
   ImageSize -> Large, PlotTheme -> "Marketing"],
  ImageSizeCache->{533., {267., 273.}},
  SingleEvaluation->True]], "Output",
 CellLabel->"Out[22]=",ExpressionUUID->"e74105c9-9d63-42c4-ab5c-6ca044722a36"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Account ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "ea1fd234-f43f-4acf-a7f7-2ec7e30e3f82"]
}], "Section",ExpressionUUID->"e09f9995-4a0f-42fa-a8ea-15026d084805"],

Cell["Not null balances", "Text",ExpressionUUID->"d9b58248-031f-4ccb-b6ed-f6b735071ff5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"SortBy", "[", 
   RowBox[{"#free", "&"}], "]"}], " ", "@", " ", "\n", 
  RowBox[{
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"#free", " ", ">", " ", "0"}], "&"}], "]"}], " ", "@", " ", "\n", 
   RowBox[{
    RowBox[{"BinanceAccountInfo", "[", "]"}], "[", "\"\<balances\>\"", 
    "]"}]}]}]], "Code",
 CellLabel->"In[23]:=",ExpressionUUID->"f775a8e1-33f6-4580-b32e-43ca0382ad8e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"GAS\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "9.8`*^-7"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BCHSV\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "4.9`*^-6"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"ADD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0004`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"MEETONE\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0004`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"ATD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"EOP\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.0008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BTC\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.00080128`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"IQ\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.00408`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"BNB\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.00967672`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"SUB\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "0.864`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"EON\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "1.5008`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], "\[RightAssociation]"}], 
   ",", 
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\<\"asset\"\>", "\[Rule]", "\<\"MOD\"\>"}], ",", 
     RowBox[{"\<\"free\"\>", "\[Rule]", "14.65`"}], ",", 
     RowBox[{"\<\"locked\"\>", "\[Rule]", "0.`"}]}], 
    "\[RightAssociation]"}]}], "}"}]], "Output",
 CellLabel->"Out[23]=",ExpressionUUID->"754475f9-fbd9-4114-ba88-b1dfe1c7b58f"]
}, Open  ]],

Cell["Old trades", "Text",ExpressionUUID->"f8d07e71-daf7-433f-9362-7e20b700fcf6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceMyTrades", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[24]:=",ExpressionUUID->"01613f79-19a5-4c3c-beba-095d6aedc9c6"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"id\"\>", "\[Rule]", "17056810"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "44470524"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             RowBox[{"\<\"price\"\>", "\[Rule]", "8750.`"}], ",", 
             RowBox[{"\<\"qty\"\>", "\[Rule]", "0.013617`"}], ",", 
             RowBox[{"\<\"quoteQty\"\>", "\[Rule]", "119.14875`"}], ",", 
             RowBox[{"\<\"commission\"\>", "\[Rule]", "0.03574462`"}], ",", 
             RowBox[{"\<\"commissionAsset\"\>", "\[Rule]", "\<\"USDT\"\>"}], 
             ",", 
             RowBox[{"\<\"time\"\>", "\[Rule]", 
              TemplateBox[{
                RowBox[{"\"Wed 14 Feb 2018 04:07:40\"", 
                  StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
                RowBox[{"DateObject", "[", 
                  RowBox[{
                    RowBox[{"{", 
                    
                    RowBox[{
                    "2018", ",", "2", ",", "14", ",", "4", ",", "7", ",", 
                    "40.19799995422363`"}], "}"}], ",", "\"Instant\"", ",", 
                    "\"Gregorian\"", ",", "0.`"}], "]"}]},
               "DateObject",
               Editable->False]}], ",", 
             RowBox[{"\<\"isBuyer\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isMaker\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}], ",", 
           TemplateBox[{"378"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"\[LeftAssociation]", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "\[RightAssociation]"}], ",", 
           RowBox[{"\[LeftAssociation]", 
            RowBox[{
             RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
             RowBox[{"\<\"id\"\>", "\[Rule]", "73573796"}], ",", 
             RowBox[{"\<\"orderId\"\>", "\[Rule]", "173127381"}], ",", 
             RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
              RowBox[{"-", "1"}]}], ",", 
             TemplateBox[{"6"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"\<\"isBuyer\"\>", "\[Rule]", "True"}], ",", 
             RowBox[{"\<\"isMaker\"\>", "\[Rule]", "False"}], ",", 
             RowBox[{"\<\"isBestMatch\"\>", "\[Rule]", "True"}]}], 
            "\[RightAssociation]"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 23044328995006451657, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 23044328995006451657, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 24, 23044328995006451657, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23044328995006451657 === $SessionID, 
   Out[24], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[24]=",ExpressionUUID->"eed23080-cb03-4bce-8fb1-cdc2e3ca02ae"]
}, Open  ]],

Cell["All orders", "Text",ExpressionUUID->"13a71be2-af50-432a-b8ca-4e720e0de512"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrdersAll", "[", "\"\<BTCUSDT\>\"", "]"}]], "Code",
 CellLabel->"In[25]:=",ExpressionUUID->"1889e211-656d-481f-8c90-103c98cb07cb"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{65., {3., 9.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 23044328995006451657, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 23044328995006451657, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 25, 23044328995006451657, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[23044328995006451657 === $SessionID, 
   Out[25], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->"Out[25]=",ExpressionUUID->"1f1ecf73-e8a2-402f-a85d-2c47c760316c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Trade ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "a86e6acc-071c-49d2-a5c7-2f92f6c731c4"]
}], "Section",ExpressionUUID->"482fb9d1-e3c2-49bd-ba45-234ae199bf0a"],

Cell["Create order", "Text",ExpressionUUID->"1fc533a0-d971-47a9-a6d8-61c68e627123"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceSell", "[", 
  RowBox[{"\"\<BTCUSDT\>\"", ",", " ", "0.0008", ",", " ", "15000"}], 
  "]"}]], "Code",
 CellLabel->"In[27]:=",ExpressionUUID->"3095bba1-89df-4cd7-bce1-36b331431b4a"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "1856529260"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"hb3kY1ONrorHNx1xxPqlO8\"\>"}], ",", 
   RowBox[{"\<\"transactTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Fri 17 Apr 2020 07:33:54\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
              "54.992000102996826`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "15000.`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.0008`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
   RowBox[{"\<\"fills\"\>", "\[Rule]", 
    RowBox[{"{", "}"}]}]}], "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[27]=",ExpressionUUID->"6b2a845e-7101-4850-a18b-8f1c8c6c8153"]
}, Open  ]],

Cell["Current opened orders", "Text",ExpressionUUID->"65ba1a24-fbcd-42e9-a9cd-bf9b83d0c080"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"orders", " ", "=", " ", 
  RowBox[{"BinanceOrdersNow", "[", "\"\<BTCUSDT\>\"", "]"}]}]], "Code",
 CellLabel->"In[28]:=",ExpressionUUID->"c3552983-922d-4fba-bef9-622c6490d388"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[LeftAssociation]", 
   RowBox[{
    RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
    RowBox[{"\<\"orderId\"\>", "\[Rule]", "1856529260"}], ",", 
    RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
     RowBox[{"-", "1"}]}], ",", 
    RowBox[{"\<\"clientOrderId\"\>", 
     "\[Rule]", "\<\"hb3kY1ONrorHNx1xxPqlO8\"\>"}], ",", 
    RowBox[{"\<\"price\"\>", "\[Rule]", "15000.`"}], ",", 
    RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.0008`"}], ",", 
    RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
    RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
    RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
    RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
    RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
    RowBox[{"\<\"time\"\>", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\"Fri 17 Apr 2020 07:33:54\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
               "54.992000102996826`"}], "}"}], ",", "\"Instant\"", ",", 
           "\"Gregorian\"", ",", "0.`"}], "]"}]},
      "DateObject",
      Editable->False]}], ",", 
    RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
     TemplateBox[{
       RowBox[{"\"Fri 17 Apr 2020 07:33:54\"", 
         StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
       RowBox[{"DateObject", "[", 
         RowBox[{
           RowBox[{"{", 
             
             RowBox[{"2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
               "54.992000102996826`"}], "}"}], ",", "\"Instant\"", ",", 
           "\"Gregorian\"", ",", "0.`"}], "]"}]},
      "DateObject",
      Editable->False]}], ",", 
    RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
    RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
   "\[RightAssociation]"}], "}"}]], "Output",
 CellLabel->"Out[28]=",ExpressionUUID->"dafddc97-8a8d-452c-a92c-b806d15ec148"]
}, Open  ]],

Cell["Get order info", "Text",ExpressionUUID->"cdd8f6ff-a394-4170-b86d-e8d3ee865c3e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrderGet", "[", 
  RowBox[{"\"\<BTCUSDT\>\"", ",", " ", 
   RowBox[{"orders", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<orderId\>\""}], "]"}], "]"}]}], 
  "]"}]], "Code",
 CellLabel->"In[29]:=",ExpressionUUID->"195e0e47-8174-4f90-9359-620cbb3ebd20"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "1856529260"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"hb3kY1ONrorHNx1xxPqlO8\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "15000.`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.0008`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"NEW\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}], ",", 
   RowBox[{"\<\"stopPrice\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"icebergQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"time\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Fri 17 Apr 2020 07:33:54\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
              "54.992000102996826`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"updateTime\"\>", "\[Rule]", 
    TemplateBox[{
      RowBox[{"\"Fri 17 Apr 2020 07:33:54\"", 
        StyleBox["\"GMT\"", FontColor -> GrayLevel[0.5]]}], 
      RowBox[{"DateObject", "[", 
        RowBox[{
          RowBox[{"{", 
            
            RowBox[{"2020", ",", "4", ",", "17", ",", "7", ",", "33", ",", 
              "54.992000102996826`"}], "}"}], ",", "\"Instant\"", ",", 
          "\"Gregorian\"", ",", "0.`"}], "]"}]},
     "DateObject",
     Editable->False]}], ",", 
   RowBox[{"\<\"isWorking\"\>", "\[Rule]", "True"}], ",", 
   RowBox[{"\<\"origQuoteOrderQty\"\>", "\[Rule]", "0.`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[29]=",ExpressionUUID->"f9c5d73f-72b3-41c6-ae4a-ff4d53339f39"]
}, Open  ]],

Cell["Cancel order", "Text",ExpressionUUID->"e677df2c-f8f3-4f09-933a-251a752270b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BinanceOrderCancel", "[", 
  RowBox[{"\"\<BTCUSDT\>\"", ",", " ", 
   RowBox[{"orders", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", " ", "\"\<orderId\>\""}], "]"}], "]"}]}], 
  "]"}]], "Code",
 CellLabel->"In[31]:=",ExpressionUUID->"a9d746fb-07c1-4a14-8a0e-8564481e7624"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"symbol\"\>", "\[Rule]", "\<\"BTCUSDT\"\>"}], ",", 
   RowBox[{"\<\"origClientOrderId\"\>", 
    "\[Rule]", "\<\"hb3kY1ONrorHNx1xxPqlO8\"\>"}], ",", 
   RowBox[{"\<\"orderId\"\>", "\[Rule]", "1856529260"}], ",", 
   RowBox[{"\<\"orderListId\"\>", "\[Rule]", 
    RowBox[{"-", "1"}]}], ",", 
   RowBox[{"\<\"clientOrderId\"\>", 
    "\[Rule]", "\<\"nGKeIdutFEY5UrzIyEMqkx\"\>"}], ",", 
   RowBox[{"\<\"price\"\>", "\[Rule]", "15000.`"}], ",", 
   RowBox[{"\<\"origQty\"\>", "\[Rule]", "0.0008`"}], ",", 
   RowBox[{"\<\"executedQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"cummulativeQuoteQty\"\>", "\[Rule]", "0.`"}], ",", 
   RowBox[{"\<\"status\"\>", "\[Rule]", "\<\"CANCELED\"\>"}], ",", 
   RowBox[{"\<\"timeInForce\"\>", "\[Rule]", "\<\"GTC\"\>"}], ",", 
   RowBox[{"\<\"type\"\>", "\[Rule]", "\<\"LIMIT\"\>"}], ",", 
   RowBox[{"\<\"side\"\>", "\[Rule]", "\<\"SELL\"\>"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellLabel->"Out[31]=",ExpressionUUID->"5b986a6d-b714-44b7-af7c-f890530a26de"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Bitfinex ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Title",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "43ee2af0-a766-4ff6-b79a-63f402a80817"]
}], "Title",ExpressionUUID->"6fcb8e12-a0a6-4764-870e-6bebacdd1418"],

Cell[CellGroupData[{

Cell[TextData[{
 "Initialization ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "ec114bb9-7e95-49c6-be67-43895d968ad6"]
}], "Section",ExpressionUUID->"37108aa5-17b9-4816-b5fe-a0cf0a44131d"],

Cell["Initialization cell", "Text",ExpressionUUID->"0c1e183f-85e2-4ba4-a45e-30dcbbfe1d16"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"$HistoryLength", " ", "=", " ", "0"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], " "}], "\n", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<ExchangeLink`\>\"", "]"}], ";"}]}], "Code",
 CellLabel->
  "In[489]:=",ExpressionUUID->"318732a5-44c8-4d06-96ab-44432ee0bcb2"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Information ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "72457e5d-90b8-4167-994a-e227592369af"]
}], "Section",ExpressionUUID->"cf4faeb9-3350-4c41-b88c-66698d797063"],

Cell[BoxData[
 RowBox[{"?", "ExchangeLink`Bitfinex`*"}]], "Code",
 CellLabel->
  "In[470]:=",ExpressionUUID->"ba8975a4-127c-4799-9824-c8c027b4277c"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Status ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "763df3dd-220d-44fa-a22a-52b43e39b307"]
}], "Section",ExpressionUUID->"de6269bd-a912-4641-bb50-1ba4882d3941"],

Cell["Check that bitfinex API is available", "Text",ExpressionUUID->"fa44804e-643a-41a2-9228-fb8c2ca88d1a"],

Cell[BoxData[
 RowBox[{"BitfinexPlatformStatus", "[", "]"}]], "Code",
 CellLabel->
  "In[481]:=",ExpressionUUID->"dc09e745-0886-4049-8ef5-e5e33716dc59"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tickers ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "d8bf005b-9e41-4cd3-8e74-b6d8f99232da"]
}], "Section",ExpressionUUID->"fea3f36d-135e-4d26-898a-1aad48a28b56"],

Cell["All tickers", "Text",ExpressionUUID->"e9d46fa8-fdad-4b80-a3d2-4a28482fb3ae"],

Cell[BoxData[{
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"BitfinexTickers", "[", "]"}], "[", "\"\<funds\>\"", "]"}], 
  "]"}], "\n", 
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"BitfinexTickers", "[", "]"}], "[", "\"\<tickers\>\"", "]"}], 
  "]"}]}], "Code",
 CellLabel->
  "In[482]:=",ExpressionUUID->"974a820c-d507-4a56-8fb6-cb5e22647f57"],

Cell["One ticker", "Text",ExpressionUUID->"539fefb7-8e0b-46c5-b50b-824fe948e5f7"],

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"BitfinexTickers", "[", "\"\<BTCUSD\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"\"\<tickers\>\"", ",", " ", "1"}], "]"}], "]"}], "]"}]], "Code",
 CellLabel->
  "In[474]:=",ExpressionUUID->"6a7072ba-9442-4460-b9f8-39b348830180"],

Cell["One fund", "Text",ExpressionUUID->"132675a1-e006-4052-baa8-ecd13e86f1e8"],

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"BitfinexTickers", "[", "\"\<USD\>\"", "]"}], "[", 
   RowBox[{"[", 
    RowBox[{"\"\<funds\>\"", ",", " ", "1"}], "]"}], "]"}], "]"}]], "Code",
 CellLabel->
  "In[475]:=",ExpressionUUID->"1ebbe1fa-fcad-45ee-aff3-15078d707980"],

Cell["Several tickers", "Text",ExpressionUUID->"eb6cdd60-c52d-4539-b710-dd32786bc564"],

Cell[BoxData[{
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"BitfinexTickers", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<BTCUSD\>\"", ",", " ", "\"\<ETHUSD\>\"", ",", " ", 
      "\"\<LTCUSD\>\""}], "}"}], "]"}], "[", "\"\<tickers\>\"", "]"}], 
  "]"}], "\n", 
 RowBox[{"Dataset", "[", 
  RowBox[{
   RowBox[{"BitfinexTickers", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<USD\>\"", ",", " ", "\"\<BTC\>\"", ",", " ", "\"\<ETH\>\"", ",", 
      " ", "\"\<LTC\>\""}], "}"}], "]"}], "[", "\"\<funds\>\"", "]"}], 
  "]"}]}], "Code",
 CellLabel->
  "In[476]:=",ExpressionUUID->"c15505bb-3bb6-43de-a7bc-5f7521955e49"],

Cell["Only ticker data", "Text",ExpressionUUID->"8ba2132a-b65a-478d-9f31-97de40f2be64"],

Cell[BoxData[
 RowBox[{"BitfinexTicker", "[", "\"\<BTCUSD\>\"", "]"}]], "Code",
 CellLabel->
  "In[479]:=",ExpressionUUID->"ad89935c-1f15-4a1f-8efa-fb8289489902"],

Cell["One fund data", "Text",ExpressionUUID->"2e795723-a8a5-41cc-8a35-c2772e115a89"],

Cell[BoxData[
 RowBox[{"BitfinexTicker", "[", "\"\<USD\>\"", "]"}]], "Code",
 CellLabel->
  "In[480]:=",ExpressionUUID->"2176d846-a5ce-4b24-af72-296381e68b0a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Trades ",
 Cell[BoxData[
  ButtonBox[
   StyleBox["\<\"\[FilledRightTriangle]\"\>", "Section",
    StripOnInput->False],
   Appearance->"Frameless",
   ButtonFunction:>(SelectionMove[
      EvaluationBox[], All, Expression]; SelectionMove[
      InputNotebook[], All, Cell]; SelectionMove[
      InputNotebook[], All, CellGroup]; SelectionEvaluateCreateCell[
      InputNotebook[]]; Null),
   Evaluator->Automatic,
   Method->"Preemptive"]],ExpressionUUID->
  "1c84ff5b-04b4-41e8-b84e-a1e8b177710f"]
}], "Section",ExpressionUUID->"5e6a6069-3193-4da5-845c-6cbbf157c1a7"],

Cell["All trades", "Text",ExpressionUUID->"4c743ea3-3bfc-45d9-b1e2-604db554baa8"],

Cell[BoxData[
 RowBox[{"BitfinexTrades", "[", "\"\<USD\>\"", "]"}]], "Code",
 CellLabel->
  "In[492]:=",ExpressionUUID->"2b680a0b-cb65-45d2-ba33-ff4dee2e8cf6"]
}, Closed]]
}, Closed]]
},
WindowSize->{958, 988},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
TrackCellChangeTimes->False,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 14, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a1b83e48-477a-40f8-a3f3-a486b9d760e5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 584, 15, 100, "Title",ExpressionUUID->"9eca8ff7-13d5-40c4-a3cc-a9f5dc8b827e"],
Cell[CellGroupData[{
Cell[1189, 41, 595, 15, 71, "Section",ExpressionUUID->"85dbaebe-6107-4b20-9130-c46c7e50e26e"],
Cell[1787, 58, 90, 0, 34, "Text",ExpressionUUID->"dbacc3fb-88a9-4e2b-baad-98418b92a2e4"],
Cell[1880, 60, 393, 10, 87, "Code",ExpressionUUID->"cfcbf03f-ee8c-42bc-a3dd-feb3e7685177"]
}, Closed]],
Cell[CellGroupData[{
Cell[2310, 75, 592, 15, 57, "Section",ExpressionUUID->"73d0ce59-6d19-4bb1-9d8e-a6bb73743769"],
Cell[CellGroupData[{
Cell[2927, 94, 142, 2, 50, "Code",ExpressionUUID->"ff3e357e-6a4a-49e2-94a3-7d0123522ea2"],
Cell[3072, 98, 15419, 345, 213, "Output",ExpressionUUID->"33d5d9fb-4025-4366-8971-f9b1466faaa9"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[18540, 449, 593, 15, 57, "Section",ExpressionUUID->"19d08895-99cf-44a8-be98-356a0246821d"],
Cell[19136, 466, 110, 0, 34, "Text",ExpressionUUID->"da47335a-6c7f-411a-8322-15afd7b2f9e6"],
Cell[19249, 468, 213, 3, 34, "Text",ExpressionUUID->"aed67ffc-dfa0-4820-a0b2-6b31a983f72f"],
Cell[CellGroupData[{
Cell[19487, 475, 181, 3, 69, "Code",ExpressionUUID->"e18d0e66-fca2-4120-8dfd-c53971823316"],
Cell[19671, 480, 158, 2, 32, "Output",ExpressionUUID->"08a17aa0-0076-485e-8417-5a3c06543390"],
Cell[19832, 484, 646, 15, 43, "Output",ExpressionUUID->"77bed437-ef78-4248-968e-9b5cf1d63431"]
}, Open  ]],
Cell[20493, 502, 183, 3, 34, "Text",ExpressionUUID->"257132ec-378a-4fcf-ba61-7ff6f5c66466"],
Cell[CellGroupData[{
Cell[20701, 509, 144, 2, 50, "Code",ExpressionUUID->"d5560724-e0ea-4935-86c3-5baaf73145fe"],
Cell[20848, 513, 11470, 282, 180, "Output",ExpressionUUID->"0a772b2e-b915-456b-ab5b-999c23ebb6fc"]
}, Open  ]],
Cell[32333, 798, 90, 0, 34, "Text",ExpressionUUID->"1062b093-279e-45f7-ae63-a53ffcdd8aae"],
Cell[CellGroupData[{
Cell[32448, 802, 1477, 34, 213, "Code",ExpressionUUID->"8d54f4e8-7193-4f5c-a896-c3c41726d23b"],
Cell[33928, 838, 267800, 5520, 559, "Output",ExpressionUUID->"62bc4bdd-f849-4029-9271-964adbbcd7c1"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[301777, 6364, 592, 15, 57, "Section",ExpressionUUID->"7de50ca5-b424-4d16-9c24-084e2a93fb72"],
Cell[302372, 6381, 89, 0, 34, "Text",ExpressionUUID->"a311d586-9708-4079-a6c4-0776847830b9"],
Cell[302464, 6383, 1341, 41, 141, "Code",ExpressionUUID->"23cc675d-b614-432d-94c6-2e02b45b7756"],
Cell[CellGroupData[{
Cell[303830, 6428, 2364, 61, 231, "Code",ExpressionUUID->"36b69576-c104-483d-ba11-4cbfc622bd0d"],
Cell[306197, 6491, 28687, 621, 357, "Output",ExpressionUUID->"efc3a6d1-98bf-433a-a672-95311f1542a2"]
}, Open  ]],
Cell[334899, 7115, 124, 0, 34, "Text",ExpressionUUID->"47244977-20ba-41e8-8ff1-cbc6c84c91ae"],
Cell[CellGroupData[{
Cell[335048, 7119, 158, 2, 50, "Code",ExpressionUUID->"e6ed90fb-8bfc-4b64-819e-90251de0cb1d"],
Cell[335209, 7123, 11080, 274, 190, "Output",ExpressionUUID->"b23161b5-d99a-411c-944f-9aff42170447"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[346338, 7403, 594, 15, 57, "Section",ExpressionUUID->"5dddb3da-776a-4018-a8c3-0e3342aec9df"],
Cell[346935, 7420, 99, 0, 34, "Text",ExpressionUUID->"851ea476-ea07-4edb-878c-c57626c8c10d"],
Cell[CellGroupData[{
Cell[347059, 7424, 157, 2, 50, "Code",ExpressionUUID->"24b606ad-2a3c-42fc-8a9f-9f70f04ad9c4"],
Cell[347219, 7428, 296, 6, 32, "Output",ExpressionUUID->"95593f8c-5b04-44b8-9901-1fe5494cb98d"]
}, Open  ]],
Cell[347530, 7437, 188, 3, 34, "Text",ExpressionUUID->"22a1a003-2215-4c63-8c32-ef270786eba6"],
Cell[CellGroupData[{
Cell[347743, 7444, 158, 2, 50, "Code",ExpressionUUID->"b1ff0c1f-2faa-431c-81c8-38196664eb53"],
Cell[347904, 7448, 2402, 49, 138, "Output",ExpressionUUID->"cc6bf3a8-3287-4cba-b281-0b4c93f09448"]
}, Open  ]],
Cell[350321, 7500, 97, 0, 34, "Text",ExpressionUUID->"90011771-aa6d-4a51-a03b-2dabfb2af9c0"],
Cell[CellGroupData[{
Cell[350443, 7504, 139, 2, 50, "Code",ExpressionUUID->"2310e413-cc81-4a60-9de3-b41431513742"],
Cell[350585, 7508, 11444, 280, 198, "Output",ExpressionUUID->"2f976f2c-002e-4053-95c6-54dd5c2ad2ff"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[362078, 7794, 586, 15, 57, "Section",ExpressionUUID->"0aaa0e67-21c7-435f-9947-a7a64ab7ec67"],
Cell[362667, 7811, 103, 0, 34, "Text",ExpressionUUID->"e38b7723-1790-4a6a-bc87-ec50edcb7c7b"],
Cell[CellGroupData[{
Cell[362795, 7815, 149, 1, 31, "Item",ExpressionUUID->"992f0dca-f1d2-4496-b20f-7e697dd4752e"],
Cell[362947, 7818, 282, 4, 31, "Item",ExpressionUUID->"842bfae4-d1a9-4d3a-a2de-ce36db47c142"],
Cell[363232, 7824, 198, 3, 31, "Item",ExpressionUUID->"8b749f3d-a648-4dbf-88be-0c14410af40f"]
}, Open  ]],
Cell[363445, 7830, 114, 0, 34, "Text",ExpressionUUID->"087a20fa-a7fe-4e97-a4ae-636a966fd567"],
Cell[CellGroupData[{
Cell[363584, 7834, 794, 19, 105, "Code",ExpressionUUID->"d6670f0f-137b-4a1f-90ce-c53d978b3165"],
Cell[364381, 7855, 25061, 389, 559, "Output",ExpressionUUID->"e74105c9-9d63-42c4-ab5c-6ca044722a36"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[389491, 8250, 588, 15, 57, "Section",ExpressionUUID->"e09f9995-4a0f-42fa-a8ea-15026d084805"],
Cell[390082, 8267, 88, 0, 34, "Text",ExpressionUUID->"d9b58248-031f-4ccb-b6ed-f6b735071ff5"],
Cell[CellGroupData[{
Cell[390195, 8271, 423, 11, 87, "Code",ExpressionUUID->"f775a8e1-33f6-4580-b32e-43ca0382ad8e"],
Cell[390621, 8284, 3243, 75, 136, "Output",ExpressionUUID->"754475f9-fbd9-4114-ba88-b1dfe1c7b58f"]
}, Open  ]],
Cell[393879, 8362, 81, 0, 34, "Text",ExpressionUUID->"f8d07e71-daf7-433f-9362-7e20b700fcf6"],
Cell[CellGroupData[{
Cell[393985, 8366, 160, 2, 50, "Code",ExpressionUUID->"01613f79-19a5-4c3c-beba-095d6aedc9c6"],
Cell[394148, 8370, 11340, 277, 202, "Output",ExpressionUUID->"eed23080-cb03-4bce-8fb1-cdc2e3ca02ae"]
}, Open  ]],
Cell[405503, 8650, 81, 0, 34, "Text",ExpressionUUID->"13a71be2-af50-432a-b8ca-4e720e0de512"],
Cell[CellGroupData[{
Cell[405609, 8654, 161, 2, 50, "Code",ExpressionUUID->"1889e211-656d-481f-8c90-103c98cb07cb"],
Cell[405773, 8658, 8723, 227, 92, "Output",ExpressionUUID->"1f1ecf73-e8a2-402f-a85d-2c47c760316c"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[414545, 8891, 586, 15, 57, "Section",ExpressionUUID->"482fb9d1-e3c2-49bd-ba45-234ae199bf0a"],
Cell[415134, 8908, 83, 0, 34, "Text",ExpressionUUID->"1fc533a0-d971-47a9-a6d8-61c68e627123"],
Cell[CellGroupData[{
Cell[415242, 8912, 211, 4, 50, "Code",ExpressionUUID->"3095bba1-89df-4cd7-bce1-36b331431b4a"],
Cell[415456, 8918, 1551, 32, 97, "Output",ExpressionUUID->"6b2a845e-7101-4850-a18b-8f1c8c6c8153"]
}, Open  ]],
Cell[417022, 8953, 92, 0, 34, "Text",ExpressionUUID->"65ba1a24-fbcd-42e9-a9cd-bf9b83d0c080"],
Cell[CellGroupData[{
Cell[417139, 8957, 199, 3, 50, "Code",ExpressionUUID->"c3552983-922d-4fba-bef9-622c6490d388"],
Cell[417341, 8962, 2291, 49, 123, "Output",ExpressionUUID->"dafddc97-8a8d-452c-a92c-b806d15ec148"]
}, Open  ]],
Cell[419647, 9014, 85, 0, 34, "Text",ExpressionUUID->"cdd8f6ff-a394-4170-b86d-e8d3ee865c3e"],
Cell[CellGroupData[{
Cell[419757, 9018, 295, 7, 50, "Code",ExpressionUUID->"195e0e47-8174-4f90-9359-620cbb3ebd20"],
Cell[420055, 9027, 2222, 48, 119, "Output",ExpressionUUID->"f9c5d73f-72b3-41c6-ae4a-ff4d53339f39"]
}, Open  ]],
Cell[422292, 9078, 83, 0, 34, "Text",ExpressionUUID->"e677df2c-f8f3-4f09-933a-251a752270b0"],
Cell[CellGroupData[{
Cell[422400, 9082, 298, 7, 50, "Code",ExpressionUUID->"a9d746fb-07c1-4a14-8a0e-8564481e7624"],
Cell[422701, 9091, 1077, 20, 71, "Output",ExpressionUUID->"5b986a6d-b714-44b7-af7c-f890530a26de"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[423839, 9118, 585, 15, 74, "Title",ExpressionUUID->"6fcb8e12-a0a6-4764-870e-6bebacdd1418"],
Cell[CellGroupData[{
Cell[424449, 9137, 595, 15, 71, "Section",ExpressionUUID->"37108aa5-17b9-4816-b5fe-a0cf0a44131d"],
Cell[425047, 9154, 90, 0, 36, "Text",ExpressionUUID->"0c1e183f-85e2-4ba4-a45e-30dcbbfe1d16"],
Cell[425140, 9156, 398, 11, 98, "Code",ExpressionUUID->"318732a5-44c8-4d06-96ab-44432ee0bcb2"]
}, Closed]],
Cell[CellGroupData[{
Cell[425575, 9172, 592, 15, 57, "Section",ExpressionUUID->"cf4faeb9-3350-4c41-b88c-66698d797063"],
Cell[426170, 9189, 148, 3, 53, "Code",ExpressionUUID->"ba8975a4-127c-4799-9824-c8c027b4277c"]
}, Closed]],
Cell[CellGroupData[{
Cell[426355, 9197, 587, 15, 57, "Section",ExpressionUUID->"de6269bd-a912-4641-bb50-1ba4882d3941"],
Cell[426945, 9214, 107, 0, 36, "Text",ExpressionUUID->"fa44804e-643a-41a2-9228-fb8c2ca88d1a"],
Cell[427055, 9216, 152, 3, 53, "Code",ExpressionUUID->"dc09e745-0886-4049-8ef5-e5e33716dc59"]
}, Closed]],
Cell[CellGroupData[{
Cell[427244, 9224, 588, 15, 57, "Section",ExpressionUUID->"fea3f36d-135e-4d26-898a-1aad48a28b56"],
Cell[427835, 9241, 82, 0, 36, "Text",ExpressionUUID->"e9d46fa8-fdad-4b80-a3d2-4a28482fb3ae"],
Cell[427920, 9243, 352, 10, 76, "Code",ExpressionUUID->"974a820c-d507-4a56-8fb6-cb5e22647f57"],
Cell[428275, 9255, 81, 0, 36, "Text",ExpressionUUID->"539fefb7-8e0b-46c5-b50b-824fe948e5f7"],
Cell[428359, 9257, 294, 7, 53, "Code",ExpressionUUID->"6a7072ba-9442-4460-b9f8-39b348830180"],
Cell[428656, 9266, 79, 0, 36, "Text",ExpressionUUID->"132675a1-e006-4052-baa8-ecd13e86f1e8"],
Cell[428738, 9268, 289, 7, 53, "Code",ExpressionUUID->"1ebbe1fa-fcad-45ee-aff3-15078d707980"],
Cell[429030, 9277, 86, 0, 36, "Text",ExpressionUUID->"eb6cdd60-c52d-4539-b710-dd32786bc564"],
Cell[429119, 9279, 624, 18, 76, "Code",ExpressionUUID->"c15505bb-3bb6-43de-a7bc-5f7521955e49"],
Cell[429746, 9299, 87, 0, 36, "Text",ExpressionUUID->"8ba2132a-b65a-478d-9f31-97de40f2be64"],
Cell[429836, 9301, 162, 3, 53, "Code",ExpressionUUID->"ad89935c-1f15-4a1f-8efa-fb8289489902"],
Cell[430001, 9306, 84, 0, 36, "Text",ExpressionUUID->"2e795723-a8a5-41cc-8a35-c2772e115a89"],
Cell[430088, 9308, 159, 3, 53, "Code",ExpressionUUID->"2176d846-a5ce-4b24-af72-296381e68b0a"]
}, Closed]],
Cell[CellGroupData[{
Cell[430284, 9316, 587, 15, 57, "Section",ExpressionUUID->"5e6a6069-3193-4da5-845c-6cbbf157c1a7"],
Cell[430874, 9333, 81, 0, 36, "Text",ExpressionUUID->"4c743ea3-3bfc-45d9-b1e2-604db554baa8"],
Cell[430958, 9335, 159, 3, 53, "Code",ExpressionUUID->"2b680a0b-cb65-45d2-ba33-ff4dee2e8cf6"]
}, Closed]]
}, Closed]]
}
]
*)

